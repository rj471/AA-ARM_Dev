   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"usbhw_lpc.c"
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.bss._pfnDevIntHandler,"aw",%nobits
  24              		.align	2
  27              	_pfnDevIntHandler:
  28 0000 00000000 		.space	4
  29              		.section	.bss._apfnEPIntHandlers,"aw",%nobits
  30              		.align	2
  33              	_apfnEPIntHandlers:
  34 0000 00000000 		.space	64
  34      00000000 
  34      00000000 
  34      00000000 
  34      00000000 
  35              		.section	.bss._pfnFrameHandler,"aw",%nobits
  36              		.align	2
  39              	_pfnFrameHandler:
  40 0000 00000000 		.space	4
  41              		.section	.text.Wait4DevInt,"ax",%progbits
  42              		.align	2
  43              		.thumb
  44              		.thumb_func
  46              	Wait4DevInt:
  47              	.LFB29:
  48              		.file 1 "..//drivers/USB/usbhw_lpc.c"
   1:..//drivers/USB/usbhw_lpc.c **** /*
   2:..//drivers/USB/usbhw_lpc.c **** 	LPCUSB, an USB device driver for LPC microcontrollers	
   3:..//drivers/USB/usbhw_lpc.c **** 	Copyright (C) 2006 Bertrik Sikken (bertrik@sikken.nl)
   4:..//drivers/USB/usbhw_lpc.c **** 
   5:..//drivers/USB/usbhw_lpc.c **** 	Redistribution and use in source and binary forms, with or without
   6:..//drivers/USB/usbhw_lpc.c **** 	modification, are permitted provided that the following conditions are met:
   7:..//drivers/USB/usbhw_lpc.c **** 
   8:..//drivers/USB/usbhw_lpc.c **** 	1. Redistributions of source code must retain the above copyright
   9:..//drivers/USB/usbhw_lpc.c **** 	   notice, this list of conditions and the following disclaimer.
  10:..//drivers/USB/usbhw_lpc.c **** 	2. Redistributions in binary form must reproduce the above copyright
  11:..//drivers/USB/usbhw_lpc.c **** 	   notice, this list of conditions and the following disclaimer in the
  12:..//drivers/USB/usbhw_lpc.c **** 	   documentation and/or other materials provided with the distribution.
  13:..//drivers/USB/usbhw_lpc.c **** 	3. The name of the author may not be used to endorse or promote products
  14:..//drivers/USB/usbhw_lpc.c **** 	   derived from this software without specific prior written permission.
  15:..//drivers/USB/usbhw_lpc.c **** 
  16:..//drivers/USB/usbhw_lpc.c **** 	THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
  17:..//drivers/USB/usbhw_lpc.c **** 	IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  18:..//drivers/USB/usbhw_lpc.c **** 	OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  19:..//drivers/USB/usbhw_lpc.c **** 	IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, 
  20:..//drivers/USB/usbhw_lpc.c **** 	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  21:..//drivers/USB/usbhw_lpc.c **** 	NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  22:..//drivers/USB/usbhw_lpc.c **** 	DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  23:..//drivers/USB/usbhw_lpc.c **** 	THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  24:..//drivers/USB/usbhw_lpc.c **** 	(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  25:..//drivers/USB/usbhw_lpc.c **** 	THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  26:..//drivers/USB/usbhw_lpc.c **** */
  27:..//drivers/USB/usbhw_lpc.c **** 
  28:..//drivers/USB/usbhw_lpc.c **** 
  29:..//drivers/USB/usbhw_lpc.c **** /** @file
  30:..//drivers/USB/usbhw_lpc.c **** 	USB hardware layer
  31:..//drivers/USB/usbhw_lpc.c ****  */
  32:..//drivers/USB/usbhw_lpc.c **** 
  33:..//drivers/USB/usbhw_lpc.c **** // CodeRed - include the LPCUSB type.h file rather than NXP one directly
  34:..//drivers/USB/usbhw_lpc.c **** //#include "type.h"
  35:..//drivers/USB/usbhw_lpc.c **** #include "lpc_types.h"
  36:..//drivers/USB/usbhw_lpc.c **** 
  37:..//drivers/USB/usbhw_lpc.c **** #include "usbdebug.h"
  38:..//drivers/USB/usbhw_lpc.c **** #include "usbhw_lpc.h"
  39:..//drivers/USB/usbhw_lpc.c **** #include "usbapi.h"
  40:..//drivers/USB/usbhw_lpc.c **** //  Configure LED pin functions
  41:..//drivers/USB/usbhw_lpc.c **** //
  42:..//drivers/USB/usbhw_lpc.c **** //  LED pin functions
  43:..//drivers/USB/usbhw_lpc.c **** //
  44:..//drivers/USB/usbhw_lpc.c **** //  Function            Pin Port	Bits	Pin Select Register
  45:..//drivers/USB/usbhw_lpc.c **** //  ------------------- --- -----	----	-------------------
  46:..//drivers/USB/usbhw_lpc.c **** //  P2.0 GPIO Port 2.0	xx	P2.0	1:0		PINSEL4
  47:..//drivers/USB/usbhw_lpc.c **** //  P2.1 GPIO Port 2.1	xx	P2.1	3:2		PINSEL4
  48:..//drivers/USB/usbhw_lpc.c **** //  P2.2 GPIO Port 2.2  xx  P2.2	5:4		PINSEL4
  49:..//drivers/USB/usbhw_lpc.c **** //  P2.3 GPIO Port 2.3  xx  P2.3	7:6		PINSEL4
  50:..//drivers/USB/usbhw_lpc.c **** //  P2.4 GPIO Port 2.4	xx	P2.4	9:8		PINSEL4
  51:..//drivers/USB/usbhw_lpc.c **** //  P2.5 GPIO Port 2.5	xx	P2.5  11:10		PINSEL4
  52:..//drivers/USB/usbhw_lpc.c **** //  P2.6 GPIO Port 2.6	xx	P2.6  13:12		PINSEL4
  53:..//drivers/USB/usbhw_lpc.c **** //  P2.7 GPIO Port 2.7	xx	P2.7  15:14		PINSEL4
  54:..//drivers/USB/usbhw_lpc.c **** //
  55:..//drivers/USB/usbhw_lpc.c **** // OFF - LED state 0
  56:..//drivers/USB/usbhw_lpc.c **** // ON  - LED state 1
  57:..//drivers/USB/usbhw_lpc.c **** //
  58:..//drivers/USB/usbhw_lpc.c **** //  '*' as GPIO
  59:..//drivers/USB/usbhw_lpc.c **** 
  60:..//drivers/USB/usbhw_lpc.c **** #define NO_LEDS		8
  61:..//drivers/USB/usbhw_lpc.c **** 
  62:..//drivers/USB/usbhw_lpc.c **** #define LED_0		(1 << 0)
  63:..//drivers/USB/usbhw_lpc.c **** #define LED_1		(1 << 1)
  64:..//drivers/USB/usbhw_lpc.c **** #define LED_2		(1 << 2)
  65:..//drivers/USB/usbhw_lpc.c **** #define LED_3		(1 << 3)
  66:..//drivers/USB/usbhw_lpc.c **** #define LED_4		(1 << 4)
  67:..//drivers/USB/usbhw_lpc.c **** #define LED_5		(1 << 5)
  68:..//drivers/USB/usbhw_lpc.c **** #define LED_6		(1 << 6)
  69:..//drivers/USB/usbhw_lpc.c **** #define LED_7		(1 << 7)
  70:..//drivers/USB/usbhw_lpc.c **** 
  71:..//drivers/USB/usbhw_lpc.c **** #ifdef DEBUG
  72:..//drivers/USB/usbhw_lpc.c **** // comment out the following line if you don't want to use debug LEDs
  73:..//drivers/USB/usbhw_lpc.c **** //#define DEBUG_LED
  74:..//drivers/USB/usbhw_lpc.c **** #endif
  75:..//drivers/USB/usbhw_lpc.c **** 
  76:..//drivers/USB/usbhw_lpc.c **** #ifdef DEBUG_LED
  77:..//drivers/USB/usbhw_lpc.c **** #define DEBUG_LED_ON(x)		FIO2SET = (1 << x);
  78:..//drivers/USB/usbhw_lpc.c **** #define DEBUG_LED_OFF(x)	FIO2CLR = (1 << x);
  79:..//drivers/USB/usbhw_lpc.c **** #define DEBUG_LED_INIT(x)	PINSEL2 &= ~(0x3 << (2*x)); FIO2DIR |= (1 << x); DEBUG_LED_OFF(x);
  80:..//drivers/USB/usbhw_lpc.c **** #else
  81:..//drivers/USB/usbhw_lpc.c **** #define DEBUG_LED_INIT(x)	/**< LED initialisation macro */
  82:..//drivers/USB/usbhw_lpc.c **** #define DEBUG_LED_ON(x)		/**< turn LED on */
  83:..//drivers/USB/usbhw_lpc.c **** #define DEBUG_LED_OFF(x)	/**< turn LED off */
  84:..//drivers/USB/usbhw_lpc.c **** #endif
  85:..//drivers/USB/usbhw_lpc.c **** 
  86:..//drivers/USB/usbhw_lpc.c **** /** Installed device interrupt handler */
  87:..//drivers/USB/usbhw_lpc.c **** static TFnDevIntHandler *_pfnDevIntHandler = NULL;
  88:..//drivers/USB/usbhw_lpc.c **** /** Installed endpoint interrupt handlers */
  89:..//drivers/USB/usbhw_lpc.c **** static TFnEPIntHandler	*_apfnEPIntHandlers[16];
  90:..//drivers/USB/usbhw_lpc.c **** /** Installed frame interrupt handlers */
  91:..//drivers/USB/usbhw_lpc.c **** static TFnFrameHandler	*_pfnFrameHandler = NULL;
  92:..//drivers/USB/usbhw_lpc.c **** 
  93:..//drivers/USB/usbhw_lpc.c **** /** convert from endpoint address to endpoint index */
  94:..//drivers/USB/usbhw_lpc.c **** #define EP2IDX(bEP)	((((bEP)&0xF)<<1)|(((bEP)&0x80)>>7))
  95:..//drivers/USB/usbhw_lpc.c **** /** convert from endpoint index to endpoint address */
  96:..//drivers/USB/usbhw_lpc.c **** #define IDX2EP(idx)	((((idx)<<7)&0x80)|(((idx)>>1)&0xF))
  97:..//drivers/USB/usbhw_lpc.c **** 
  98:..//drivers/USB/usbhw_lpc.c **** 
  99:..//drivers/USB/usbhw_lpc.c **** 
 100:..//drivers/USB/usbhw_lpc.c **** /**
 101:..//drivers/USB/usbhw_lpc.c **** 	Local function to wait for a device interrupt (and clear it)
 102:..//drivers/USB/usbhw_lpc.c **** 		
 103:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	dwIntr		Bitmask of interrupts to wait for	
 104:..//drivers/USB/usbhw_lpc.c ****  */
 105:..//drivers/USB/usbhw_lpc.c **** static void Wait4DevInt(U32 dwIntr)
 106:..//drivers/USB/usbhw_lpc.c **** {
  49              		.loc 1 106 0
  50              		.cfi_startproc
  51              		@ args = 0, pretend = 0, frame = 8
  52              		@ frame_needed = 1, uses_anonymous_args = 0
  53              		@ link register save eliminated.
  54 0000 80B4     		push	{r7}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 4
  57 0002 83B0     		sub	sp, sp, #12
  58              	.LCFI1:
  59              		.cfi_def_cfa_offset 16
  60 0004 00AF     		add	r7, sp, #0
  61              		.cfi_offset 7, -4
  62              	.LCFI2:
  63              		.cfi_def_cfa_register 7
  64 0006 7860     		str	r0, [r7, #4]
  65              	.L2:
 107:..//drivers/USB/usbhw_lpc.c **** 	// wait for specific interrupt
 108:..//drivers/USB/usbhw_lpc.c **** 	while ((LPC_USB->USBDevIntSt & dwIntr) != dwIntr);
  66              		.loc 1 108 0
  67 0008 4CF20003 		movw	r3, #:lower16:1342226432
  68 000c C5F20003 		movt	r3, #:upper16:1342226432
  69 0010 D3F80022 		ldr	r2, [r3, #512]
  70 0014 7B68     		ldr	r3, [r7, #4]
  71 0016 02EA0302 		and	r2, r2, r3
  72 001a 7B68     		ldr	r3, [r7, #4]
  73 001c 9A42     		cmp	r2, r3
  74 001e F3D1     		bne	.L2
 109:..//drivers/USB/usbhw_lpc.c **** 	// clear the interrupt bits
 110:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBDevIntClr = dwIntr;
  75              		.loc 1 110 0
  76 0020 4CF20003 		movw	r3, #:lower16:1342226432
  77 0024 C5F20003 		movt	r3, #:upper16:1342226432
  78 0028 7A68     		ldr	r2, [r7, #4]
  79 002a C3F80822 		str	r2, [r3, #520]
 111:..//drivers/USB/usbhw_lpc.c **** }
  80              		.loc 1 111 0
  81 002e 07F10C07 		add	r7, r7, #12
  82 0032 BD46     		mov	sp, r7
  83 0034 80BC     		pop	{r7}
  84 0036 7047     		bx	lr
  85              		.cfi_endproc
  86              	.LFE29:
  88              		.section	.text.USBHwCmd,"ax",%progbits
  89              		.align	2
  90              		.thumb
  91              		.thumb_func
  93              	USBHwCmd:
  94              	.LFB30:
 112:..//drivers/USB/usbhw_lpc.c **** 
 113:..//drivers/USB/usbhw_lpc.c **** 
 114:..//drivers/USB/usbhw_lpc.c **** /**
 115:..//drivers/USB/usbhw_lpc.c **** 	Local function to send a command to the USB protocol engine
 116:..//drivers/USB/usbhw_lpc.c **** 		
 117:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bCmd		Command to send
 118:..//drivers/USB/usbhw_lpc.c ****  */
 119:..//drivers/USB/usbhw_lpc.c **** static void USBHwCmd(uint8_t bCmd)
 120:..//drivers/USB/usbhw_lpc.c **** {
  95              		.loc 1 120 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 8
  98              		@ frame_needed = 1, uses_anonymous_args = 0
  99 0000 80B5     		push	{r7, lr}
 100              	.LCFI3:
 101              		.cfi_def_cfa_offset 8
 102 0002 82B0     		sub	sp, sp, #8
 103              	.LCFI4:
 104              		.cfi_def_cfa_offset 16
 105 0004 00AF     		add	r7, sp, #0
 106              		.cfi_offset 14, -4
 107              		.cfi_offset 7, -8
 108              	.LCFI5:
 109              		.cfi_def_cfa_register 7
 110 0006 0346     		mov	r3, r0
 111 0008 FB71     		strb	r3, [r7, #7]
 121:..//drivers/USB/usbhw_lpc.c **** 	// clear CDFULL/CCEMTY
 122:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBDevIntClr = CDFULL | CCEMTY;
 112              		.loc 1 122 0
 113 000a 4CF20003 		movw	r3, #:lower16:1342226432
 114 000e C5F20003 		movt	r3, #:upper16:1342226432
 115 0012 4FF03002 		mov	r2, #48
 116 0016 C3F80822 		str	r2, [r3, #520]
 123:..//drivers/USB/usbhw_lpc.c **** 	// write command code
 124:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBCmdCode = 0x00000500 | (bCmd << 16);
 117              		.loc 1 124 0
 118 001a 4CF20003 		movw	r3, #:lower16:1342226432
 119 001e C5F20003 		movt	r3, #:upper16:1342226432
 120 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 121 0024 4FEA0242 		lsl	r2, r2, #16
 122 0028 42F4A062 		orr	r2, r2, #1280
 123 002c C3F81022 		str	r2, [r3, #528]
 125:..//drivers/USB/usbhw_lpc.c **** 	Wait4DevInt(CCEMTY);
 124              		.loc 1 125 0
 125 0030 4FF01000 		mov	r0, #16
 126 0034 40F20003 		movw	r3, #:lower16:Wait4DevInt
 127 0038 C0F20003 		movt	r3, #:upper16:Wait4DevInt
 128 003c 9847     		blx	r3
 126:..//drivers/USB/usbhw_lpc.c **** }
 129              		.loc 1 126 0
 130 003e 07F10807 		add	r7, r7, #8
 131 0042 BD46     		mov	sp, r7
 132 0044 80BD     		pop	{r7, pc}
 133              		.cfi_endproc
 134              	.LFE30:
 136 0046 00BF     		.section	.text.USBHwCmdWrite,"ax",%progbits
 137              		.align	2
 138              		.thumb
 139              		.thumb_func
 141              	USBHwCmdWrite:
 142              	.LFB31:
 127:..//drivers/USB/usbhw_lpc.c **** 
 128:..//drivers/USB/usbhw_lpc.c **** 
 129:..//drivers/USB/usbhw_lpc.c **** /**
 130:..//drivers/USB/usbhw_lpc.c **** 	Local function to send a command + data to the USB protocol engine
 131:..//drivers/USB/usbhw_lpc.c **** 		
 132:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bCmd		Command to send
 133:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bData		Data to send
 134:..//drivers/USB/usbhw_lpc.c ****  */
 135:..//drivers/USB/usbhw_lpc.c **** static void USBHwCmdWrite(uint8_t bCmd, U16 bData)
 136:..//drivers/USB/usbhw_lpc.c **** {
 143              		.loc 1 136 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 8
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147 0000 80B5     		push	{r7, lr}
 148              	.LCFI6:
 149              		.cfi_def_cfa_offset 8
 150 0002 82B0     		sub	sp, sp, #8
 151              	.LCFI7:
 152              		.cfi_def_cfa_offset 16
 153 0004 00AF     		add	r7, sp, #0
 154              		.cfi_offset 14, -4
 155              		.cfi_offset 7, -8
 156              	.LCFI8:
 157              		.cfi_def_cfa_register 7
 158 0006 0246     		mov	r2, r0
 159 0008 0B46     		mov	r3, r1
 160 000a FA71     		strb	r2, [r7, #7]
 161 000c BB80     		strh	r3, [r7, #4]	@ movhi
 137:..//drivers/USB/usbhw_lpc.c **** 	// write command code
 138:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmd(bCmd);
 162              		.loc 1 138 0
 163 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 164 0010 1846     		mov	r0, r3
 165 0012 40F20003 		movw	r3, #:lower16:USBHwCmd
 166 0016 C0F20003 		movt	r3, #:upper16:USBHwCmd
 167 001a 9847     		blx	r3
 139:..//drivers/USB/usbhw_lpc.c **** 
 140:..//drivers/USB/usbhw_lpc.c **** 	// write command data
 141:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBCmdCode = 0x00000100 | (bData << 16);
 168              		.loc 1 141 0
 169 001c 4CF20003 		movw	r3, #:lower16:1342226432
 170 0020 C5F20003 		movt	r3, #:upper16:1342226432
 171 0024 BA88     		ldrh	r2, [r7, #4]
 172 0026 4FEA0242 		lsl	r2, r2, #16
 173 002a 42F48072 		orr	r2, r2, #256
 174 002e C3F81022 		str	r2, [r3, #528]
 142:..//drivers/USB/usbhw_lpc.c **** 	Wait4DevInt(CCEMTY);
 175              		.loc 1 142 0
 176 0032 4FF01000 		mov	r0, #16
 177 0036 40F20003 		movw	r3, #:lower16:Wait4DevInt
 178 003a C0F20003 		movt	r3, #:upper16:Wait4DevInt
 179 003e 9847     		blx	r3
 143:..//drivers/USB/usbhw_lpc.c **** }
 180              		.loc 1 143 0
 181 0040 07F10807 		add	r7, r7, #8
 182 0044 BD46     		mov	sp, r7
 183 0046 80BD     		pop	{r7, pc}
 184              		.cfi_endproc
 185              	.LFE31:
 187              		.section	.text.USBHwCmdRead,"ax",%progbits
 188              		.align	2
 189              		.thumb
 190              		.thumb_func
 192              	USBHwCmdRead:
 193              	.LFB32:
 144:..//drivers/USB/usbhw_lpc.c **** 
 145:..//drivers/USB/usbhw_lpc.c **** 
 146:..//drivers/USB/usbhw_lpc.c **** /**
 147:..//drivers/USB/usbhw_lpc.c **** 	Local function to send a command to the USB protocol engine and read data
 148:..//drivers/USB/usbhw_lpc.c **** 		
 149:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bCmd		Command to send
 150:..//drivers/USB/usbhw_lpc.c **** 
 151:..//drivers/USB/usbhw_lpc.c **** 	@return the data
 152:..//drivers/USB/usbhw_lpc.c ****  */
 153:..//drivers/USB/usbhw_lpc.c **** static uint8_t USBHwCmdRead(uint8_t bCmd)
 154:..//drivers/USB/usbhw_lpc.c **** {
 194              		.loc 1 154 0
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 8
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198 0000 80B5     		push	{r7, lr}
 199              	.LCFI9:
 200              		.cfi_def_cfa_offset 8
 201 0002 82B0     		sub	sp, sp, #8
 202              	.LCFI10:
 203              		.cfi_def_cfa_offset 16
 204 0004 00AF     		add	r7, sp, #0
 205              		.cfi_offset 14, -4
 206              		.cfi_offset 7, -8
 207              	.LCFI11:
 208              		.cfi_def_cfa_register 7
 209 0006 0346     		mov	r3, r0
 210 0008 FB71     		strb	r3, [r7, #7]
 155:..//drivers/USB/usbhw_lpc.c **** 	// write command code
 156:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmd(bCmd);
 211              		.loc 1 156 0
 212 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 213 000c 1846     		mov	r0, r3
 214 000e 40F20003 		movw	r3, #:lower16:USBHwCmd
 215 0012 C0F20003 		movt	r3, #:upper16:USBHwCmd
 216 0016 9847     		blx	r3
 157:..//drivers/USB/usbhw_lpc.c **** 	
 158:..//drivers/USB/usbhw_lpc.c **** 	// get data
 159:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBCmdCode = 0x00000200 | (bCmd << 16);
 217              		.loc 1 159 0
 218 0018 4CF20003 		movw	r3, #:lower16:1342226432
 219 001c C5F20003 		movt	r3, #:upper16:1342226432
 220 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 221 0022 4FEA0242 		lsl	r2, r2, #16
 222 0026 42F40072 		orr	r2, r2, #512
 223 002a C3F81022 		str	r2, [r3, #528]
 160:..//drivers/USB/usbhw_lpc.c **** 	Wait4DevInt(CDFULL);
 224              		.loc 1 160 0
 225 002e 4FF02000 		mov	r0, #32
 226 0032 40F20003 		movw	r3, #:lower16:Wait4DevInt
 227 0036 C0F20003 		movt	r3, #:upper16:Wait4DevInt
 228 003a 9847     		blx	r3
 161:..//drivers/USB/usbhw_lpc.c **** 	return LPC_USB->USBCmdData;
 229              		.loc 1 161 0
 230 003c 4CF20003 		movw	r3, #:lower16:1342226432
 231 0040 C5F20003 		movt	r3, #:upper16:1342226432
 232 0044 D3F81432 		ldr	r3, [r3, #532]
 233 0048 DBB2     		uxtb	r3, r3
 162:..//drivers/USB/usbhw_lpc.c **** }
 234              		.loc 1 162 0
 235 004a 1846     		mov	r0, r3
 236 004c 07F10807 		add	r7, r7, #8
 237 0050 BD46     		mov	sp, r7
 238 0052 80BD     		pop	{r7, pc}
 239              		.cfi_endproc
 240              	.LFE32:
 242              		.section	.text.USBHwEPRealize,"ax",%progbits
 243              		.align	2
 244              		.thumb
 245              		.thumb_func
 247              	USBHwEPRealize:
 248              	.LFB33:
 163:..//drivers/USB/usbhw_lpc.c **** 
 164:..//drivers/USB/usbhw_lpc.c **** 
 165:..//drivers/USB/usbhw_lpc.c **** /**
 166:..//drivers/USB/usbhw_lpc.c **** 	'Realizes' an endpoint, meaning that buffer space is reserved for
 167:..//drivers/USB/usbhw_lpc.c **** 	it. An endpoint needs to be realised before it can be used.
 168:..//drivers/USB/usbhw_lpc.c **** 		
 169:..//drivers/USB/usbhw_lpc.c **** 	From experiments, it appears that a USB reset causes USBReEP to
 170:..//drivers/USB/usbhw_lpc.c **** 	re-initialise to 3 (= just the control endpoints).
 171:..//drivers/USB/usbhw_lpc.c **** 	However, a USB bus reset does not disturb the USBMaxPSize settings.
 172:..//drivers/USB/usbhw_lpc.c **** 		
 173:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	idx			Endpoint index
 174:..//drivers/USB/usbhw_lpc.c **** 	@param [in] wMaxPSize	Maximum packet size for this endpoint
 175:..//drivers/USB/usbhw_lpc.c ****  */
 176:..//drivers/USB/usbhw_lpc.c **** static void USBHwEPRealize(int idx, U16 wMaxPSize)
 177:..//drivers/USB/usbhw_lpc.c **** {
 249              		.loc 1 177 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253 0000 80B5     		push	{r7, lr}
 254              	.LCFI12:
 255              		.cfi_def_cfa_offset 8
 256 0002 82B0     		sub	sp, sp, #8
 257              	.LCFI13:
 258              		.cfi_def_cfa_offset 16
 259 0004 00AF     		add	r7, sp, #0
 260              		.cfi_offset 14, -4
 261              		.cfi_offset 7, -8
 262              	.LCFI14:
 263              		.cfi_def_cfa_register 7
 264 0006 7860     		str	r0, [r7, #4]
 265 0008 0B46     		mov	r3, r1
 266 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 178:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBReEP |= (1 << idx);
 267              		.loc 1 178 0
 268 000c 4CF20003 		movw	r3, #:lower16:1342226432
 269 0010 C5F20003 		movt	r3, #:upper16:1342226432
 270 0014 4CF20002 		movw	r2, #:lower16:1342226432
 271 0018 C5F20002 		movt	r2, #:upper16:1342226432
 272 001c D2F84412 		ldr	r1, [r2, #580]
 273 0020 4FF00100 		mov	r0, #1
 274 0024 7A68     		ldr	r2, [r7, #4]
 275 0026 00FA02F2 		lsl	r2, r0, r2
 276 002a 41EA0202 		orr	r2, r1, r2
 277 002e C3F84422 		str	r2, [r3, #580]
 179:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBEpInd = idx;
 278              		.loc 1 179 0
 279 0032 4CF20003 		movw	r3, #:lower16:1342226432
 280 0036 C5F20003 		movt	r3, #:upper16:1342226432
 281 003a 7A68     		ldr	r2, [r7, #4]
 282 003c C3F84822 		str	r2, [r3, #584]
 180:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBMaxPSize = wMaxPSize;
 283              		.loc 1 180 0
 284 0040 4CF20003 		movw	r3, #:lower16:1342226432
 285 0044 C5F20003 		movt	r3, #:upper16:1342226432
 286 0048 7A88     		ldrh	r2, [r7, #2]
 287 004a C3F84C22 		str	r2, [r3, #588]
 181:..//drivers/USB/usbhw_lpc.c **** 	Wait4DevInt(EP_RLZED);
 288              		.loc 1 181 0
 289 004e 4FF48070 		mov	r0, #256
 290 0052 40F20003 		movw	r3, #:lower16:Wait4DevInt
 291 0056 C0F20003 		movt	r3, #:upper16:Wait4DevInt
 292 005a 9847     		blx	r3
 182:..//drivers/USB/usbhw_lpc.c **** }
 293              		.loc 1 182 0
 294 005c 07F10807 		add	r7, r7, #8
 295 0060 BD46     		mov	sp, r7
 296 0062 80BD     		pop	{r7, pc}
 297              		.cfi_endproc
 298              	.LFE33:
 300              		.section	.text.USBHwEPEnable,"ax",%progbits
 301              		.align	2
 302              		.thumb
 303              		.thumb_func
 305              	USBHwEPEnable:
 306              	.LFB34:
 183:..//drivers/USB/usbhw_lpc.c **** 
 184:..//drivers/USB/usbhw_lpc.c **** 
 185:..//drivers/USB/usbhw_lpc.c **** /**
 186:..//drivers/USB/usbhw_lpc.c **** 	Enables or disables an endpoint
 187:..//drivers/USB/usbhw_lpc.c **** 		
 188:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	idx		Endpoint index
 189:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	fEnable	TRUE to enable, FALSE to disable
 190:..//drivers/USB/usbhw_lpc.c ****  */
 191:..//drivers/USB/usbhw_lpc.c **** static void USBHwEPEnable(int idx, BOOL fEnable)
 192:..//drivers/USB/usbhw_lpc.c **** {
 307              		.loc 1 192 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 8
 310              		@ frame_needed = 1, uses_anonymous_args = 0
 311 0000 80B5     		push	{r7, lr}
 312              	.LCFI15:
 313              		.cfi_def_cfa_offset 8
 314 0002 82B0     		sub	sp, sp, #8
 315              	.LCFI16:
 316              		.cfi_def_cfa_offset 16
 317 0004 00AF     		add	r7, sp, #0
 318              		.cfi_offset 14, -4
 319              		.cfi_offset 7, -8
 320              	.LCFI17:
 321              		.cfi_def_cfa_register 7
 322 0006 7860     		str	r0, [r7, #4]
 323 0008 3960     		str	r1, [r7, #0]
 193:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmdWrite(CMD_EP_SET_STATUS | idx, fEnable ? 0 : EP_DA);
 324              		.loc 1 193 0
 325 000a 7B68     		ldr	r3, [r7, #4]
 326 000c DBB2     		uxtb	r3, r3
 327 000e 43F04003 		orr	r3, r3, #64
 328 0012 DBB2     		uxtb	r3, r3
 329 0014 DAB2     		uxtb	r2, r3
 330 0016 3B68     		ldr	r3, [r7, #0]
 331 0018 002B     		cmp	r3, #0
 332 001a 02D0     		beq	.L13
 333 001c 4FF00003 		mov	r3, #0
 334 0020 01E0     		b	.L14
 335              	.L13:
 336 0022 4FF02003 		mov	r3, #32
 337              	.L14:
 338 0026 1046     		mov	r0, r2
 339 0028 1946     		mov	r1, r3
 340 002a 40F20003 		movw	r3, #:lower16:USBHwCmdWrite
 341 002e C0F20003 		movt	r3, #:upper16:USBHwCmdWrite
 342 0032 9847     		blx	r3
 194:..//drivers/USB/usbhw_lpc.c **** }
 343              		.loc 1 194 0
 344 0034 07F10807 		add	r7, r7, #8
 345 0038 BD46     		mov	sp, r7
 346 003a 80BD     		pop	{r7, pc}
 347              		.cfi_endproc
 348              	.LFE34:
 350              		.section	.text.USBHwEPConfig,"ax",%progbits
 351              		.align	2
 352              		.global	USBHwEPConfig
 353              		.thumb
 354              		.thumb_func
 356              	USBHwEPConfig:
 357              	.LFB35:
 195:..//drivers/USB/usbhw_lpc.c **** 
 196:..//drivers/USB/usbhw_lpc.c **** 
 197:..//drivers/USB/usbhw_lpc.c **** /**
 198:..//drivers/USB/usbhw_lpc.c **** 	Configures an endpoint and enables it
 199:..//drivers/USB/usbhw_lpc.c **** 		
 200:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bEP				Endpoint number
 201:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	wMaxPacketSize	Maximum packet size for this EP
 202:..//drivers/USB/usbhw_lpc.c ****  */
 203:..//drivers/USB/usbhw_lpc.c **** void USBHwEPConfig(uint8_t bEP, U16 wMaxPacketSize)
 204:..//drivers/USB/usbhw_lpc.c **** {
 358              		.loc 1 204 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 16
 361              		@ frame_needed = 1, uses_anonymous_args = 0
 362 0000 80B5     		push	{r7, lr}
 363              	.LCFI18:
 364              		.cfi_def_cfa_offset 8
 365 0002 84B0     		sub	sp, sp, #16
 366              	.LCFI19:
 367              		.cfi_def_cfa_offset 24
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_offset 14, -4
 370              		.cfi_offset 7, -8
 371              	.LCFI20:
 372              		.cfi_def_cfa_register 7
 373 0006 0246     		mov	r2, r0
 374 0008 0B46     		mov	r3, r1
 375 000a FA71     		strb	r2, [r7, #7]
 376 000c BB80     		strh	r3, [r7, #4]	@ movhi
 205:..//drivers/USB/usbhw_lpc.c **** 	int idx;
 206:..//drivers/USB/usbhw_lpc.c **** 	
 207:..//drivers/USB/usbhw_lpc.c **** 	idx = EP2IDX(bEP);
 377              		.loc 1 207 0
 378 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 379 0010 03F00F03 		and	r3, r3, #15
 380 0014 4FEA4302 		lsl	r2, r3, #1
 381 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 382 001a 4FEAD313 		lsr	r3, r3, #7
 383 001e DBB2     		uxtb	r3, r3
 384 0020 42EA0303 		orr	r3, r2, r3
 385 0024 FB60     		str	r3, [r7, #12]
 208:..//drivers/USB/usbhw_lpc.c **** 	
 209:..//drivers/USB/usbhw_lpc.c **** 	// realise EP
 210:..//drivers/USB/usbhw_lpc.c **** 	USBHwEPRealize(idx, wMaxPacketSize);
 386              		.loc 1 210 0
 387 0026 BB88     		ldrh	r3, [r7, #4]
 388 0028 F868     		ldr	r0, [r7, #12]
 389 002a 1946     		mov	r1, r3
 390 002c 40F20003 		movw	r3, #:lower16:USBHwEPRealize
 391 0030 C0F20003 		movt	r3, #:upper16:USBHwEPRealize
 392 0034 9847     		blx	r3
 211:..//drivers/USB/usbhw_lpc.c **** 
 212:..//drivers/USB/usbhw_lpc.c **** 	// enable EP
 213:..//drivers/USB/usbhw_lpc.c **** 	USBHwEPEnable(idx, TRUE);
 393              		.loc 1 213 0
 394 0036 F868     		ldr	r0, [r7, #12]
 395 0038 4FF00101 		mov	r1, #1
 396 003c 40F20003 		movw	r3, #:lower16:USBHwEPEnable
 397 0040 C0F20003 		movt	r3, #:upper16:USBHwEPEnable
 398 0044 9847     		blx	r3
 214:..//drivers/USB/usbhw_lpc.c **** }
 399              		.loc 1 214 0
 400 0046 07F11007 		add	r7, r7, #16
 401 004a BD46     		mov	sp, r7
 402 004c 80BD     		pop	{r7, pc}
 403              		.cfi_endproc
 404              	.LFE35:
 406 004e 00BF     		.section	.text.USBHwRegisterEPIntHandler,"ax",%progbits
 407              		.align	2
 408              		.global	USBHwRegisterEPIntHandler
 409              		.thumb
 410              		.thumb_func
 412              	USBHwRegisterEPIntHandler:
 413              	.LFB36:
 215:..//drivers/USB/usbhw_lpc.c **** 
 216:..//drivers/USB/usbhw_lpc.c **** 
 217:..//drivers/USB/usbhw_lpc.c **** /**
 218:..//drivers/USB/usbhw_lpc.c **** 	Registers an endpoint event callback
 219:..//drivers/USB/usbhw_lpc.c **** 		
 220:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bEP				Endpoint number
 221:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	pfnHandler		Callback function
 222:..//drivers/USB/usbhw_lpc.c ****  */
 223:..//drivers/USB/usbhw_lpc.c **** void USBHwRegisterEPIntHandler(uint8_t bEP, TFnEPIntHandler *pfnHandler)
 224:..//drivers/USB/usbhw_lpc.c **** {
 414              		.loc 1 224 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 16
 417              		@ frame_needed = 1, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419 0000 80B4     		push	{r7}
 420              	.LCFI21:
 421              		.cfi_def_cfa_offset 4
 422 0002 85B0     		sub	sp, sp, #20
 423              	.LCFI22:
 424              		.cfi_def_cfa_offset 24
 425 0004 00AF     		add	r7, sp, #0
 426              		.cfi_offset 7, -4
 427              	.LCFI23:
 428              		.cfi_def_cfa_register 7
 429 0006 0346     		mov	r3, r0
 430 0008 3960     		str	r1, [r7, #0]
 431 000a FB71     		strb	r3, [r7, #7]
 225:..//drivers/USB/usbhw_lpc.c **** 	int idx;
 226:..//drivers/USB/usbhw_lpc.c **** 	
 227:..//drivers/USB/usbhw_lpc.c **** 	idx = EP2IDX(bEP);
 432              		.loc 1 227 0
 433 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 434 000e 03F00F03 		and	r3, r3, #15
 435 0012 4FEA4302 		lsl	r2, r3, #1
 436 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 437 0018 4FEAD313 		lsr	r3, r3, #7
 438 001c DBB2     		uxtb	r3, r3
 439 001e 42EA0303 		orr	r3, r2, r3
 440 0022 FB60     		str	r3, [r7, #12]
 228:..//drivers/USB/usbhw_lpc.c **** 
 229:..//drivers/USB/usbhw_lpc.c **** 	ASSERT(idx<32);
 230:..//drivers/USB/usbhw_lpc.c **** 
 231:..//drivers/USB/usbhw_lpc.c **** 	/* add handler to list of EP handlers */
 232:..//drivers/USB/usbhw_lpc.c **** 	_apfnEPIntHandlers[idx / 2] = pfnHandler;
 441              		.loc 1 232 0
 442 0024 FB68     		ldr	r3, [r7, #12]
 443 0026 4FEAD372 		lsr	r2, r3, #31
 444 002a 1344     		add	r3, r2, r3
 445 002c 4FEA6303 		asr	r3, r3, #1
 446 0030 1A46     		mov	r2, r3
 447 0032 40F20003 		movw	r3, #:lower16:_apfnEPIntHandlers
 448 0036 C0F20003 		movt	r3, #:upper16:_apfnEPIntHandlers
 449 003a 3968     		ldr	r1, [r7, #0]
 450 003c 43F82210 		str	r1, [r3, r2, lsl #2]
 233:..//drivers/USB/usbhw_lpc.c **** 	
 234:..//drivers/USB/usbhw_lpc.c **** 	/* enable EP interrupt */
 235:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBEpIntEn |= (1 << idx);
 451              		.loc 1 235 0
 452 0040 4CF20003 		movw	r3, #:lower16:1342226432
 453 0044 C5F20003 		movt	r3, #:upper16:1342226432
 454 0048 4CF20002 		movw	r2, #:lower16:1342226432
 455 004c C5F20002 		movt	r2, #:upper16:1342226432
 456 0050 D2F83412 		ldr	r1, [r2, #564]
 457 0054 4FF00100 		mov	r0, #1
 458 0058 FA68     		ldr	r2, [r7, #12]
 459 005a 00FA02F2 		lsl	r2, r0, r2
 460 005e 41EA0202 		orr	r2, r1, r2
 461 0062 C3F83422 		str	r2, [r3, #564]
 236:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBDevIntEn |= EP_SLOW;
 462              		.loc 1 236 0
 463 0066 4CF20003 		movw	r3, #:lower16:1342226432
 464 006a C5F20003 		movt	r3, #:upper16:1342226432
 465 006e 4CF20002 		movw	r2, #:lower16:1342226432
 466 0072 C5F20002 		movt	r2, #:upper16:1342226432
 467 0076 D2F80422 		ldr	r2, [r2, #516]
 468 007a 42F00402 		orr	r2, r2, #4
 469 007e C3F80422 		str	r2, [r3, #516]
 237:..//drivers/USB/usbhw_lpc.c **** 	
 238:..//drivers/USB/usbhw_lpc.c **** 	DBG("Registered handler for EP 0x%x\n", bEP);
 239:..//drivers/USB/usbhw_lpc.c **** }
 470              		.loc 1 239 0
 471 0082 07F11407 		add	r7, r7, #20
 472 0086 BD46     		mov	sp, r7
 473 0088 80BC     		pop	{r7}
 474 008a 7047     		bx	lr
 475              		.cfi_endproc
 476              	.LFE36:
 478              		.section	.text.USBHwRegisterDevIntHandler,"ax",%progbits
 479              		.align	2
 480              		.global	USBHwRegisterDevIntHandler
 481              		.thumb
 482              		.thumb_func
 484              	USBHwRegisterDevIntHandler:
 485              	.LFB37:
 240:..//drivers/USB/usbhw_lpc.c **** 
 241:..//drivers/USB/usbhw_lpc.c **** 
 242:..//drivers/USB/usbhw_lpc.c **** /**
 243:..//drivers/USB/usbhw_lpc.c **** 	Registers an device status callback
 244:..//drivers/USB/usbhw_lpc.c **** 		
 245:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	pfnHandler	Callback function
 246:..//drivers/USB/usbhw_lpc.c ****  */
 247:..//drivers/USB/usbhw_lpc.c **** void USBHwRegisterDevIntHandler(TFnDevIntHandler *pfnHandler)
 248:..//drivers/USB/usbhw_lpc.c **** {
 486              		.loc 1 248 0
 487              		.cfi_startproc
 488              		@ args = 0, pretend = 0, frame = 8
 489              		@ frame_needed = 1, uses_anonymous_args = 0
 490              		@ link register save eliminated.
 491 0000 80B4     		push	{r7}
 492              	.LCFI24:
 493              		.cfi_def_cfa_offset 4
 494 0002 83B0     		sub	sp, sp, #12
 495              	.LCFI25:
 496              		.cfi_def_cfa_offset 16
 497 0004 00AF     		add	r7, sp, #0
 498              		.cfi_offset 7, -4
 499              	.LCFI26:
 500              		.cfi_def_cfa_register 7
 501 0006 7860     		str	r0, [r7, #4]
 249:..//drivers/USB/usbhw_lpc.c **** 	_pfnDevIntHandler = pfnHandler;
 502              		.loc 1 249 0
 503 0008 40F20003 		movw	r3, #:lower16:_pfnDevIntHandler
 504 000c C0F20003 		movt	r3, #:upper16:_pfnDevIntHandler
 505 0010 7A68     		ldr	r2, [r7, #4]
 506 0012 1A60     		str	r2, [r3, #0]
 250:..//drivers/USB/usbhw_lpc.c **** 	
 251:..//drivers/USB/usbhw_lpc.c **** 	// enable device interrupt
 252:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBDevIntEn |= DEV_STAT;
 507              		.loc 1 252 0
 508 0014 4CF20003 		movw	r3, #:lower16:1342226432
 509 0018 C5F20003 		movt	r3, #:upper16:1342226432
 510 001c 4CF20002 		movw	r2, #:lower16:1342226432
 511 0020 C5F20002 		movt	r2, #:upper16:1342226432
 512 0024 D2F80422 		ldr	r2, [r2, #516]
 513 0028 42F00802 		orr	r2, r2, #8
 514 002c C3F80422 		str	r2, [r3, #516]
 253:..//drivers/USB/usbhw_lpc.c **** 
 254:..//drivers/USB/usbhw_lpc.c **** 	DBG("Registered handler for device status\n");
 255:..//drivers/USB/usbhw_lpc.c **** }
 515              		.loc 1 255 0
 516 0030 07F10C07 		add	r7, r7, #12
 517 0034 BD46     		mov	sp, r7
 518 0036 80BC     		pop	{r7}
 519 0038 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE37:
 523 003a 00BF     		.section	.text.USBHwRegisterFrameHandler,"ax",%progbits
 524              		.align	2
 525              		.global	USBHwRegisterFrameHandler
 526              		.thumb
 527              		.thumb_func
 529              	USBHwRegisterFrameHandler:
 530              	.LFB38:
 256:..//drivers/USB/usbhw_lpc.c **** 
 257:..//drivers/USB/usbhw_lpc.c **** 
 258:..//drivers/USB/usbhw_lpc.c **** /**
 259:..//drivers/USB/usbhw_lpc.c **** 	Registers the frame callback
 260:..//drivers/USB/usbhw_lpc.c **** 		
 261:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	pfnHandler	Callback function
 262:..//drivers/USB/usbhw_lpc.c ****  */
 263:..//drivers/USB/usbhw_lpc.c **** void USBHwRegisterFrameHandler(TFnFrameHandler *pfnHandler)
 264:..//drivers/USB/usbhw_lpc.c **** {
 531              		.loc 1 264 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 8
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536 0000 80B4     		push	{r7}
 537              	.LCFI27:
 538              		.cfi_def_cfa_offset 4
 539 0002 83B0     		sub	sp, sp, #12
 540              	.LCFI28:
 541              		.cfi_def_cfa_offset 16
 542 0004 00AF     		add	r7, sp, #0
 543              		.cfi_offset 7, -4
 544              	.LCFI29:
 545              		.cfi_def_cfa_register 7
 546 0006 7860     		str	r0, [r7, #4]
 265:..//drivers/USB/usbhw_lpc.c **** 	_pfnFrameHandler = pfnHandler;
 547              		.loc 1 265 0
 548 0008 40F20003 		movw	r3, #:lower16:_pfnFrameHandler
 549 000c C0F20003 		movt	r3, #:upper16:_pfnFrameHandler
 550 0010 7A68     		ldr	r2, [r7, #4]
 551 0012 1A60     		str	r2, [r3, #0]
 266:..//drivers/USB/usbhw_lpc.c **** 	
 267:..//drivers/USB/usbhw_lpc.c **** 	// enable device interrupt
 268:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBDevIntEn |= FRAME;
 552              		.loc 1 268 0
 553 0014 4CF20003 		movw	r3, #:lower16:1342226432
 554 0018 C5F20003 		movt	r3, #:upper16:1342226432
 555 001c 4CF20002 		movw	r2, #:lower16:1342226432
 556 0020 C5F20002 		movt	r2, #:upper16:1342226432
 557 0024 D2F80422 		ldr	r2, [r2, #516]
 558 0028 42F00102 		orr	r2, r2, #1
 559 002c C3F80422 		str	r2, [r3, #516]
 269:..//drivers/USB/usbhw_lpc.c **** 
 270:..//drivers/USB/usbhw_lpc.c **** 	DBG("Registered handler for frame\n");
 271:..//drivers/USB/usbhw_lpc.c **** }
 560              		.loc 1 271 0
 561 0030 07F10C07 		add	r7, r7, #12
 562 0034 BD46     		mov	sp, r7
 563 0036 80BC     		pop	{r7}
 564 0038 7047     		bx	lr
 565              		.cfi_endproc
 566              	.LFE38:
 568 003a 00BF     		.section	.text.USBHwSetAddress,"ax",%progbits
 569              		.align	2
 570              		.global	USBHwSetAddress
 571              		.thumb
 572              		.thumb_func
 574              	USBHwSetAddress:
 575              	.LFB39:
 272:..//drivers/USB/usbhw_lpc.c **** 
 273:..//drivers/USB/usbhw_lpc.c **** 
 274:..//drivers/USB/usbhw_lpc.c **** /**
 275:..//drivers/USB/usbhw_lpc.c **** 	Sets the USB address.
 276:..//drivers/USB/usbhw_lpc.c **** 		
 277:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bAddr		Device address to set
 278:..//drivers/USB/usbhw_lpc.c ****  */
 279:..//drivers/USB/usbhw_lpc.c **** void USBHwSetAddress(uint8_t bAddr)
 280:..//drivers/USB/usbhw_lpc.c **** {
 576              		.loc 1 280 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 8
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              	.LCFI30:
 582              		.cfi_def_cfa_offset 8
 583 0002 82B0     		sub	sp, sp, #8
 584              	.LCFI31:
 585              		.cfi_def_cfa_offset 16
 586 0004 00AF     		add	r7, sp, #0
 587              		.cfi_offset 14, -4
 588              		.cfi_offset 7, -8
 589              	.LCFI32:
 590              		.cfi_def_cfa_register 7
 591 0006 0346     		mov	r3, r0
 592 0008 FB71     		strb	r3, [r7, #7]
 281:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmdWrite(CMD_DEV_SET_ADDRESS, DEV_EN | bAddr);
 593              		.loc 1 281 0
 594 000a FB79     		ldrb	r3, [r7, #7]
 595 000c 6FEA4363 		mvn	r3, r3, lsl #25
 596 0010 6FEA5363 		mvn	r3, r3, lsr #25
 597 0014 DBB2     		uxtb	r3, r3
 598 0016 4FF0D000 		mov	r0, #208
 599 001a 1946     		mov	r1, r3
 600 001c 40F20003 		movw	r3, #:lower16:USBHwCmdWrite
 601 0020 C0F20003 		movt	r3, #:upper16:USBHwCmdWrite
 602 0024 9847     		blx	r3
 282:..//drivers/USB/usbhw_lpc.c **** }
 603              		.loc 1 282 0
 604 0026 07F10807 		add	r7, r7, #8
 605 002a BD46     		mov	sp, r7
 606 002c 80BD     		pop	{r7, pc}
 607              		.cfi_endproc
 608              	.LFE39:
 610 002e 00BF     		.section	.text.USBHwConnect,"ax",%progbits
 611              		.align	2
 612              		.global	USBHwConnect
 613              		.thumb
 614              		.thumb_func
 616              	USBHwConnect:
 617              	.LFB40:
 283:..//drivers/USB/usbhw_lpc.c **** 
 284:..//drivers/USB/usbhw_lpc.c **** 
 285:..//drivers/USB/usbhw_lpc.c **** /**
 286:..//drivers/USB/usbhw_lpc.c **** 	Connects or disconnects from the USB bus
 287:..//drivers/USB/usbhw_lpc.c **** 		
 288:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	fConnect	If TRUE, connect, otherwise disconnect
 289:..//drivers/USB/usbhw_lpc.c ****  */
 290:..//drivers/USB/usbhw_lpc.c **** void USBHwConnect(BOOL fConnect)
 291:..//drivers/USB/usbhw_lpc.c **** {
 618              		.loc 1 291 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 8
 621              		@ frame_needed = 1, uses_anonymous_args = 0
 622 0000 80B5     		push	{r7, lr}
 623              	.LCFI33:
 624              		.cfi_def_cfa_offset 8
 625 0002 82B0     		sub	sp, sp, #8
 626              	.LCFI34:
 627              		.cfi_def_cfa_offset 16
 628 0004 00AF     		add	r7, sp, #0
 629              		.cfi_offset 14, -4
 630              		.cfi_offset 7, -8
 631              	.LCFI35:
 632              		.cfi_def_cfa_register 7
 633 0006 7860     		str	r0, [r7, #4]
 292:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmdWrite(CMD_DEV_STATUS, fConnect ? CON : 0);
 634              		.loc 1 292 0
 635 0008 7B68     		ldr	r3, [r7, #4]
 636 000a 002B     		cmp	r3, #0
 637 000c 0CBF     		ite	eq
 638 000e 0023     		moveq	r3, #0
 639 0010 0123     		movne	r3, #1
 640 0012 4FF0FE00 		mov	r0, #254
 641 0016 1946     		mov	r1, r3
 642 0018 40F20003 		movw	r3, #:lower16:USBHwCmdWrite
 643 001c C0F20003 		movt	r3, #:upper16:USBHwCmdWrite
 644 0020 9847     		blx	r3
 293:..//drivers/USB/usbhw_lpc.c **** }
 645              		.loc 1 293 0
 646 0022 07F10807 		add	r7, r7, #8
 647 0026 BD46     		mov	sp, r7
 648 0028 80BD     		pop	{r7, pc}
 649              		.cfi_endproc
 650              	.LFE40:
 652 002a 00BF     		.section	.text.USBHwNakIntEnable,"ax",%progbits
 653              		.align	2
 654              		.global	USBHwNakIntEnable
 655              		.thumb
 656              		.thumb_func
 658              	USBHwNakIntEnable:
 659              	.LFB41:
 294:..//drivers/USB/usbhw_lpc.c **** 
 295:..//drivers/USB/usbhw_lpc.c **** 
 296:..//drivers/USB/usbhw_lpc.c **** /**
 297:..//drivers/USB/usbhw_lpc.c **** 	Enables interrupt on NAK condition
 298:..//drivers/USB/usbhw_lpc.c **** 		
 299:..//drivers/USB/usbhw_lpc.c **** 	For IN endpoints a NAK is generated when the host wants to read data
 300:..//drivers/USB/usbhw_lpc.c **** 	from the device, but none is available in the endpoint buffer.
 301:..//drivers/USB/usbhw_lpc.c **** 	For OUT endpoints a NAK is generated when the host wants to write data
 302:..//drivers/USB/usbhw_lpc.c **** 	to the device, but the endpoint buffer is still full.
 303:..//drivers/USB/usbhw_lpc.c **** 	
 304:..//drivers/USB/usbhw_lpc.c **** 	The endpoint interrupt handlers can distinguish regular (ACK) interrupts
 305:..//drivers/USB/usbhw_lpc.c **** 	from NAK interrupt by checking the bits in their bEPStatus argument.
 306:..//drivers/USB/usbhw_lpc.c **** 	
 307:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bIntBits	Bitmap indicating which NAK interrupts to enable
 308:..//drivers/USB/usbhw_lpc.c ****  */
 309:..//drivers/USB/usbhw_lpc.c **** void USBHwNakIntEnable(uint8_t bIntBits)
 310:..//drivers/USB/usbhw_lpc.c **** {
 660              		.loc 1 310 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 8
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664 0000 80B5     		push	{r7, lr}
 665              	.LCFI36:
 666              		.cfi_def_cfa_offset 8
 667 0002 82B0     		sub	sp, sp, #8
 668              	.LCFI37:
 669              		.cfi_def_cfa_offset 16
 670 0004 00AF     		add	r7, sp, #0
 671              		.cfi_offset 14, -4
 672              		.cfi_offset 7, -8
 673              	.LCFI38:
 674              		.cfi_def_cfa_register 7
 675 0006 0346     		mov	r3, r0
 676 0008 FB71     		strb	r3, [r7, #7]
 311:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmdWrite(CMD_DEV_SET_MODE, bIntBits);
 677              		.loc 1 311 0
 678 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 679 000c 4FF0F300 		mov	r0, #243
 680 0010 1946     		mov	r1, r3
 681 0012 40F20003 		movw	r3, #:lower16:USBHwCmdWrite
 682 0016 C0F20003 		movt	r3, #:upper16:USBHwCmdWrite
 683 001a 9847     		blx	r3
 312:..//drivers/USB/usbhw_lpc.c **** }
 684              		.loc 1 312 0
 685 001c 07F10807 		add	r7, r7, #8
 686 0020 BD46     		mov	sp, r7
 687 0022 80BD     		pop	{r7, pc}
 688              		.cfi_endproc
 689              	.LFE41:
 691              		.section	.text.USBHwEPGetStatus,"ax",%progbits
 692              		.align	2
 693              		.global	USBHwEPGetStatus
 694              		.thumb
 695              		.thumb_func
 697              	USBHwEPGetStatus:
 698              	.LFB42:
 313:..//drivers/USB/usbhw_lpc.c **** 
 314:..//drivers/USB/usbhw_lpc.c **** 
 315:..//drivers/USB/usbhw_lpc.c **** /**
 316:..//drivers/USB/usbhw_lpc.c **** 	Gets the status from a specific endpoint.
 317:..//drivers/USB/usbhw_lpc.c **** 		
 318:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bEP		Endpoint number
 319:..//drivers/USB/usbhw_lpc.c **** 	@return Endpoint status byte (containing EP_STATUS_xxx bits)
 320:..//drivers/USB/usbhw_lpc.c ****  */
 321:..//drivers/USB/usbhw_lpc.c **** uint8_t	USBHwEPGetStatus(uint8_t bEP)
 322:..//drivers/USB/usbhw_lpc.c **** {
 699              		.loc 1 322 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 16
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703 0000 80B5     		push	{r7, lr}
 704              	.LCFI39:
 705              		.cfi_def_cfa_offset 8
 706 0002 84B0     		sub	sp, sp, #16
 707              	.LCFI40:
 708              		.cfi_def_cfa_offset 24
 709 0004 00AF     		add	r7, sp, #0
 710              		.cfi_offset 14, -4
 711              		.cfi_offset 7, -8
 712              	.LCFI41:
 713              		.cfi_def_cfa_register 7
 714 0006 0346     		mov	r3, r0
 715 0008 FB71     		strb	r3, [r7, #7]
 323:..//drivers/USB/usbhw_lpc.c **** 	int idx = EP2IDX(bEP);
 716              		.loc 1 323 0
 717 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 718 000c 03F00F03 		and	r3, r3, #15
 719 0010 4FEA4302 		lsl	r2, r3, #1
 720 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 721 0016 4FEAD313 		lsr	r3, r3, #7
 722 001a DBB2     		uxtb	r3, r3
 723 001c 42EA0303 		orr	r3, r2, r3
 724 0020 FB60     		str	r3, [r7, #12]
 324:..//drivers/USB/usbhw_lpc.c **** 
 325:..//drivers/USB/usbhw_lpc.c **** 	return USBHwCmdRead(CMD_EP_SELECT | idx);
 725              		.loc 1 325 0
 726 0022 FB68     		ldr	r3, [r7, #12]
 727 0024 DBB2     		uxtb	r3, r3
 728 0026 1846     		mov	r0, r3
 729 0028 40F20003 		movw	r3, #:lower16:USBHwCmdRead
 730 002c C0F20003 		movt	r3, #:upper16:USBHwCmdRead
 731 0030 9847     		blx	r3
 732 0032 0346     		mov	r3, r0
 326:..//drivers/USB/usbhw_lpc.c **** }
 733              		.loc 1 326 0
 734 0034 1846     		mov	r0, r3
 735 0036 07F11007 		add	r7, r7, #16
 736 003a BD46     		mov	sp, r7
 737 003c 80BD     		pop	{r7, pc}
 738              		.cfi_endproc
 739              	.LFE42:
 741 003e 00BF     		.section	.text.USBHwEPStall,"ax",%progbits
 742              		.align	2
 743              		.global	USBHwEPStall
 744              		.thumb
 745              		.thumb_func
 747              	USBHwEPStall:
 748              	.LFB43:
 327:..//drivers/USB/usbhw_lpc.c **** 
 328:..//drivers/USB/usbhw_lpc.c **** 
 329:..//drivers/USB/usbhw_lpc.c **** /**
 330:..//drivers/USB/usbhw_lpc.c **** 	Sets the stalled property of an endpoint
 331:..//drivers/USB/usbhw_lpc.c **** 		
 332:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bEP		Endpoint number
 333:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	fStall	TRUE to stall, FALSE to unstall
 334:..//drivers/USB/usbhw_lpc.c ****  */
 335:..//drivers/USB/usbhw_lpc.c **** void USBHwEPStall(uint8_t bEP, BOOL fStall)
 336:..//drivers/USB/usbhw_lpc.c **** {
 749              		.loc 1 336 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 16
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753 0000 80B5     		push	{r7, lr}
 754              	.LCFI42:
 755              		.cfi_def_cfa_offset 8
 756 0002 84B0     		sub	sp, sp, #16
 757              	.LCFI43:
 758              		.cfi_def_cfa_offset 24
 759 0004 00AF     		add	r7, sp, #0
 760              		.cfi_offset 14, -4
 761              		.cfi_offset 7, -8
 762              	.LCFI44:
 763              		.cfi_def_cfa_register 7
 764 0006 0346     		mov	r3, r0
 765 0008 3960     		str	r1, [r7, #0]
 766 000a FB71     		strb	r3, [r7, #7]
 337:..//drivers/USB/usbhw_lpc.c **** 	int idx = EP2IDX(bEP);
 767              		.loc 1 337 0
 768 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 769 000e 03F00F03 		and	r3, r3, #15
 770 0012 4FEA4302 		lsl	r2, r3, #1
 771 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 772 0018 4FEAD313 		lsr	r3, r3, #7
 773 001c DBB2     		uxtb	r3, r3
 774 001e 42EA0303 		orr	r3, r2, r3
 775 0022 FB60     		str	r3, [r7, #12]
 338:..//drivers/USB/usbhw_lpc.c **** 
 339:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmdWrite(CMD_EP_SET_STATUS | idx, fStall ? EP_ST : 0);
 776              		.loc 1 339 0
 777 0024 FB68     		ldr	r3, [r7, #12]
 778 0026 DBB2     		uxtb	r3, r3
 779 0028 43F04003 		orr	r3, r3, #64
 780 002c DBB2     		uxtb	r3, r3
 781 002e DAB2     		uxtb	r2, r3
 782 0030 3B68     		ldr	r3, [r7, #0]
 783 0032 002B     		cmp	r3, #0
 784 0034 0CBF     		ite	eq
 785 0036 0023     		moveq	r3, #0
 786 0038 0123     		movne	r3, #1
 787 003a 1046     		mov	r0, r2
 788 003c 1946     		mov	r1, r3
 789 003e 40F20003 		movw	r3, #:lower16:USBHwCmdWrite
 790 0042 C0F20003 		movt	r3, #:upper16:USBHwCmdWrite
 791 0046 9847     		blx	r3
 340:..//drivers/USB/usbhw_lpc.c **** }
 792              		.loc 1 340 0
 793 0048 07F11007 		add	r7, r7, #16
 794 004c BD46     		mov	sp, r7
 795 004e 80BD     		pop	{r7, pc}
 796              		.cfi_endproc
 797              	.LFE43:
 799              		.section	.text.USBHwEPWrite,"ax",%progbits
 800              		.align	2
 801              		.global	USBHwEPWrite
 802              		.thumb
 803              		.thumb_func
 805              	USBHwEPWrite:
 806              	.LFB44:
 341:..//drivers/USB/usbhw_lpc.c **** 
 342:..//drivers/USB/usbhw_lpc.c **** 
 343:..//drivers/USB/usbhw_lpc.c **** /**
 344:..//drivers/USB/usbhw_lpc.c **** 	Writes data to an endpoint buffer
 345:..//drivers/USB/usbhw_lpc.c **** 		
 346:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bEP		Endpoint number
 347:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	pbBuf	Endpoint data
 348:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	iLen	Number of bytes to write
 349:..//drivers/USB/usbhw_lpc.c **** 			
 350:..//drivers/USB/usbhw_lpc.c **** 	@return TRUE if the data was successfully written or <0 in case of error.
 351:..//drivers/USB/usbhw_lpc.c **** */
 352:..//drivers/USB/usbhw_lpc.c **** int USBHwEPWrite(uint8_t bEP, uint8_t *pbBuf, int iLen)
 353:..//drivers/USB/usbhw_lpc.c **** {
 807              		.loc 1 353 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 24
 810              		@ frame_needed = 1, uses_anonymous_args = 0
 811 0000 80B5     		push	{r7, lr}
 812              	.LCFI45:
 813              		.cfi_def_cfa_offset 8
 814 0002 86B0     		sub	sp, sp, #24
 815              	.LCFI46:
 816              		.cfi_def_cfa_offset 32
 817 0004 00AF     		add	r7, sp, #0
 818              		.cfi_offset 14, -4
 819              		.cfi_offset 7, -8
 820              	.LCFI47:
 821              		.cfi_def_cfa_register 7
 822 0006 0346     		mov	r3, r0
 823 0008 B960     		str	r1, [r7, #8]
 824 000a 7A60     		str	r2, [r7, #4]
 825 000c FB73     		strb	r3, [r7, #15]
 354:..//drivers/USB/usbhw_lpc.c **** 	int idx;
 355:..//drivers/USB/usbhw_lpc.c **** 	
 356:..//drivers/USB/usbhw_lpc.c **** 	idx = EP2IDX(bEP);
 826              		.loc 1 356 0
 827 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 828 0010 03F00F03 		and	r3, r3, #15
 829 0014 4FEA4302 		lsl	r2, r3, #1
 830 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 831 001a 4FEAD313 		lsr	r3, r3, #7
 832 001e DBB2     		uxtb	r3, r3
 833 0020 42EA0303 		orr	r3, r2, r3
 834 0024 7B61     		str	r3, [r7, #20]
 357:..//drivers/USB/usbhw_lpc.c **** 	
 358:..//drivers/USB/usbhw_lpc.c **** 	// set write enable for specific endpoint
 359:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBCtrl = WR_EN | ((bEP & 0xF) << 2);
 835              		.loc 1 359 0
 836 0026 4CF20003 		movw	r3, #:lower16:1342226432
 837 002a C5F20003 		movt	r3, #:upper16:1342226432
 838 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 839 0030 02F00F02 		and	r2, r2, #15
 840 0034 4FEA8202 		lsl	r2, r2, #2
 841 0038 42F00202 		orr	r2, r2, #2
 842 003c C3F82822 		str	r2, [r3, #552]
 360:..//drivers/USB/usbhw_lpc.c **** 	
 361:..//drivers/USB/usbhw_lpc.c **** 	// set packet length
 362:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBTxPLen = iLen;
 843              		.loc 1 362 0
 844 0040 4CF20003 		movw	r3, #:lower16:1342226432
 845 0044 C5F20003 		movt	r3, #:upper16:1342226432
 846 0048 7A68     		ldr	r2, [r7, #4]
 847 004a C3F82422 		str	r2, [r3, #548]
 363:..//drivers/USB/usbhw_lpc.c **** 	
 364:..//drivers/USB/usbhw_lpc.c **** 	// write data
 365:..//drivers/USB/usbhw_lpc.c **** 	while (LPC_USB->USBCtrl & WR_EN) {
 848              		.loc 1 365 0
 849 004e 23E0     		b	.L35
 850              	.L36:
 366:..//drivers/USB/usbhw_lpc.c **** 		LPC_USB->USBTxData = (pbBuf[3] << 24) | (pbBuf[2] << 16) | (pbBuf[1] << 8) | pbBuf[0];
 851              		.loc 1 366 0
 852 0050 4CF20003 		movw	r3, #:lower16:1342226432
 853 0054 C5F20003 		movt	r3, #:upper16:1342226432
 854 0058 BA68     		ldr	r2, [r7, #8]
 855 005a 02F10302 		add	r2, r2, #3
 856 005e 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 857 0060 4FEA0261 		lsl	r1, r2, #24
 858 0064 BA68     		ldr	r2, [r7, #8]
 859 0066 02F10202 		add	r2, r2, #2
 860 006a 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 861 006c 4FEA0242 		lsl	r2, r2, #16
 862 0070 41EA0201 		orr	r1, r1, r2
 863 0074 BA68     		ldr	r2, [r7, #8]
 864 0076 02F10102 		add	r2, r2, #1
 865 007a 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 866 007c 4FEA0222 		lsl	r2, r2, #8
 867 0080 41EA0201 		orr	r1, r1, r2
 868 0084 BA68     		ldr	r2, [r7, #8]
 869 0086 1278     		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 870 0088 41EA0202 		orr	r2, r1, r2
 871 008c C3F81C22 		str	r2, [r3, #540]
 367:..//drivers/USB/usbhw_lpc.c **** 		pbBuf += 4;
 872              		.loc 1 367 0
 873 0090 BB68     		ldr	r3, [r7, #8]
 874 0092 03F10403 		add	r3, r3, #4
 875 0096 BB60     		str	r3, [r7, #8]
 876              	.L35:
 877              		.loc 1 365 0
 878 0098 4CF20003 		movw	r3, #:lower16:1342226432
 879 009c C5F20003 		movt	r3, #:upper16:1342226432
 880 00a0 D3F82832 		ldr	r3, [r3, #552]
 881 00a4 03F00203 		and	r3, r3, #2
 882 00a8 002B     		cmp	r3, #0
 883 00aa D1D1     		bne	.L36
 368:..//drivers/USB/usbhw_lpc.c **** 	}
 369:..//drivers/USB/usbhw_lpc.c **** 
 370:..//drivers/USB/usbhw_lpc.c **** 	// select endpoint and validate buffer
 371:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmd(CMD_EP_SELECT | idx);
 884              		.loc 1 371 0
 885 00ac 7B69     		ldr	r3, [r7, #20]
 886 00ae DBB2     		uxtb	r3, r3
 887 00b0 1846     		mov	r0, r3
 888 00b2 40F20003 		movw	r3, #:lower16:USBHwCmd
 889 00b6 C0F20003 		movt	r3, #:upper16:USBHwCmd
 890 00ba 9847     		blx	r3
 372:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmd(CMD_EP_VALIDATE_BUFFER);
 891              		.loc 1 372 0
 892 00bc 4FF0FA00 		mov	r0, #250
 893 00c0 40F20003 		movw	r3, #:lower16:USBHwCmd
 894 00c4 C0F20003 		movt	r3, #:upper16:USBHwCmd
 895 00c8 9847     		blx	r3
 373:..//drivers/USB/usbhw_lpc.c **** 	
 374:..//drivers/USB/usbhw_lpc.c **** 	return iLen;
 896              		.loc 1 374 0
 897 00ca 7B68     		ldr	r3, [r7, #4]
 375:..//drivers/USB/usbhw_lpc.c **** }
 898              		.loc 1 375 0
 899 00cc 1846     		mov	r0, r3
 900 00ce 07F11807 		add	r7, r7, #24
 901 00d2 BD46     		mov	sp, r7
 902 00d4 80BD     		pop	{r7, pc}
 903              		.cfi_endproc
 904              	.LFE44:
 906 00d6 00BF     		.section	.text.USBHwEPRead,"ax",%progbits
 907              		.align	2
 908              		.global	USBHwEPRead
 909              		.thumb
 910              		.thumb_func
 912              	USBHwEPRead:
 913              	.LFB45:
 376:..//drivers/USB/usbhw_lpc.c **** 
 377:..//drivers/USB/usbhw_lpc.c **** 
 378:..//drivers/USB/usbhw_lpc.c **** /**
 379:..//drivers/USB/usbhw_lpc.c **** 	Reads data from an endpoint buffer
 380:..//drivers/USB/usbhw_lpc.c **** 		
 381:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	bEP		Endpoint number
 382:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	pbBuf	Endpoint data
 383:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	iMaxLen	Maximum number of bytes to read
 384:..//drivers/USB/usbhw_lpc.c **** 			
 385:..//drivers/USB/usbhw_lpc.c **** 	@return the number of bytes available in the EP (possibly more than iMaxLen),
 386:..//drivers/USB/usbhw_lpc.c **** 	or <0 in case of error.
 387:..//drivers/USB/usbhw_lpc.c ****  */
 388:..//drivers/USB/usbhw_lpc.c **** int USBHwEPRead(uint8_t bEP, uint8_t *pbBuf, int iMaxLen)
 389:..//drivers/USB/usbhw_lpc.c **** {
 914              		.loc 1 389 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 32
 917              		@ frame_needed = 1, uses_anonymous_args = 0
 918 0000 80B5     		push	{r7, lr}
 919              	.LCFI48:
 920              		.cfi_def_cfa_offset 8
 921 0002 88B0     		sub	sp, sp, #32
 922              	.LCFI49:
 923              		.cfi_def_cfa_offset 40
 924 0004 00AF     		add	r7, sp, #0
 925              		.cfi_offset 14, -4
 926              		.cfi_offset 7, -8
 927              	.LCFI50:
 928              		.cfi_def_cfa_register 7
 929 0006 0346     		mov	r3, r0
 930 0008 B960     		str	r1, [r7, #8]
 931 000a 7A60     		str	r2, [r7, #4]
 932 000c FB73     		strb	r3, [r7, #15]
 390:..//drivers/USB/usbhw_lpc.c **** 	int i, idx;
 391:..//drivers/USB/usbhw_lpc.c **** 	U32	dwData, dwLen;
 392:..//drivers/USB/usbhw_lpc.c **** 	
 393:..//drivers/USB/usbhw_lpc.c **** 	idx = EP2IDX(bEP);
 933              		.loc 1 393 0
 934 000e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 935 0010 03F00F03 		and	r3, r3, #15
 936 0014 4FEA4302 		lsl	r2, r3, #1
 937 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 938 001a 4FEAD313 		lsr	r3, r3, #7
 939 001e DBB2     		uxtb	r3, r3
 940 0020 42EA0303 		orr	r3, r2, r3
 941 0024 7B61     		str	r3, [r7, #20]
 394:..//drivers/USB/usbhw_lpc.c **** 	
 395:..//drivers/USB/usbhw_lpc.c **** 	// set read enable bit for specific endpoint
 396:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBCtrl = RD_EN | ((bEP & 0xF) << 2);
 942              		.loc 1 396 0
 943 0026 4CF20003 		movw	r3, #:lower16:1342226432
 944 002a C5F20003 		movt	r3, #:upper16:1342226432
 945 002e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 946 0030 02F00F02 		and	r2, r2, #15
 947 0034 4FEA8202 		lsl	r2, r2, #2
 948 0038 42F00102 		orr	r2, r2, #1
 949 003c C3F82822 		str	r2, [r3, #552]
 950              	.L39:
 397:..//drivers/USB/usbhw_lpc.c **** 	
 398:..//drivers/USB/usbhw_lpc.c **** 	// wait for PKT_RDY
 399:..//drivers/USB/usbhw_lpc.c **** 	do {
 400:..//drivers/USB/usbhw_lpc.c **** 		dwLen = LPC_USB->USBRxPLen;
 951              		.loc 1 400 0
 952 0040 4CF20003 		movw	r3, #:lower16:1342226432
 953 0044 C5F20003 		movt	r3, #:upper16:1342226432
 954 0048 D3F82032 		ldr	r3, [r3, #544]
 955 004c FB61     		str	r3, [r7, #28]
 401:..//drivers/USB/usbhw_lpc.c **** 	} while ((dwLen & PKT_RDY) == 0);
 956              		.loc 1 401 0
 957 004e FB69     		ldr	r3, [r7, #28]
 958 0050 03F40063 		and	r3, r3, #2048
 959 0054 002B     		cmp	r3, #0
 960 0056 F3D0     		beq	.L39
 402:..//drivers/USB/usbhw_lpc.c **** 	
 403:..//drivers/USB/usbhw_lpc.c **** 	// packet valid?
 404:..//drivers/USB/usbhw_lpc.c **** 	if ((dwLen & DV) == 0) {
 961              		.loc 1 404 0
 962 0058 FB69     		ldr	r3, [r7, #28]
 963 005a 03F48063 		and	r3, r3, #1024
 964 005e 002B     		cmp	r3, #0
 965 0060 02D1     		bne	.L40
 405:..//drivers/USB/usbhw_lpc.c **** 		return -1;
 966              		.loc 1 405 0
 967 0062 4FF0FF33 		mov	r3, #-1
 968 0066 49E0     		b	.L41
 969              	.L40:
 406:..//drivers/USB/usbhw_lpc.c **** 	}
 407:..//drivers/USB/usbhw_lpc.c **** 	
 408:..//drivers/USB/usbhw_lpc.c **** 	// get length
 409:..//drivers/USB/usbhw_lpc.c **** 	dwLen &= PKT_LNGTH_MASK;
 970              		.loc 1 409 0
 971 0068 FB69     		ldr	r3, [r7, #28]
 972 006a 4FEA8353 		lsl	r3, r3, #22
 973 006e 4FEA9353 		lsr	r3, r3, #22
 974 0072 FB61     		str	r3, [r7, #28]
 410:..//drivers/USB/usbhw_lpc.c **** 	
 411:..//drivers/USB/usbhw_lpc.c **** 	// get data
 412:..//drivers/USB/usbhw_lpc.c **** 	dwData = 0;
 975              		.loc 1 412 0
 976 0074 4FF00003 		mov	r3, #0
 977 0078 BB61     		str	r3, [r7, #24]
 413:..//drivers/USB/usbhw_lpc.c **** 	for (i = 0; i < (int)dwLen; i++) {
 978              		.loc 1 413 0
 979 007a 4FF00003 		mov	r3, #0
 980 007e 3B61     		str	r3, [r7, #16]
 981 0080 20E0     		b	.L42
 982              	.L45:
 414:..//drivers/USB/usbhw_lpc.c **** 		if ((i % 4) == 0) {
 983              		.loc 1 414 0
 984 0082 3B69     		ldr	r3, [r7, #16]
 985 0084 03F00303 		and	r3, r3, #3
 986 0088 002B     		cmp	r3, #0
 987 008a 06D1     		bne	.L43
 415:..//drivers/USB/usbhw_lpc.c **** 			dwData = LPC_USB->USBRxData;
 988              		.loc 1 415 0
 989 008c 4CF20003 		movw	r3, #:lower16:1342226432
 990 0090 C5F20003 		movt	r3, #:upper16:1342226432
 991 0094 D3F81832 		ldr	r3, [r3, #536]
 992 0098 BB61     		str	r3, [r7, #24]
 993              	.L43:
 416:..//drivers/USB/usbhw_lpc.c **** 		}
 417:..//drivers/USB/usbhw_lpc.c **** 		if ((pbBuf != NULL) && (i < iMaxLen)) {
 994              		.loc 1 417 0
 995 009a BB68     		ldr	r3, [r7, #8]
 996 009c 002B     		cmp	r3, #0
 997 009e 09D0     		beq	.L44
 998 00a0 3A69     		ldr	r2, [r7, #16]
 999 00a2 7B68     		ldr	r3, [r7, #4]
 1000 00a4 9A42     		cmp	r2, r3
 1001 00a6 05DA     		bge	.L44
 418:..//drivers/USB/usbhw_lpc.c **** 			pbBuf[i] = dwData & 0xFF;
 1002              		.loc 1 418 0
 1003 00a8 3A69     		ldr	r2, [r7, #16]
 1004 00aa BB68     		ldr	r3, [r7, #8]
 1005 00ac 1344     		add	r3, r2, r3
 1006 00ae BA69     		ldr	r2, [r7, #24]
 1007 00b0 D2B2     		uxtb	r2, r2
 1008 00b2 1A70     		strb	r2, [r3, #0]
 1009              	.L44:
 419:..//drivers/USB/usbhw_lpc.c **** 		}
 420:..//drivers/USB/usbhw_lpc.c **** 		dwData >>= 8;
 1010              		.loc 1 420 0
 1011 00b4 BB69     		ldr	r3, [r7, #24]
 1012 00b6 4FEA1323 		lsr	r3, r3, #8
 1013 00ba BB61     		str	r3, [r7, #24]
 1014              		.loc 1 413 0
 1015 00bc 3B69     		ldr	r3, [r7, #16]
 1016 00be 03F10103 		add	r3, r3, #1
 1017 00c2 3B61     		str	r3, [r7, #16]
 1018              	.L42:
 1019 00c4 FA69     		ldr	r2, [r7, #28]
 1020 00c6 3B69     		ldr	r3, [r7, #16]
 1021 00c8 9A42     		cmp	r2, r3
 1022 00ca DADC     		bgt	.L45
 421:..//drivers/USB/usbhw_lpc.c **** 	}
 422:..//drivers/USB/usbhw_lpc.c **** 
 423:..//drivers/USB/usbhw_lpc.c **** 	// make sure RD_EN is clear
 424:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBCtrl = 0;
 1023              		.loc 1 424 0
 1024 00cc 4CF20003 		movw	r3, #:lower16:1342226432
 1025 00d0 C5F20003 		movt	r3, #:upper16:1342226432
 1026 00d4 4FF00002 		mov	r2, #0
 1027 00d8 C3F82822 		str	r2, [r3, #552]
 425:..//drivers/USB/usbhw_lpc.c **** 
 426:..//drivers/USB/usbhw_lpc.c **** 	// select endpoint and clear buffer
 427:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmd(CMD_EP_SELECT | idx);
 1028              		.loc 1 427 0
 1029 00dc 7B69     		ldr	r3, [r7, #20]
 1030 00de DBB2     		uxtb	r3, r3
 1031 00e0 1846     		mov	r0, r3
 1032 00e2 40F20003 		movw	r3, #:lower16:USBHwCmd
 1033 00e6 C0F20003 		movt	r3, #:upper16:USBHwCmd
 1034 00ea 9847     		blx	r3
 428:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmd(CMD_EP_CLEAR_BUFFER);
 1035              		.loc 1 428 0
 1036 00ec 4FF0F200 		mov	r0, #242
 1037 00f0 40F20003 		movw	r3, #:lower16:USBHwCmd
 1038 00f4 C0F20003 		movt	r3, #:upper16:USBHwCmd
 1039 00f8 9847     		blx	r3
 429:..//drivers/USB/usbhw_lpc.c **** 	
 430:..//drivers/USB/usbhw_lpc.c **** 	return dwLen;
 1040              		.loc 1 430 0
 1041 00fa FB69     		ldr	r3, [r7, #28]
 1042              	.L41:
 431:..//drivers/USB/usbhw_lpc.c **** }
 1043              		.loc 1 431 0
 1044 00fc 1846     		mov	r0, r3
 1045 00fe 07F12007 		add	r7, r7, #32
 1046 0102 BD46     		mov	sp, r7
 1047 0104 80BD     		pop	{r7, pc}
 1048              		.cfi_endproc
 1049              	.LFE45:
 1051 0106 00BF     		.section	.text.USBHwConfigDevice,"ax",%progbits
 1052              		.align	2
 1053              		.global	USBHwConfigDevice
 1054              		.thumb
 1055              		.thumb_func
 1057              	USBHwConfigDevice:
 1058              	.LFB46:
 432:..//drivers/USB/usbhw_lpc.c **** 
 433:..//drivers/USB/usbhw_lpc.c **** 
 434:..//drivers/USB/usbhw_lpc.c **** /**
 435:..//drivers/USB/usbhw_lpc.c **** 	Sets the 'configured' state.
 436:..//drivers/USB/usbhw_lpc.c **** 		
 437:..//drivers/USB/usbhw_lpc.c **** 	All registered endpoints are 'realised' and enabled, and the
 438:..//drivers/USB/usbhw_lpc.c **** 	'configured' bit is set in the device status register.
 439:..//drivers/USB/usbhw_lpc.c **** 		
 440:..//drivers/USB/usbhw_lpc.c **** 	@param [in]	fConfigured	If TRUE, configure device, else unconfigure
 441:..//drivers/USB/usbhw_lpc.c ****  */
 442:..//drivers/USB/usbhw_lpc.c **** void USBHwConfigDevice(BOOL fConfigured)
 443:..//drivers/USB/usbhw_lpc.c **** {
 1059              		.loc 1 443 0
 1060              		.cfi_startproc
 1061              		@ args = 0, pretend = 0, frame = 8
 1062              		@ frame_needed = 1, uses_anonymous_args = 0
 1063 0000 80B5     		push	{r7, lr}
 1064              	.LCFI51:
 1065              		.cfi_def_cfa_offset 8
 1066 0002 82B0     		sub	sp, sp, #8
 1067              	.LCFI52:
 1068              		.cfi_def_cfa_offset 16
 1069 0004 00AF     		add	r7, sp, #0
 1070              		.cfi_offset 14, -4
 1071              		.cfi_offset 7, -8
 1072              	.LCFI53:
 1073              		.cfi_def_cfa_register 7
 1074 0006 7860     		str	r0, [r7, #4]
 444:..//drivers/USB/usbhw_lpc.c **** 	// set configured bit
 445:..//drivers/USB/usbhw_lpc.c **** 	USBHwCmdWrite(CMD_DEV_CONFIG, fConfigured ? CONF_DEVICE : 0);
 1075              		.loc 1 445 0
 1076 0008 7B68     		ldr	r3, [r7, #4]
 1077 000a 002B     		cmp	r3, #0
 1078 000c 0CBF     		ite	eq
 1079 000e 0023     		moveq	r3, #0
 1080 0010 0123     		movne	r3, #1
 1081 0012 4FF0D800 		mov	r0, #216
 1082 0016 1946     		mov	r1, r3
 1083 0018 40F20003 		movw	r3, #:lower16:USBHwCmdWrite
 1084 001c C0F20003 		movt	r3, #:upper16:USBHwCmdWrite
 1085 0020 9847     		blx	r3
 446:..//drivers/USB/usbhw_lpc.c **** }
 1086              		.loc 1 446 0
 1087 0022 07F10807 		add	r7, r7, #8
 1088 0026 BD46     		mov	sp, r7
 1089 0028 80BD     		pop	{r7, pc}
 1090              		.cfi_endproc
 1091              	.LFE46:
 1093 002a 00BF     		.section	.text.USBHwISR,"ax",%progbits
 1094              		.align	2
 1095              		.global	USBHwISR
 1096              		.thumb
 1097              		.thumb_func
 1099              	USBHwISR:
 1100              	.LFB47:
 447:..//drivers/USB/usbhw_lpc.c **** 
 448:..//drivers/USB/usbhw_lpc.c **** 
 449:..//drivers/USB/usbhw_lpc.c **** /**
 450:..//drivers/USB/usbhw_lpc.c **** 	USB interrupt handler
 451:..//drivers/USB/usbhw_lpc.c **** 		
 452:..//drivers/USB/usbhw_lpc.c **** 	@todo Get all 11 bits of frame number instead of just 8
 453:..//drivers/USB/usbhw_lpc.c **** 
 454:..//drivers/USB/usbhw_lpc.c **** 	Endpoint interrupts are mapped to the slow interrupt
 455:..//drivers/USB/usbhw_lpc.c ****  */
 456:..//drivers/USB/usbhw_lpc.c **** void USBHwISR(void)
 457:..//drivers/USB/usbhw_lpc.c **** {
 1101              		.loc 1 457 0
 1102              		.cfi_startproc
 1103              		@ args = 0, pretend = 0, frame = 24
 1104              		@ frame_needed = 1, uses_anonymous_args = 0
 1105 0000 80B5     		push	{r7, lr}
 1106              	.LCFI54:
 1107              		.cfi_def_cfa_offset 8
 1108 0002 86B0     		sub	sp, sp, #24
 1109              	.LCFI55:
 1110              		.cfi_def_cfa_offset 32
 1111 0004 00AF     		add	r7, sp, #0
 1112              		.cfi_offset 14, -4
 1113              		.cfi_offset 7, -8
 1114              	.LCFI56:
 1115              		.cfi_def_cfa_register 7
 458:..//drivers/USB/usbhw_lpc.c **** 	U32	dwStatus;
 459:..//drivers/USB/usbhw_lpc.c **** 	U32 dwIntBit;
 460:..//drivers/USB/usbhw_lpc.c **** 	uint8_t	bEPStat, bDevStat, bStat;
 461:..//drivers/USB/usbhw_lpc.c **** 	int i;
 462:..//drivers/USB/usbhw_lpc.c **** 	U16	wFrame;
 463:..//drivers/USB/usbhw_lpc.c **** 
 464:..//drivers/USB/usbhw_lpc.c **** 	// LED9 monitors total time in interrupt routine
 465:..//drivers/USB/usbhw_lpc.c **** 	DEBUG_LED_ON(6);
 466:..//drivers/USB/usbhw_lpc.c **** 
 467:..//drivers/USB/usbhw_lpc.c **** 	// handle device interrupts
 468:..//drivers/USB/usbhw_lpc.c **** 	dwStatus = LPC_USB->USBDevIntSt;
 1116              		.loc 1 468 0
 1117 0006 4CF20003 		movw	r3, #:lower16:1342226432
 1118 000a C5F20003 		movt	r3, #:upper16:1342226432
 1119 000e D3F80032 		ldr	r3, [r3, #512]
 1120 0012 7B60     		str	r3, [r7, #4]
 469:..//drivers/USB/usbhw_lpc.c **** 	
 470:..//drivers/USB/usbhw_lpc.c **** 	// frame interrupt
 471:..//drivers/USB/usbhw_lpc.c **** 	if (dwStatus & FRAME) {
 1121              		.loc 1 471 0
 1122 0014 7B68     		ldr	r3, [r7, #4]
 1123 0016 03F00103 		and	r3, r3, #1
 1124 001a DBB2     		uxtb	r3, r3
 1125 001c 002B     		cmp	r3, #0
 1126 001e 1FD0     		beq	.L50
 472:..//drivers/USB/usbhw_lpc.c **** 		// clear int
 473:..//drivers/USB/usbhw_lpc.c **** 		LPC_USB->USBDevIntClr = FRAME;
 1127              		.loc 1 473 0
 1128 0020 4CF20003 		movw	r3, #:lower16:1342226432
 1129 0024 C5F20003 		movt	r3, #:upper16:1342226432
 1130 0028 4FF00102 		mov	r2, #1
 1131 002c C3F80822 		str	r2, [r3, #520]
 474:..//drivers/USB/usbhw_lpc.c **** 		// call handler
 475:..//drivers/USB/usbhw_lpc.c **** 		if (_pfnFrameHandler != NULL) {
 1132              		.loc 1 475 0
 1133 0030 40F20003 		movw	r3, #:lower16:_pfnFrameHandler
 1134 0034 C0F20003 		movt	r3, #:upper16:_pfnFrameHandler
 1135 0038 1B68     		ldr	r3, [r3, #0]
 1136 003a 002B     		cmp	r3, #0
 1137 003c 10D0     		beq	.L50
 476:..//drivers/USB/usbhw_lpc.c **** 			wFrame = USBHwCmdRead(CMD_DEV_READ_CUR_FRAME_NR);
 1138              		.loc 1 476 0
 1139 003e 4FF0F500 		mov	r0, #245
 1140 0042 40F20003 		movw	r3, #:lower16:USBHwCmdRead
 1141 0046 C0F20003 		movt	r3, #:upper16:USBHwCmdRead
 1142 004a 9847     		blx	r3
 1143 004c 0346     		mov	r3, r0
 1144 004e FB82     		strh	r3, [r7, #22]	@ movhi
 477:..//drivers/USB/usbhw_lpc.c **** 			_pfnFrameHandler(wFrame);
 1145              		.loc 1 477 0
 1146 0050 40F20003 		movw	r3, #:lower16:_pfnFrameHandler
 1147 0054 C0F20003 		movt	r3, #:upper16:_pfnFrameHandler
 1148 0058 1B68     		ldr	r3, [r3, #0]
 1149 005a FA8A     		ldrh	r2, [r7, #22]
 1150 005c 1046     		mov	r0, r2
 1151 005e 9847     		blx	r3
 1152              	.L50:
 478:..//drivers/USB/usbhw_lpc.c **** 		}
 479:..//drivers/USB/usbhw_lpc.c **** 	}
 480:..//drivers/USB/usbhw_lpc.c **** 	
 481:..//drivers/USB/usbhw_lpc.c **** 	// device status interrupt
 482:..//drivers/USB/usbhw_lpc.c **** 	if (dwStatus & DEV_STAT) {
 1153              		.loc 1 482 0
 1154 0060 7B68     		ldr	r3, [r7, #4]
 1155 0062 03F00803 		and	r3, r3, #8
 1156 0066 002B     		cmp	r3, #0
 1157 0068 28D0     		beq	.L51
 483:..//drivers/USB/usbhw_lpc.c **** 		/*	Clear DEV_STAT interrupt before reading DEV_STAT register.
 484:..//drivers/USB/usbhw_lpc.c **** 			This prevents corrupted device status reads, see
 485:..//drivers/USB/usbhw_lpc.c **** 			LPC2148 User manual revision 2, 25 july 2006.
 486:..//drivers/USB/usbhw_lpc.c **** 		*/
 487:..//drivers/USB/usbhw_lpc.c **** 		LPC_USB->USBDevIntClr = DEV_STAT;
 1158              		.loc 1 487 0
 1159 006a 4CF20003 		movw	r3, #:lower16:1342226432
 1160 006e C5F20003 		movt	r3, #:upper16:1342226432
 1161 0072 4FF00802 		mov	r2, #8
 1162 0076 C3F80822 		str	r2, [r3, #520]
 488:..//drivers/USB/usbhw_lpc.c **** 		bDevStat = USBHwCmdRead(CMD_DEV_STATUS);
 1163              		.loc 1 488 0
 1164 007a 4FF0FE00 		mov	r0, #254
 1165 007e 40F20003 		movw	r3, #:lower16:USBHwCmdRead
 1166 0082 C0F20003 		movt	r3, #:upper16:USBHwCmdRead
 1167 0086 9847     		blx	r3
 1168 0088 0346     		mov	r3, r0
 1169 008a BB73     		strb	r3, [r7, #14]
 489:..//drivers/USB/usbhw_lpc.c **** 		if (bDevStat & (CON_CH | SUS_CH | RST)) {
 1170              		.loc 1 489 0
 1171 008c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1172 008e 03F01A03 		and	r3, r3, #26
 1173 0092 002B     		cmp	r3, #0
 1174 0094 12D0     		beq	.L51
 490:..//drivers/USB/usbhw_lpc.c **** 			// convert device status into something HW independent
 491:..//drivers/USB/usbhw_lpc.c **** 			bStat = ((bDevStat & CON) ? DEV_STATUS_CONNECT : 0) |
 1175              		.loc 1 491 0
 1176 0096 BB7B     		ldrb	r3, [r7, #14]
 1177 0098 03F01503 		and	r3, r3, #21
 1178 009c FB73     		strb	r3, [r7, #15]
 492:..//drivers/USB/usbhw_lpc.c **** 					((bDevStat & SUS) ? DEV_STATUS_SUSPEND : 0) |
 493:..//drivers/USB/usbhw_lpc.c **** 					((bDevStat & RST) ? DEV_STATUS_RESET : 0);
 494:..//drivers/USB/usbhw_lpc.c **** 			// call handler
 495:..//drivers/USB/usbhw_lpc.c **** 			if (_pfnDevIntHandler != NULL) {
 1179              		.loc 1 495 0
 1180 009e 40F20003 		movw	r3, #:lower16:_pfnDevIntHandler
 1181 00a2 C0F20003 		movt	r3, #:upper16:_pfnDevIntHandler
 1182 00a6 1B68     		ldr	r3, [r3, #0]
 1183 00a8 002B     		cmp	r3, #0
 1184 00aa 07D0     		beq	.L51
 496:..//drivers/USB/usbhw_lpc.c **** 				DEBUG_LED_ON(5);		
 497:..//drivers/USB/usbhw_lpc.c **** 				_pfnDevIntHandler(bStat);
 1185              		.loc 1 497 0
 1186 00ac 40F20003 		movw	r3, #:lower16:_pfnDevIntHandler
 1187 00b0 C0F20003 		movt	r3, #:upper16:_pfnDevIntHandler
 1188 00b4 1B68     		ldr	r3, [r3, #0]
 1189 00b6 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1190 00b8 1046     		mov	r0, r2
 1191 00ba 9847     		blx	r3
 1192              	.L51:
 498:..//drivers/USB/usbhw_lpc.c **** 				DEBUG_LED_OFF(5);		
 499:..//drivers/USB/usbhw_lpc.c **** 			}
 500:..//drivers/USB/usbhw_lpc.c **** 		}
 501:..//drivers/USB/usbhw_lpc.c **** 	}
 502:..//drivers/USB/usbhw_lpc.c **** 	
 503:..//drivers/USB/usbhw_lpc.c **** 	// endpoint interrupt
 504:..//drivers/USB/usbhw_lpc.c **** 	if (dwStatus & EP_SLOW) {
 1193              		.loc 1 504 0
 1194 00bc 7B68     		ldr	r3, [r7, #4]
 1195 00be 03F00403 		and	r3, r3, #4
 1196 00c2 002B     		cmp	r3, #0
 1197 00c4 6BD0     		beq	.L56
 505:..//drivers/USB/usbhw_lpc.c **** 		// clear EP_SLOW
 506:..//drivers/USB/usbhw_lpc.c **** 		LPC_USB->USBDevIntClr = EP_SLOW;
 1198              		.loc 1 506 0
 1199 00c6 4CF20003 		movw	r3, #:lower16:1342226432
 1200 00ca C5F20003 		movt	r3, #:upper16:1342226432
 1201 00ce 4FF00402 		mov	r2, #4
 1202 00d2 C3F80822 		str	r2, [r3, #520]
 507:..//drivers/USB/usbhw_lpc.c **** 		// check all endpoints
 508:..//drivers/USB/usbhw_lpc.c **** 		for (i = 0; i < 32; i++) {
 1203              		.loc 1 508 0
 1204 00d6 4FF00003 		mov	r3, #0
 1205 00da 3B61     		str	r3, [r7, #16]
 1206 00dc 5CE0     		b	.L53
 1207              	.L55:
 509:..//drivers/USB/usbhw_lpc.c **** 			dwIntBit = (1 << i);
 1208              		.loc 1 509 0
 1209 00de 4FF00102 		mov	r2, #1
 1210 00e2 3B69     		ldr	r3, [r7, #16]
 1211 00e4 02FA03F3 		lsl	r3, r2, r3
 1212 00e8 BB60     		str	r3, [r7, #8]
 510:..//drivers/USB/usbhw_lpc.c **** 			if (LPC_USB->USBEpIntSt & dwIntBit) {
 1213              		.loc 1 510 0
 1214 00ea 4CF20003 		movw	r3, #:lower16:1342226432
 1215 00ee C5F20003 		movt	r3, #:upper16:1342226432
 1216 00f2 D3F83022 		ldr	r2, [r3, #560]
 1217 00f6 BB68     		ldr	r3, [r7, #8]
 1218 00f8 02EA0303 		and	r3, r2, r3
 1219 00fc 002B     		cmp	r3, #0
 1220 00fe 47D0     		beq	.L54
 511:..//drivers/USB/usbhw_lpc.c **** 				// clear int (and retrieve status)
 512:..//drivers/USB/usbhw_lpc.c **** 				LPC_USB->USBEpIntClr = dwIntBit;
 1221              		.loc 1 512 0
 1222 0100 4CF20003 		movw	r3, #:lower16:1342226432
 1223 0104 C5F20003 		movt	r3, #:upper16:1342226432
 1224 0108 BA68     		ldr	r2, [r7, #8]
 1225 010a C3F83822 		str	r2, [r3, #568]
 513:..//drivers/USB/usbhw_lpc.c **** 				Wait4DevInt(CDFULL);
 1226              		.loc 1 513 0
 1227 010e 4FF02000 		mov	r0, #32
 1228 0112 40F20003 		movw	r3, #:lower16:Wait4DevInt
 1229 0116 C0F20003 		movt	r3, #:upper16:Wait4DevInt
 1230 011a 9847     		blx	r3
 514:..//drivers/USB/usbhw_lpc.c **** 				bEPStat = LPC_USB->USBCmdData;
 1231              		.loc 1 514 0
 1232 011c 4CF20003 		movw	r3, #:lower16:1342226432
 1233 0120 C5F20003 		movt	r3, #:upper16:1342226432
 1234 0124 D3F81432 		ldr	r3, [r3, #532]
 1235 0128 7B73     		strb	r3, [r7, #13]
 515:..//drivers/USB/usbhw_lpc.c **** 				// convert EP pipe stat into something HW independent
 516:..//drivers/USB/usbhw_lpc.c **** 				bStat = ((bEPStat & EPSTAT_FE) ? EP_STATUS_DATA : 0) |
 1236              		.loc 1 516 0
 1237 012a 7B7B     		ldrb	r3, [r7, #13]
 1238 012c 03F01F03 		and	r3, r3, #31
 1239 0130 FB73     		strb	r3, [r7, #15]
 517:..//drivers/USB/usbhw_lpc.c **** 						((bEPStat & EPSTAT_ST) ? EP_STATUS_STALLED : 0) |
 518:..//drivers/USB/usbhw_lpc.c **** 						((bEPStat & EPSTAT_STP) ? EP_STATUS_SETUP : 0) |
 519:..//drivers/USB/usbhw_lpc.c **** 						((bEPStat & EPSTAT_EPN) ? EP_STATUS_NACKED : 0) |
 520:..//drivers/USB/usbhw_lpc.c **** 						((bEPStat & EPSTAT_PO) ? EP_STATUS_ERROR : 0);
 521:..//drivers/USB/usbhw_lpc.c **** 				// call handler
 522:..//drivers/USB/usbhw_lpc.c **** 				if (_apfnEPIntHandlers[i / 2] != NULL) {
 1240              		.loc 1 522 0
 1241 0132 3B69     		ldr	r3, [r7, #16]
 1242 0134 4FEAD372 		lsr	r2, r3, #31
 1243 0138 1344     		add	r3, r2, r3
 1244 013a 4FEA6303 		asr	r3, r3, #1
 1245 013e 1A46     		mov	r2, r3
 1246 0140 40F20003 		movw	r3, #:lower16:_apfnEPIntHandlers
 1247 0144 C0F20003 		movt	r3, #:upper16:_apfnEPIntHandlers
 1248 0148 53F82230 		ldr	r3, [r3, r2, lsl #2]
 1249 014c 002B     		cmp	r3, #0
 1250 014e 1FD0     		beq	.L54
 523:..//drivers/USB/usbhw_lpc.c **** 					DEBUG_LED_ON(7);		
 524:..//drivers/USB/usbhw_lpc.c **** 					_apfnEPIntHandlers[i / 2](IDX2EP(i), bStat);
 1251              		.loc 1 524 0
 1252 0150 3B69     		ldr	r3, [r7, #16]
 1253 0152 4FEAD372 		lsr	r2, r3, #31
 1254 0156 1344     		add	r3, r2, r3
 1255 0158 4FEA6303 		asr	r3, r3, #1
 1256 015c 1A46     		mov	r2, r3
 1257 015e 40F20003 		movw	r3, #:lower16:_apfnEPIntHandlers
 1258 0162 C0F20003 		movt	r3, #:upper16:_apfnEPIntHandlers
 1259 0166 53F82220 		ldr	r2, [r3, r2, lsl #2]
 1260 016a 3B69     		ldr	r3, [r7, #16]
 1261 016c 4FEAC313 		lsl	r3, r3, #7
 1262 0170 D9B2     		uxtb	r1, r3
 1263 0172 3B69     		ldr	r3, [r7, #16]
 1264 0174 4FEA6303 		asr	r3, r3, #1
 1265 0178 DBB2     		uxtb	r3, r3
 1266 017a DBB2     		uxtb	r3, r3
 1267 017c 03F00F03 		and	r3, r3, #15
 1268 0180 41EA0303 		orr	r3, r1, r3
 1269 0184 DBB2     		uxtb	r3, r3
 1270 0186 D9B2     		uxtb	r1, r3
 1271 0188 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1272 018a 0846     		mov	r0, r1
 1273 018c 1946     		mov	r1, r3
 1274 018e 9047     		blx	r2
 1275              	.L54:
 1276              		.loc 1 508 0
 1277 0190 3B69     		ldr	r3, [r7, #16]
 1278 0192 03F10103 		add	r3, r3, #1
 1279 0196 3B61     		str	r3, [r7, #16]
 1280              	.L53:
 1281 0198 3B69     		ldr	r3, [r7, #16]
 1282 019a 1F2B     		cmp	r3, #31
 1283 019c 9FDD     		ble	.L55
 1284              	.L56:
 525:..//drivers/USB/usbhw_lpc.c **** 					DEBUG_LED_OFF(7);
 526:..//drivers/USB/usbhw_lpc.c **** 				}
 527:..//drivers/USB/usbhw_lpc.c **** 			}
 528:..//drivers/USB/usbhw_lpc.c **** 		}
 529:..//drivers/USB/usbhw_lpc.c **** 	}
 530:..//drivers/USB/usbhw_lpc.c **** 	
 531:..//drivers/USB/usbhw_lpc.c **** 	DEBUG_LED_OFF(6);		
 532:..//drivers/USB/usbhw_lpc.c **** }
 1285              		.loc 1 532 0
 1286 019e 07F11807 		add	r7, r7, #24
 1287 01a2 BD46     		mov	sp, r7
 1288 01a4 80BD     		pop	{r7, pc}
 1289              		.cfi_endproc
 1290              	.LFE47:
 1292 01a6 00BF     		.section	.text.USBHwInit,"ax",%progbits
 1293              		.align	2
 1294              		.global	USBHwInit
 1295              		.thumb
 1296              		.thumb_func
 1298              	USBHwInit:
 1299              	.LFB48:
 533:..//drivers/USB/usbhw_lpc.c **** 
 534:..//drivers/USB/usbhw_lpc.c **** 
 535:..//drivers/USB/usbhw_lpc.c **** 
 536:..//drivers/USB/usbhw_lpc.c **** /**
 537:..//drivers/USB/usbhw_lpc.c **** 	Initialises the USB hardware
 538:..//drivers/USB/usbhw_lpc.c **** 		
 539:..//drivers/USB/usbhw_lpc.c **** 	This function assumes that the hardware is connected as shown in
 540:..//drivers/USB/usbhw_lpc.c **** 	section 10.1 of the LPC2148 data sheet:
 541:..//drivers/USB/usbhw_lpc.c **** 	* P0.31 controls a switch to connect a 1.5k pull-up to D+ if low.
 542:..//drivers/USB/usbhw_lpc.c **** 	* P0.23 is connected to USB VCC.
 543:..//drivers/USB/usbhw_lpc.c **** 	
 544:..//drivers/USB/usbhw_lpc.c **** 	Embedded artists board: make sure to disconnect P0.23 LED as it
 545:..//drivers/USB/usbhw_lpc.c **** 	acts as a pull-up and so prevents detection of USB disconnect.
 546:..//drivers/USB/usbhw_lpc.c **** 		
 547:..//drivers/USB/usbhw_lpc.c **** 	@return TRUE if the hardware was successfully initialised
 548:..//drivers/USB/usbhw_lpc.c ****  */
 549:..//drivers/USB/usbhw_lpc.c **** BOOL USBHwInit(void)
 550:..//drivers/USB/usbhw_lpc.c **** {
 1300              		.loc 1 550 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 0
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304 0000 80B5     		push	{r7, lr}
 1305              	.LCFI57:
 1306              		.cfi_def_cfa_offset 8
 1307 0002 00AF     		add	r7, sp, #0
 1308              		.cfi_offset 14, -4
 1309              		.cfi_offset 7, -8
 1310              	.LCFI58:
 1311              		.cfi_def_cfa_register 7
 551:..//drivers/USB/usbhw_lpc.c **** /*	CodeRed - comment out original code
 552:..//drivers/USB/usbhw_lpc.c ****  * 
 553:..//drivers/USB/usbhw_lpc.c **** 	// configure P0.23 for Vbus sense
 554:..//drivers/USB/usbhw_lpc.c **** 	PINSEL1 = (PINSEL1 & ~(3 << 14)) | (1 << 14);	// P0.23
 555:..//drivers/USB/usbhw_lpc.c **** 	// configure P0.31 for CONNECT
 556:..//drivers/USB/usbhw_lpc.c **** 	PINSEL1 = (PINSEL1 & ~(3 << 30)) | (2 << 30);	// P0.31
 557:..//drivers/USB/usbhw_lpc.c **** */
 558:..//drivers/USB/usbhw_lpc.c **** 	
 559:..//drivers/USB/usbhw_lpc.c **** 	// CodeRed - set up USB pins
 560:..//drivers/USB/usbhw_lpc.c **** 	
 561:..//drivers/USB/usbhw_lpc.c **** 	// P2.9 -> USB_CONNECT
 562:..//drivers/USB/usbhw_lpc.c **** 	LPC_PINCON->PINSEL4 &= ~0x000C0000;
 1312              		.loc 1 562 0
 1313 0004 4CF20003 		movw	r3, #:lower16:1073922048
 1314 0008 C4F20203 		movt	r3, #:upper16:1073922048
 1315 000c 4CF20002 		movw	r2, #:lower16:1073922048
 1316 0010 C4F20202 		movt	r2, #:upper16:1073922048
 1317 0014 1269     		ldr	r2, [r2, #16]
 1318 0016 22F44022 		bic	r2, r2, #786432
 1319 001a 1A61     		str	r2, [r3, #16]
 563:..//drivers/USB/usbhw_lpc.c **** 	LPC_PINCON->PINSEL4 |= 0x00040000;
 1320              		.loc 1 563 0
 1321 001c 4CF20003 		movw	r3, #:lower16:1073922048
 1322 0020 C4F20203 		movt	r3, #:upper16:1073922048
 1323 0024 4CF20002 		movw	r2, #:lower16:1073922048
 1324 0028 C4F20202 		movt	r2, #:upper16:1073922048
 1325 002c 1269     		ldr	r2, [r2, #16]
 1326 002e 42F48022 		orr	r2, r2, #262144
 1327 0032 1A61     		str	r2, [r3, #16]
 564:..//drivers/USB/usbhw_lpc.c **** 
 565:..//drivers/USB/usbhw_lpc.c **** 	// P1.18 -> USB_UP_LED
 566:..//drivers/USB/usbhw_lpc.c **** 	// P1.30 -> VBUS
 567:..//drivers/USB/usbhw_lpc.c **** 	// LPC_PINCON->PINSEL3 &= ~0x30000030;
 568:..//drivers/USB/usbhw_lpc.c **** 	// LPC_PINCON->PINSEL3 |= 0x20000010;
 569:..//drivers/USB/usbhw_lpc.c **** 
 570:..//drivers/USB/usbhw_lpc.c **** 	// P0.29 -> USB_D+
 571:..//drivers/USB/usbhw_lpc.c **** 	// P0.30 -> USB_D-
 572:..//drivers/USB/usbhw_lpc.c **** 	LPC_PINCON->PINSEL1 &= ~0x3C000000;
 1328              		.loc 1 572 0
 1329 0034 4CF20003 		movw	r3, #:lower16:1073922048
 1330 0038 C4F20203 		movt	r3, #:upper16:1073922048
 1331 003c 4CF20002 		movw	r2, #:lower16:1073922048
 1332 0040 C4F20202 		movt	r2, #:upper16:1073922048
 1333 0044 5268     		ldr	r2, [r2, #4]
 1334 0046 22F07052 		bic	r2, r2, #1006632960
 1335 004a 5A60     		str	r2, [r3, #4]
 573:..//drivers/USB/usbhw_lpc.c **** 	LPC_PINCON->PINSEL1 |= 0x14000000;	
 1336              		.loc 1 573 0
 1337 004c 4CF20003 		movw	r3, #:lower16:1073922048
 1338 0050 C4F20203 		movt	r3, #:upper16:1073922048
 1339 0054 4CF20002 		movw	r2, #:lower16:1073922048
 1340 0058 C4F20202 		movt	r2, #:upper16:1073922048
 1341 005c 5268     		ldr	r2, [r2, #4]
 1342 005e 42F0A052 		orr	r2, r2, #335544320
 1343 0062 5A60     		str	r2, [r3, #4]
 574:..//drivers/USB/usbhw_lpc.c **** 
 575:..//drivers/USB/usbhw_lpc.c **** 	
 576:..//drivers/USB/usbhw_lpc.c **** 	// enable PUSB
 577:..//drivers/USB/usbhw_lpc.c **** 	LPC_SC->PCONP |= (1 << 31);
 1344              		.loc 1 577 0
 1345 0064 4CF20003 		movw	r3, #:lower16:1074774016
 1346 0068 C4F20F03 		movt	r3, #:upper16:1074774016
 1347 006c 4CF20002 		movw	r2, #:lower16:1074774016
 1348 0070 C4F20F02 		movt	r2, #:upper16:1074774016
 1349 0074 D2F8C420 		ldr	r2, [r2, #196]
 1350 0078 42F00042 		orr	r2, r2, #-2147483648
 1351 007c C3F8C420 		str	r2, [r3, #196]
 578:..//drivers/USB/usbhw_lpc.c **** 
 579:..//drivers/USB/usbhw_lpc.c **** /*  CodeRed - Comment out original PLL code
 580:..//drivers/USB/usbhw_lpc.c ****  *  PLL now set up by NXP code in target.c within example projects
 581:..//drivers/USB/usbhw_lpc.c ****  * 
 582:..//drivers/USB/usbhw_lpc.c **** 	// initialise PLL
 583:..//drivers/USB/usbhw_lpc.c **** 	PLL1CON = 1;			// enable PLL
 584:..//drivers/USB/usbhw_lpc.c **** 	PLL1CFG = (1 << 5) | 3; // P = 2, M = 4
 585:..//drivers/USB/usbhw_lpc.c **** 	PLL1FEED = 0xAA;
 586:..//drivers/USB/usbhw_lpc.c **** 	PLL1FEED = 0x55;
 587:..//drivers/USB/usbhw_lpc.c **** 	while ((PLL1STAT & (1 << 10)) == 0);
 588:..//drivers/USB/usbhw_lpc.c **** 
 589:..//drivers/USB/usbhw_lpc.c **** 	PLL1CON = 3;			// enable and connect
 590:..//drivers/USB/usbhw_lpc.c **** 	PLL1FEED = 0xAA;
 591:..//drivers/USB/usbhw_lpc.c **** 	PLL1FEED = 0x55;	
 592:..//drivers/USB/usbhw_lpc.c **** 	
 593:..//drivers/USB/usbhw_lpc.c **** */
 594:..//drivers/USB/usbhw_lpc.c **** 	
 595:..//drivers/USB/usbhw_lpc.c **** 
 596:..//drivers/USB/usbhw_lpc.c **** // AWB added USB clock enable
 597:..//drivers/USB/usbhw_lpc.c **** // These are actually the USBClkCtrl and USBClkSt registers
 598:..//drivers/USB/usbhw_lpc.c **** //	  OTG_CLK_CTRL = 0x12;	                  /* Dev clock, AHB clock enable  */
 599:..//drivers/USB/usbhw_lpc.c **** //	  while ((OTG_CLK_STAT & 0x12) != 0x12);
 600:..//drivers/USB/usbhw_lpc.c **** 
 601:..//drivers/USB/usbhw_lpc.c **** 	  LPC_USB->USBClkCtrl = 0x1A;	                  /* Dev clock, AHB clock enable  */
 1352              		.loc 1 601 0
 1353 0080 4CF20003 		movw	r3, #:lower16:1342226432
 1354 0084 C5F20003 		movt	r3, #:upper16:1342226432
 1355 0088 4FF01A02 		mov	r2, #26
 1356 008c C3F8F42F 		str	r2, [r3, #4084]
 1357              	.L58:
 602:..//drivers/USB/usbhw_lpc.c **** 	  while ((LPC_USB->USBClkSt & 0x1A) != 0x1A);
 1358              		.loc 1 602 0
 1359 0090 4CF20003 		movw	r3, #:lower16:1342226432
 1360 0094 C5F20003 		movt	r3, #:upper16:1342226432
 1361 0098 D3F8F83F 		ldr	r3, [r3, #4088]
 1362 009c 03F01A03 		and	r3, r3, #26
 1363 00a0 1A2B     		cmp	r3, #26
 1364 00a2 F5D1     		bne	.L58
 603:..//drivers/USB/usbhw_lpc.c **** 
 604:..//drivers/USB/usbhw_lpc.c **** 	  
 605:..//drivers/USB/usbhw_lpc.c **** 	// disable/clear all interrupts for now
 606:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBDevIntEn = 0;
 1365              		.loc 1 606 0
 1366 00a4 4CF20003 		movw	r3, #:lower16:1342226432
 1367 00a8 C5F20003 		movt	r3, #:upper16:1342226432
 1368 00ac 4FF00002 		mov	r2, #0
 1369 00b0 C3F80422 		str	r2, [r3, #516]
 607:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBDevIntClr = 0xFFFFFFFF;
 1370              		.loc 1 607 0
 1371 00b4 4CF20003 		movw	r3, #:lower16:1342226432
 1372 00b8 C5F20003 		movt	r3, #:upper16:1342226432
 1373 00bc 4FF0FF32 		mov	r2, #-1
 1374 00c0 C3F80822 		str	r2, [r3, #520]
 608:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBDevIntPri = 0;
 1375              		.loc 1 608 0
 1376 00c4 4CF20003 		movw	r3, #:lower16:1342226432
 1377 00c8 C5F20003 		movt	r3, #:upper16:1342226432
 1378 00cc 4FF00002 		mov	r2, #0
 1379 00d0 C3F82C22 		str	r2, [r3, #556]
 609:..//drivers/USB/usbhw_lpc.c **** 
 610:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBEpIntEn = 0;
 1380              		.loc 1 610 0
 1381 00d4 4CF20003 		movw	r3, #:lower16:1342226432
 1382 00d8 C5F20003 		movt	r3, #:upper16:1342226432
 1383 00dc 4FF00002 		mov	r2, #0
 1384 00e0 C3F83422 		str	r2, [r3, #564]
 611:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBEpIntClr = 0xFFFFFFFF;
 1385              		.loc 1 611 0
 1386 00e4 4CF20003 		movw	r3, #:lower16:1342226432
 1387 00e8 C5F20003 		movt	r3, #:upper16:1342226432
 1388 00ec 4FF0FF32 		mov	r2, #-1
 1389 00f0 C3F83822 		str	r2, [r3, #568]
 612:..//drivers/USB/usbhw_lpc.c **** 	LPC_USB->USBEpIntPri = 0;
 1390              		.loc 1 612 0
 1391 00f4 4CF20003 		movw	r3, #:lower16:1342226432
 1392 00f8 C5F20003 		movt	r3, #:upper16:1342226432
 1393 00fc 4FF00002 		mov	r2, #0
 1394 0100 C3F84022 		str	r2, [r3, #576]
 613:..//drivers/USB/usbhw_lpc.c **** 
 614:..//drivers/USB/usbhw_lpc.c **** 	// by default, only ACKs generate interrupts
 615:..//drivers/USB/usbhw_lpc.c **** 	USBHwNakIntEnable(0);
 1395              		.loc 1 615 0
 1396 0104 4FF00000 		mov	r0, #0
 1397 0108 40F20003 		movw	r3, #:lower16:USBHwNakIntEnable
 1398 010c C0F20003 		movt	r3, #:upper16:USBHwNakIntEnable
 1399 0110 9847     		blx	r3
 616:..//drivers/USB/usbhw_lpc.c **** 
 617:..//drivers/USB/usbhw_lpc.c **** 	// CodeRed - commented out LEDs - not used by current port
 618:..//drivers/USB/usbhw_lpc.c **** 	// init debug leds
 619:..//drivers/USB/usbhw_lpc.c ****     /*
 620:..//drivers/USB/usbhw_lpc.c **** 	DEBUG_LED_INIT(5);
 621:..//drivers/USB/usbhw_lpc.c **** 	DEBUG_LED_INIT(6);
 622:..//drivers/USB/usbhw_lpc.c **** 	DEBUG_LED_INIT(7);
 623:..//drivers/USB/usbhw_lpc.c **** 	*/
 624:..//drivers/USB/usbhw_lpc.c **** 	
 625:..//drivers/USB/usbhw_lpc.c **** 	return TRUE;
 1400              		.loc 1 625 0
 1401 0112 4FF00103 		mov	r3, #1
 626:..//drivers/USB/usbhw_lpc.c **** }
 1402              		.loc 1 626 0
 1403 0116 1846     		mov	r0, r3
 1404 0118 80BD     		pop	{r7, pc}
 1405              		.cfi_endproc
 1406              	.LFE48:
 1408 011a 00BF     		.text
 1409              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 usbhw_lpc.c
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:24     .bss._pfnDevIntHandler:00000000 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:27     .bss._pfnDevIntHandler:00000000 _pfnDevIntHandler
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:30     .bss._apfnEPIntHandlers:00000000 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:33     .bss._apfnEPIntHandlers:00000000 _apfnEPIntHandlers
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:36     .bss._pfnFrameHandler:00000000 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:39     .bss._pfnFrameHandler:00000000 _pfnFrameHandler
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:42     .text.Wait4DevInt:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:46     .text.Wait4DevInt:00000000 Wait4DevInt
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:89     .text.USBHwCmd:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:93     .text.USBHwCmd:00000000 USBHwCmd
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:137    .text.USBHwCmdWrite:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:141    .text.USBHwCmdWrite:00000000 USBHwCmdWrite
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:188    .text.USBHwCmdRead:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:192    .text.USBHwCmdRead:00000000 USBHwCmdRead
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:243    .text.USBHwEPRealize:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:247    .text.USBHwEPRealize:00000000 USBHwEPRealize
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:301    .text.USBHwEPEnable:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:305    .text.USBHwEPEnable:00000000 USBHwEPEnable
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:351    .text.USBHwEPConfig:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:356    .text.USBHwEPConfig:00000000 USBHwEPConfig
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:407    .text.USBHwRegisterEPIntHandler:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:412    .text.USBHwRegisterEPIntHandler:00000000 USBHwRegisterEPIntHandler
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:479    .text.USBHwRegisterDevIntHandler:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:484    .text.USBHwRegisterDevIntHandler:00000000 USBHwRegisterDevIntHandler
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:524    .text.USBHwRegisterFrameHandler:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:529    .text.USBHwRegisterFrameHandler:00000000 USBHwRegisterFrameHandler
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:569    .text.USBHwSetAddress:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:574    .text.USBHwSetAddress:00000000 USBHwSetAddress
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:611    .text.USBHwConnect:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:616    .text.USBHwConnect:00000000 USBHwConnect
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:653    .text.USBHwNakIntEnable:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:658    .text.USBHwNakIntEnable:00000000 USBHwNakIntEnable
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:692    .text.USBHwEPGetStatus:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:697    .text.USBHwEPGetStatus:00000000 USBHwEPGetStatus
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:742    .text.USBHwEPStall:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:747    .text.USBHwEPStall:00000000 USBHwEPStall
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:800    .text.USBHwEPWrite:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:805    .text.USBHwEPWrite:00000000 USBHwEPWrite
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:907    .text.USBHwEPRead:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:912    .text.USBHwEPRead:00000000 USBHwEPRead
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:1052   .text.USBHwConfigDevice:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:1057   .text.USBHwConfigDevice:00000000 USBHwConfigDevice
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:1094   .text.USBHwISR:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:1099   .text.USBHwISR:00000000 USBHwISR
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:1293   .text.USBHwInit:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccmSnh02.s:1298   .text.USBHwInit:00000000 USBHwInit
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
