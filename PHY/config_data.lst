   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"config_data.cpp"
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.global	eepromStorage
  24              		.section	.bss.eepromStorage,"aw",%nobits
  25              		.align	2
  28              	eepromStorage:
  29 0000 00000000 		.space	12
  29      00000000 
  29      00000000 
  30              		.global	eepromStorage1
  31              		.section	.bss.eepromStorage1,"aw",%nobits
  32              		.align	2
  35              	eepromStorage1:
  36 0000 00       		.space	1
  37              		.global	eepromStorage2
  38 0001 000000   		.section	.bss.eepromStorage2,"aw",%nobits
  39              		.align	2
  42              	eepromStorage2:
  43 0000 00       		.space	1
  44              		.global	eepromStorage3
  45 0001 000000   		.section	.bss.eepromStorage3,"aw",%nobits
  46              		.align	2
  49              	eepromStorage3:
  50 0000 00       		.space	1
  51              		.global	__aeabi_i2f
  52              		.global	__aeabi_fdiv
  53              		.global	__aeabi_f2d
  54              		.global	__aeabi_d2iz
  55 0001 000000   		.section	.rodata
  56              		.align	2
  57              	.LC0:
  58 0000 57524954 		.ascii	"WRITE ERROR\000"
  58      45204552 
  58      524F5200 
  59              		.section	.text._Z20write_objects_eepromsPvi,"ax",%progbits
  60              		.align	2
  61              		.global	_Z20write_objects_eepromsPvi
  62              		.thumb
  63              		.thumb_func
  65              	_Z20write_objects_eepromsPvi:
  66              	.LFB29:
  67              		.file 1 "..//PHY/config_data.cpp"
   1:..//PHY/config_data.cpp **** #include "config_data.h"
   2:..//PHY/config_data.cpp **** // #include "input_output.h"
   3:..//PHY/config_data.cpp **** #include "delay_timer.h"
   4:..//PHY/config_data.cpp **** #include "delay.h"
   5:..//PHY/config_data.cpp **** EepromStorage eepromStorage;
   6:..//PHY/config_data.cpp **** EepromStorage1 eepromStorage1;
   7:..//PHY/config_data.cpp **** EepromStorage2 eepromStorage2;
   8:..//PHY/config_data.cpp **** EepromStorage3 eepromStorage3;
   9:..//PHY/config_data.cpp **** 
  10:..//PHY/config_data.cpp **** int write_objects_eeprom(int16_t addr, void *obj, int size){
  68              		.loc 1 10 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 48
  71              		@ frame_needed = 1, uses_anonymous_args = 0
  72 0000 80B5     		push	{r7, lr}
  73              	.LCFI0:
  74              		.cfi_def_cfa_offset 8
  75 0002 8CB0     		sub	sp, sp, #48
  76              	.LCFI1:
  77              		.cfi_def_cfa_offset 56
  78 0004 00AF     		add	r7, sp, #0
  79              		.cfi_offset 14, -4
  80              		.cfi_offset 7, -8
  81              	.LCFI2:
  82              		.cfi_def_cfa_register 7
  83 0006 0346     		mov	r3, r0
  84 0008 B960     		str	r1, [r7, #8]
  85 000a 7A60     		str	r2, [r7, #4]
  86 000c FB81     		strh	r3, [r7, #14]	@ movhi
  87              	.LBB2:
  11:..//PHY/config_data.cpp **** 	// we can write 32 bytes at a time..
  12:..//PHY/config_data.cpp **** 	int ret=0;
  88              		.loc 1 12 0
  89 000e 4FF00003 		mov	r3, #0
  90 0012 3B61     		str	r3, [r7, #16]
  13:..//PHY/config_data.cpp **** 	int id=0;
  91              		.loc 1 13 0
  92 0014 4FF00003 		mov	r3, #0
  93 0018 7B61     		str	r3, [r7, #20]
  14:..//PHY/config_data.cpp **** 	int length=0;
  94              		.loc 1 14 0
  95 001a 4FF00003 		mov	r3, #0
  96 001e BB61     		str	r3, [r7, #24]
  15:..//PHY/config_data.cpp **** 	int arr_idx=0;
  97              		.loc 1 15 0
  98 0020 4FF00003 		mov	r3, #0
  99 0024 FB61     		str	r3, [r7, #28]
  16:..//PHY/config_data.cpp **** 	int chunkSize=16;
 100              		.loc 1 16 0
 101 0026 4FF01003 		mov	r3, #16
 102 002a 3B62     		str	r3, [r7, #32]
  17:..//PHY/config_data.cpp **** 	float buf_size=16.0;
 103              		.loc 1 17 0
 104 002c 424B     		ldr	r3, .L7	@ float
 105 002e 7B62     		str	r3, [r7, #36]	@ float
  18:..//PHY/config_data.cpp **** 	int csize = 16;
 106              		.loc 1 18 0
 107 0030 4FF01003 		mov	r3, #16
 108 0034 BB62     		str	r3, [r7, #40]
  19:..//PHY/config_data.cpp **** 		
  20:..//PHY/config_data.cpp **** 	uint8_t *ptr=(uint8_t *) obj;	
 109              		.loc 1 20 0
 110 0036 BB68     		ldr	r3, [r7, #8]
 111 0038 FB62     		str	r3, [r7, #44]
  21:..//PHY/config_data.cpp **** 	length=ceil((double)(size/buf_size));
 112              		.loc 1 21 0
 113 003a 40F20003 		movw	r3, #:lower16:__aeabi_i2f
 114 003e C0F20003 		movt	r3, #:upper16:__aeabi_i2f
 115 0042 7868     		ldr	r0, [r7, #4]
 116 0044 9847     		blx	r3
 117 0046 0246     		mov	r2, r0
 118 0048 40F20003 		movw	r3, #:lower16:__aeabi_fdiv
 119 004c C0F20003 		movt	r3, #:upper16:__aeabi_fdiv
 120 0050 1046     		mov	r0, r2
 121 0052 796A     		ldr	r1, [r7, #36]	@ float
 122 0054 9847     		blx	r3
 123 0056 0346     		mov	r3, r0
 124 0058 1A46     		mov	r2, r3
 125 005a 40F20003 		movw	r3, #:lower16:__aeabi_f2d
 126 005e C0F20003 		movt	r3, #:upper16:__aeabi_f2d
 127 0062 1046     		mov	r0, r2
 128 0064 9847     		blx	r3
 129 0066 0246     		mov	r2, r0
 130 0068 0B46     		mov	r3, r1
 131 006a 1046     		mov	r0, r2
 132 006c 1946     		mov	r1, r3
 133 006e 40F20003 		movw	r3, #:lower16:ceil
 134 0072 C0F20003 		movt	r3, #:upper16:ceil
 135 0076 9847     		blx	r3
 136 0078 40F20003 		movw	r3, #:lower16:__aeabi_d2iz
 137 007c C0F20003 		movt	r3, #:upper16:__aeabi_d2iz
 138 0080 9847     		blx	r3
 139 0082 0346     		mov	r3, r0
 140 0084 BB61     		str	r3, [r7, #24]
  22:..//PHY/config_data.cpp **** 	// length=4;
  23:..//PHY/config_data.cpp **** 	for(id=0;id<length;id++){
 141              		.loc 1 23 0
 142 0086 4FF00003 		mov	r3, #0
 143 008a 7B61     		str	r3, [r7, #20]
 144 008c 3EE0     		b	.L2
 145              	.L5:
  24:..//PHY/config_data.cpp **** 		arr_idx=id*chunkSize;
 146              		.loc 1 24 0
 147 008e 7B69     		ldr	r3, [r7, #20]
 148 0090 3A6A     		ldr	r2, [r7, #32]
 149 0092 02FB03F3 		mul	r3, r2, r3
 150 0096 FB61     		str	r3, [r7, #28]
  25:..//PHY/config_data.cpp **** 		csize = chunkSize;
 151              		.loc 1 25 0
 152 0098 3B6A     		ldr	r3, [r7, #32]
 153 009a BB62     		str	r3, [r7, #40]
  26:..//PHY/config_data.cpp **** 		if (size - arr_idx < chunkSize){
 154              		.loc 1 26 0
 155 009c 7A68     		ldr	r2, [r7, #4]
 156 009e FB69     		ldr	r3, [r7, #28]
 157 00a0 C3EB0202 		rsb	r2, r3, r2
 158 00a4 3B6A     		ldr	r3, [r7, #32]
 159 00a6 9A42     		cmp	r2, r3
 160 00a8 04DA     		bge	.L3
  27:..//PHY/config_data.cpp **** 			csize = size - arr_idx;
 161              		.loc 1 27 0
 162 00aa 7A68     		ldr	r2, [r7, #4]
 163 00ac FB69     		ldr	r3, [r7, #28]
 164 00ae C3EB0203 		rsb	r3, r3, r2
 165 00b2 BB62     		str	r3, [r7, #40]
 166              	.L3:
  28:..//PHY/config_data.cpp **** 		}
  29:..//PHY/config_data.cpp **** 		ret=i2cEEPROM_write8(addr,&(ptr[arr_idx]),csize);	
 167              		.loc 1 29 0
 168 00b4 FA69     		ldr	r2, [r7, #28]
 169 00b6 FB6A     		ldr	r3, [r7, #44]
 170 00b8 1344     		add	r3, r2, r3
 171 00ba B7F90E20 		ldrsh	r2, [r7, #14]
 172 00be 1046     		mov	r0, r2
 173 00c0 1946     		mov	r1, r3
 174 00c2 BA6A     		ldr	r2, [r7, #40]
 175 00c4 40F20003 		movw	r3, #:lower16:i2cEEPROM_write8
 176 00c8 C0F20003 		movt	r3, #:upper16:i2cEEPROM_write8
 177 00cc 9847     		blx	r3
 178 00ce 0346     		mov	r3, r0
 179 00d0 3B61     		str	r3, [r7, #16]
  30:..//PHY/config_data.cpp **** 		addr+=chunkSize;
 180              		.loc 1 30 0
 181 00d2 3B6A     		ldr	r3, [r7, #32]
 182 00d4 9AB2     		uxth	r2, r3
 183 00d6 FB89     		ldrh	r3, [r7, #14]
 184 00d8 1344     		add	r3, r2, r3
 185 00da 9BB2     		uxth	r3, r3
 186 00dc FB81     		strh	r3, [r7, #14]	@ movhi
  31:..//PHY/config_data.cpp **** 		// addr++;
  32:..//PHY/config_data.cpp **** 		if(ret!=0){
 187              		.loc 1 32 0
 188 00de 3B69     		ldr	r3, [r7, #16]
 189 00e0 002B     		cmp	r3, #0
 190 00e2 08D0     		beq	.L4
  33:..//PHY/config_data.cpp **** 			printf("WRITE ERROR\n");
 191              		.loc 1 33 0
 192 00e4 40F20000 		movw	r0, #:lower16:.LC0
 193 00e8 C0F20000 		movt	r0, #:upper16:.LC0
 194 00ec 40F20003 		movw	r3, #:lower16:puts
 195 00f0 C0F20003 		movt	r3, #:upper16:puts
 196 00f4 9847     		blx	r3
 197              	.L4:
  34:..//PHY/config_data.cpp **** 		}
  35:..//PHY/config_data.cpp **** 
  36:..//PHY/config_data.cpp **** 		// my_delay(50);
  37:..//PHY/config_data.cpp **** 		_delay_ms(10);
 198              		.loc 1 37 0
 199 00f6 4FF00A00 		mov	r0, #10
 200 00fa 40F20003 		movw	r3, #:lower16:_delay_ms
 201 00fe C0F20003 		movt	r3, #:upper16:_delay_ms
 202 0102 9847     		blx	r3
 203              		.loc 1 23 0
 204 0104 7B69     		ldr	r3, [r7, #20]
 205 0106 03F10103 		add	r3, r3, #1
 206 010a 7B61     		str	r3, [r7, #20]
 207              	.L2:
 208 010c 7A69     		ldr	r2, [r7, #20]
 209 010e BB69     		ldr	r3, [r7, #24]
 210 0110 9A42     		cmp	r2, r3
 211 0112 ACBF     		ite	ge
 212 0114 0023     		movge	r3, #0
 213 0116 0123     		movlt	r3, #1
 214 0118 DBB2     		uxtb	r3, r3
 215 011a 002B     		cmp	r3, #0
 216 011c B7D1     		bne	.L5
  38:..//PHY/config_data.cpp **** 	}	
  39:..//PHY/config_data.cpp **** 	I2CDeinit();
 217              		.loc 1 39 0
 218 011e 40F20003 		movw	r3, #:lower16:I2CDeinit
 219 0122 C0F20003 		movt	r3, #:upper16:I2CDeinit
 220 0126 9847     		blx	r3
  40:..//PHY/config_data.cpp **** 	return 1;
 221              		.loc 1 40 0
 222 0128 4FF00103 		mov	r3, #1
 223              	.LBE2:
  41:..//PHY/config_data.cpp **** }
 224              		.loc 1 41 0
 225 012c 1846     		mov	r0, r3
 226 012e 07F13007 		add	r7, r7, #48
 227 0132 BD46     		mov	sp, r7
 228 0134 80BD     		pop	{r7, pc}
 229              	.L8:
 230 0136 00BF     		.align	2
 231              	.L7:
 232 0138 00008041 		.word	1098907648
 233              		.cfi_endproc
 234              	.LFE29:
 236              		.section	.rodata
 237              		.align	2
 238              	.LC1:
 239 000c 52454144 		.ascii	"READ ERROR\000"
 239      20455252 
 239      4F5200
 240              		.section	.text._Z19read_objects_eepromsPvi,"ax",%progbits
 241              		.align	2
 242              		.global	_Z19read_objects_eepromsPvi
 243              		.thumb
 244              		.thumb_func
 246              	_Z19read_objects_eepromsPvi:
 247              	.LFB30:
  42:..//PHY/config_data.cpp **** 
  43:..//PHY/config_data.cpp **** int read_objects_eeprom(int16_t addr, void *obj, int size){	
 248              		.loc 1 43 0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 48
 251              		@ frame_needed = 1, uses_anonymous_args = 0
 252 0000 80B5     		push	{r7, lr}
 253              	.LCFI3:
 254              		.cfi_def_cfa_offset 8
 255 0002 8CB0     		sub	sp, sp, #48
 256              	.LCFI4:
 257              		.cfi_def_cfa_offset 56
 258 0004 00AF     		add	r7, sp, #0
 259              		.cfi_offset 14, -4
 260              		.cfi_offset 7, -8
 261              	.LCFI5:
 262              		.cfi_def_cfa_register 7
 263 0006 0346     		mov	r3, r0
 264 0008 B960     		str	r1, [r7, #8]
 265 000a 7A60     		str	r2, [r7, #4]
 266 000c FB81     		strh	r3, [r7, #14]	@ movhi
 267              	.LBB3:
  44:..//PHY/config_data.cpp **** 	int ret=0;
 268              		.loc 1 44 0
 269 000e 4FF00003 		mov	r3, #0
 270 0012 3B61     		str	r3, [r7, #16]
  45:..//PHY/config_data.cpp **** 	int id=0;
 271              		.loc 1 45 0
 272 0014 4FF00003 		mov	r3, #0
 273 0018 7B61     		str	r3, [r7, #20]
  46:..//PHY/config_data.cpp **** 	int length=0;
 274              		.loc 1 46 0
 275 001a 4FF00003 		mov	r3, #0
 276 001e BB61     		str	r3, [r7, #24]
  47:..//PHY/config_data.cpp **** 	int arr_idx=0;
 277              		.loc 1 47 0
 278 0020 4FF00003 		mov	r3, #0
 279 0024 FB61     		str	r3, [r7, #28]
  48:..//PHY/config_data.cpp **** 	int chunkSize=16;
 280              		.loc 1 48 0
 281 0026 4FF01003 		mov	r3, #16
 282 002a 3B62     		str	r3, [r7, #32]
  49:..//PHY/config_data.cpp **** 	float buf_size=16.0;
 283              		.loc 1 49 0
 284 002c 3F4B     		ldr	r3, .L15	@ float
 285 002e 7B62     		str	r3, [r7, #36]	@ float
  50:..//PHY/config_data.cpp **** 	int csize = 16;
 286              		.loc 1 50 0
 287 0030 4FF01003 		mov	r3, #16
 288 0034 BB62     		str	r3, [r7, #40]
  51:..//PHY/config_data.cpp **** 	
  52:..//PHY/config_data.cpp **** 	uint8_t *ptr=(uint8_t *) obj;
 289              		.loc 1 52 0
 290 0036 BB68     		ldr	r3, [r7, #8]
 291 0038 FB62     		str	r3, [r7, #44]
  53:..//PHY/config_data.cpp **** 	length=ceil((double)(size/buf_size));
 292              		.loc 1 53 0
 293 003a 40F20003 		movw	r3, #:lower16:__aeabi_i2f
 294 003e C0F20003 		movt	r3, #:upper16:__aeabi_i2f
 295 0042 7868     		ldr	r0, [r7, #4]
 296 0044 9847     		blx	r3
 297 0046 0246     		mov	r2, r0
 298 0048 40F20003 		movw	r3, #:lower16:__aeabi_fdiv
 299 004c C0F20003 		movt	r3, #:upper16:__aeabi_fdiv
 300 0050 1046     		mov	r0, r2
 301 0052 796A     		ldr	r1, [r7, #36]	@ float
 302 0054 9847     		blx	r3
 303 0056 0346     		mov	r3, r0
 304 0058 1A46     		mov	r2, r3
 305 005a 40F20003 		movw	r3, #:lower16:__aeabi_f2d
 306 005e C0F20003 		movt	r3, #:upper16:__aeabi_f2d
 307 0062 1046     		mov	r0, r2
 308 0064 9847     		blx	r3
 309 0066 0246     		mov	r2, r0
 310 0068 0B46     		mov	r3, r1
 311 006a 1046     		mov	r0, r2
 312 006c 1946     		mov	r1, r3
 313 006e 40F20003 		movw	r3, #:lower16:ceil
 314 0072 C0F20003 		movt	r3, #:upper16:ceil
 315 0076 9847     		blx	r3
 316 0078 40F20003 		movw	r3, #:lower16:__aeabi_d2iz
 317 007c C0F20003 		movt	r3, #:upper16:__aeabi_d2iz
 318 0080 9847     		blx	r3
 319 0082 0346     		mov	r3, r0
 320 0084 BB61     		str	r3, [r7, #24]
  54:..//PHY/config_data.cpp **** 	for(id=0;id<length;id++){
 321              		.loc 1 54 0
 322 0086 4FF00003 		mov	r3, #0
 323 008a 7B61     		str	r3, [r7, #20]
 324 008c 39E0     		b	.L10
 325              	.L13:
  55:..//PHY/config_data.cpp **** 		arr_idx=id*chunkSize;
 326              		.loc 1 55 0
 327 008e 7B69     		ldr	r3, [r7, #20]
 328 0090 3A6A     		ldr	r2, [r7, #32]
 329 0092 02FB03F3 		mul	r3, r2, r3
 330 0096 FB61     		str	r3, [r7, #28]
  56:..//PHY/config_data.cpp **** 		csize = chunkSize;
 331              		.loc 1 56 0
 332 0098 3B6A     		ldr	r3, [r7, #32]
 333 009a BB62     		str	r3, [r7, #40]
  57:..//PHY/config_data.cpp **** 		if (size - arr_idx < chunkSize){
 334              		.loc 1 57 0
 335 009c 7A68     		ldr	r2, [r7, #4]
 336 009e FB69     		ldr	r3, [r7, #28]
 337 00a0 C3EB0202 		rsb	r2, r3, r2
 338 00a4 3B6A     		ldr	r3, [r7, #32]
 339 00a6 9A42     		cmp	r2, r3
 340 00a8 04DA     		bge	.L11
  58:..//PHY/config_data.cpp **** 			csize = size - arr_idx;
 341              		.loc 1 58 0
 342 00aa 7A68     		ldr	r2, [r7, #4]
 343 00ac FB69     		ldr	r3, [r7, #28]
 344 00ae C3EB0203 		rsb	r3, r3, r2
 345 00b2 BB62     		str	r3, [r7, #40]
 346              	.L11:
  59:..//PHY/config_data.cpp **** 		}
  60:..//PHY/config_data.cpp **** 		ret=i2cEEPROM_read8(addr,&ptr[arr_idx],csize);
 347              		.loc 1 60 0
 348 00b4 FA69     		ldr	r2, [r7, #28]
 349 00b6 FB6A     		ldr	r3, [r7, #44]
 350 00b8 1344     		add	r3, r2, r3
 351 00ba B7F90E20 		ldrsh	r2, [r7, #14]
 352 00be 1046     		mov	r0, r2
 353 00c0 1946     		mov	r1, r3
 354 00c2 BA6A     		ldr	r2, [r7, #40]
 355 00c4 40F20003 		movw	r3, #:lower16:i2cEEPROM_read8
 356 00c8 C0F20003 		movt	r3, #:upper16:i2cEEPROM_read8
 357 00cc 9847     		blx	r3
 358 00ce 0346     		mov	r3, r0
 359 00d0 DBB2     		uxtb	r3, r3
 360 00d2 5BB2     		sxtb	r3, r3
 361 00d4 3B61     		str	r3, [r7, #16]
  61:..//PHY/config_data.cpp **** 		addr+=chunkSize;
 362              		.loc 1 61 0
 363 00d6 3B6A     		ldr	r3, [r7, #32]
 364 00d8 9AB2     		uxth	r2, r3
 365 00da FB89     		ldrh	r3, [r7, #14]
 366 00dc 1344     		add	r3, r2, r3
 367 00de 9BB2     		uxth	r3, r3
 368 00e0 FB81     		strh	r3, [r7, #14]	@ movhi
  62:..//PHY/config_data.cpp **** 		// addr++;
  63:..//PHY/config_data.cpp **** 		if(ret!=0){
 369              		.loc 1 63 0
 370 00e2 3B69     		ldr	r3, [r7, #16]
 371 00e4 002B     		cmp	r3, #0
 372 00e6 08D0     		beq	.L12
  64:..//PHY/config_data.cpp **** 			printf("READ ERROR\n");
 373              		.loc 1 64 0
 374 00e8 40F20000 		movw	r0, #:lower16:.LC1
 375 00ec C0F20000 		movt	r0, #:upper16:.LC1
 376 00f0 40F20003 		movw	r3, #:lower16:puts
 377 00f4 C0F20003 		movt	r3, #:upper16:puts
 378 00f8 9847     		blx	r3
 379              	.L12:
 380              		.loc 1 54 0
 381 00fa 7B69     		ldr	r3, [r7, #20]
 382 00fc 03F10103 		add	r3, r3, #1
 383 0100 7B61     		str	r3, [r7, #20]
 384              	.L10:
 385 0102 7A69     		ldr	r2, [r7, #20]
 386 0104 BB69     		ldr	r3, [r7, #24]
 387 0106 9A42     		cmp	r2, r3
 388 0108 ACBF     		ite	ge
 389 010a 0023     		movge	r3, #0
 390 010c 0123     		movlt	r3, #1
 391 010e DBB2     		uxtb	r3, r3
 392 0110 002B     		cmp	r3, #0
 393 0112 BCD1     		bne	.L13
  65:..//PHY/config_data.cpp **** 		}	
  66:..//PHY/config_data.cpp **** 		// my_delay(50);
  67:..//PHY/config_data.cpp **** 	}	
  68:..//PHY/config_data.cpp **** 	I2CDeinit();
 394              		.loc 1 68 0
 395 0114 40F20003 		movw	r3, #:lower16:I2CDeinit
 396 0118 C0F20003 		movt	r3, #:upper16:I2CDeinit
 397 011c 9847     		blx	r3
  69:..//PHY/config_data.cpp **** 	return 1;
 398              		.loc 1 69 0
 399 011e 4FF00103 		mov	r3, #1
 400              	.LBE3:
  70:..//PHY/config_data.cpp **** }
 401              		.loc 1 70 0
 402 0122 1846     		mov	r0, r3
 403 0124 07F13007 		add	r7, r7, #48
 404 0128 BD46     		mov	sp, r7
 405 012a 80BD     		pop	{r7, pc}
 406              	.L16:
 407              		.align	2
 408              	.L15:
 409 012c 00008041 		.word	1098907648
 410              		.cfi_endproc
 411              	.LFE30:
 413              		.section	.text._Z19read_config_versionv,"ax",%progbits
 414              		.align	2
 415              		.global	_Z19read_config_versionv
 416              		.thumb
 417              		.thumb_func
 419              	_Z19read_config_versionv:
 420              	.LFB31:
  71:..//PHY/config_data.cpp **** 
  72:..//PHY/config_data.cpp **** #if 1
  73:..//PHY/config_data.cpp **** int read_config_version(){	
 421              		.loc 1 73 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 56
 424              		@ frame_needed = 1, uses_anonymous_args = 0
 425 0000 80B5     		push	{r7, lr}
 426              	.LCFI6:
 427              		.cfi_def_cfa_offset 8
 428 0002 8EB0     		sub	sp, sp, #56
 429              	.LCFI7:
 430              		.cfi_def_cfa_offset 64
 431 0004 00AF     		add	r7, sp, #0
 432              		.cfi_offset 14, -4
 433              		.cfi_offset 7, -8
 434              	.LCFI8:
 435              		.cfi_def_cfa_register 7
 436              	.LBB4:
  74:..//PHY/config_data.cpp **** 	int ret=0;
 437              		.loc 1 74 0
 438 0006 4FF00003 		mov	r3, #0
 439 000a FB60     		str	r3, [r7, #12]
  75:..//PHY/config_data.cpp **** 	int id=0;
 440              		.loc 1 75 0
 441 000c 4FF00003 		mov	r3, #0
 442 0010 3B61     		str	r3, [r7, #16]
  76:..//PHY/config_data.cpp **** 	int length=0;
 443              		.loc 1 76 0
 444 0012 4FF00003 		mov	r3, #0
 445 0016 7B61     		str	r3, [r7, #20]
  77:..//PHY/config_data.cpp **** 	int arr_idx=0;
 446              		.loc 1 77 0
 447 0018 4FF00003 		mov	r3, #0
 448 001c BB61     		str	r3, [r7, #24]
  78:..//PHY/config_data.cpp **** 	int chunkSize=16;
 449              		.loc 1 78 0
 450 001e 4FF01003 		mov	r3, #16
 451 0022 FB61     		str	r3, [r7, #28]
  79:..//PHY/config_data.cpp **** 	float buf_size=16.0;
 452              		.loc 1 79 0
 453 0024 4F4B     		ldr	r3, .L26	@ float
 454 0026 3B62     		str	r3, [r7, #32]	@ float
  80:..//PHY/config_data.cpp **** 	int csize = 16;
 455              		.loc 1 80 0
 456 0028 4FF01003 		mov	r3, #16
 457 002c 7B62     		str	r3, [r7, #36]
  81:..//PHY/config_data.cpp **** 	int16_t addr=0;
 458              		.loc 1 81 0
 459 002e 4FF00003 		mov	r3, #0
 460 0032 7B85     		strh	r3, [r7, #42]	@ movhi
  82:..//PHY/config_data.cpp **** 	EepromStorage obj;
  83:..//PHY/config_data.cpp **** 	int size=sizeof(EepromStorage);
 461              		.loc 1 83 0
 462 0034 4FF00C03 		mov	r3, #12
 463 0038 FB62     		str	r3, [r7, #44]
  84:..//PHY/config_data.cpp **** 	
  85:..//PHY/config_data.cpp **** 	uint8_t *ptr=(uint8_t *) (&obj);
 464              		.loc 1 85 0
 465 003a 3B46     		mov	r3, r7
 466 003c 3B63     		str	r3, [r7, #48]
  86:..//PHY/config_data.cpp **** 	length=ceil((double)(size/buf_size));
 467              		.loc 1 86 0
 468 003e 40F20003 		movw	r3, #:lower16:__aeabi_i2f
 469 0042 C0F20003 		movt	r3, #:upper16:__aeabi_i2f
 470 0046 F86A     		ldr	r0, [r7, #44]
 471 0048 9847     		blx	r3
 472 004a 0246     		mov	r2, r0
 473 004c 40F20003 		movw	r3, #:lower16:__aeabi_fdiv
 474 0050 C0F20003 		movt	r3, #:upper16:__aeabi_fdiv
 475 0054 1046     		mov	r0, r2
 476 0056 396A     		ldr	r1, [r7, #32]	@ float
 477 0058 9847     		blx	r3
 478 005a 0346     		mov	r3, r0
 479 005c 1A46     		mov	r2, r3
 480 005e 40F20003 		movw	r3, #:lower16:__aeabi_f2d
 481 0062 C0F20003 		movt	r3, #:upper16:__aeabi_f2d
 482 0066 1046     		mov	r0, r2
 483 0068 9847     		blx	r3
 484 006a 0246     		mov	r2, r0
 485 006c 0B46     		mov	r3, r1
 486 006e 1046     		mov	r0, r2
 487 0070 1946     		mov	r1, r3
 488 0072 40F20003 		movw	r3, #:lower16:ceil
 489 0076 C0F20003 		movt	r3, #:upper16:ceil
 490 007a 9847     		blx	r3
 491 007c 40F20003 		movw	r3, #:lower16:__aeabi_d2iz
 492 0080 C0F20003 		movt	r3, #:upper16:__aeabi_d2iz
 493 0084 9847     		blx	r3
 494 0086 0346     		mov	r3, r0
 495 0088 7B61     		str	r3, [r7, #20]
  87:..//PHY/config_data.cpp **** 	for(id=0;id<length;id++){
 496              		.loc 1 87 0
 497 008a 4FF00003 		mov	r3, #0
 498 008e 3B61     		str	r3, [r7, #16]
 499 0090 39E0     		b	.L18
 500              	.L21:
  88:..//PHY/config_data.cpp **** 		arr_idx=id*chunkSize;
 501              		.loc 1 88 0
 502 0092 3B69     		ldr	r3, [r7, #16]
 503 0094 FA69     		ldr	r2, [r7, #28]
 504 0096 02FB03F3 		mul	r3, r2, r3
 505 009a BB61     		str	r3, [r7, #24]
  89:..//PHY/config_data.cpp **** 		csize = chunkSize;
 506              		.loc 1 89 0
 507 009c FB69     		ldr	r3, [r7, #28]
 508 009e 7B62     		str	r3, [r7, #36]
  90:..//PHY/config_data.cpp **** 		if (size - arr_idx < chunkSize){
 509              		.loc 1 90 0
 510 00a0 FA6A     		ldr	r2, [r7, #44]
 511 00a2 BB69     		ldr	r3, [r7, #24]
 512 00a4 C3EB0202 		rsb	r2, r3, r2
 513 00a8 FB69     		ldr	r3, [r7, #28]
 514 00aa 9A42     		cmp	r2, r3
 515 00ac 04DA     		bge	.L19
  91:..//PHY/config_data.cpp **** 			csize = size - arr_idx;
 516              		.loc 1 91 0
 517 00ae FA6A     		ldr	r2, [r7, #44]
 518 00b0 BB69     		ldr	r3, [r7, #24]
 519 00b2 C3EB0203 		rsb	r3, r3, r2
 520 00b6 7B62     		str	r3, [r7, #36]
 521              	.L19:
  92:..//PHY/config_data.cpp **** 		}
  93:..//PHY/config_data.cpp **** 		ret=i2cEEPROM_read8(addr,&ptr[arr_idx],csize);
 522              		.loc 1 93 0
 523 00b8 BA69     		ldr	r2, [r7, #24]
 524 00ba 3B6B     		ldr	r3, [r7, #48]
 525 00bc 1344     		add	r3, r2, r3
 526 00be B7F92A20 		ldrsh	r2, [r7, #42]
 527 00c2 1046     		mov	r0, r2
 528 00c4 1946     		mov	r1, r3
 529 00c6 7A6A     		ldr	r2, [r7, #36]
 530 00c8 40F20003 		movw	r3, #:lower16:i2cEEPROM_read8
 531 00cc C0F20003 		movt	r3, #:upper16:i2cEEPROM_read8
 532 00d0 9847     		blx	r3
 533 00d2 0346     		mov	r3, r0
 534 00d4 DBB2     		uxtb	r3, r3
 535 00d6 5BB2     		sxtb	r3, r3
 536 00d8 FB60     		str	r3, [r7, #12]
  94:..//PHY/config_data.cpp **** 		addr+=chunkSize;
 537              		.loc 1 94 0
 538 00da FB69     		ldr	r3, [r7, #28]
 539 00dc 9AB2     		uxth	r2, r3
 540 00de 7B8D     		ldrh	r3, [r7, #42]
 541 00e0 1344     		add	r3, r2, r3
 542 00e2 9BB2     		uxth	r3, r3
 543 00e4 7B85     		strh	r3, [r7, #42]	@ movhi
  95:..//PHY/config_data.cpp **** 		// addr++;		
  96:..//PHY/config_data.cpp **** 		if(ret!=0){
 544              		.loc 1 96 0
 545 00e6 FB68     		ldr	r3, [r7, #12]
 546 00e8 002B     		cmp	r3, #0
 547 00ea 08D0     		beq	.L20
  97:..//PHY/config_data.cpp **** 			printf("READ ERROR\n");
 548              		.loc 1 97 0
 549 00ec 40F20000 		movw	r0, #:lower16:.LC1
 550 00f0 C0F20000 		movt	r0, #:upper16:.LC1
 551 00f4 40F20003 		movw	r3, #:lower16:puts
 552 00f8 C0F20003 		movt	r3, #:upper16:puts
 553 00fc 9847     		blx	r3
 554              	.L20:
 555              		.loc 1 87 0
 556 00fe 3B69     		ldr	r3, [r7, #16]
 557 0100 03F10103 		add	r3, r3, #1
 558 0104 3B61     		str	r3, [r7, #16]
 559              	.L18:
 560 0106 3A69     		ldr	r2, [r7, #16]
 561 0108 7B69     		ldr	r3, [r7, #20]
 562 010a 9A42     		cmp	r2, r3
 563 010c ACBF     		ite	ge
 564 010e 0023     		movge	r3, #0
 565 0110 0123     		movlt	r3, #1
 566 0112 DBB2     		uxtb	r3, r3
 567 0114 002B     		cmp	r3, #0
 568 0116 BCD1     		bne	.L21
  98:..//PHY/config_data.cpp **** 		}
  99:..//PHY/config_data.cpp **** 	}
 100:..//PHY/config_data.cpp **** 	I2CDeinit();
 569              		.loc 1 100 0
 570 0118 40F20003 		movw	r3, #:lower16:I2CDeinit
 571 011c C0F20003 		movt	r3, #:upper16:I2CDeinit
 572 0120 9847     		blx	r3
 101:..//PHY/config_data.cpp **** 	EepromStorage *es= &obj;
 573              		.loc 1 101 0
 574 0122 3B46     		mov	r3, r7
 575 0124 7B63     		str	r3, [r7, #52]
 102:..//PHY/config_data.cpp **** 	if(fw_major_version!=es->fw_major_version)
 576              		.loc 1 102 0
 577 0126 7B6B     		ldr	r3, [r7, #52]
 578 0128 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 579 012a 40F20003 		movw	r3, #:lower16:fw_major_version
 580 012e C0F20003 		movt	r3, #:upper16:fw_major_version
 581 0132 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 582 0134 9A42     		cmp	r2, r3
 583 0136 02D0     		beq	.L22
 103:..//PHY/config_data.cpp **** 		return 1;
 584              		.loc 1 103 0
 585 0138 4FF00103 		mov	r3, #1
 586 013c 0DE0     		b	.L23
 587              	.L22:
 104:..//PHY/config_data.cpp **** 	if(fw_minor_version!=es->fw_minor_version)
 588              		.loc 1 104 0
 589 013e 7B6B     		ldr	r3, [r7, #52]
 590 0140 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 591 0142 40F20003 		movw	r3, #:lower16:fw_minor_version
 592 0146 C0F20003 		movt	r3, #:upper16:fw_minor_version
 593 014a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 594 014c 9A42     		cmp	r2, r3
 595 014e 02D0     		beq	.L24
 105:..//PHY/config_data.cpp **** 		return 2;	
 596              		.loc 1 105 0
 597 0150 4FF00203 		mov	r3, #2
 598 0154 01E0     		b	.L23
 599              	.L24:
 106:..//PHY/config_data.cpp **** 	return 0;
 600              		.loc 1 106 0
 601 0156 4FF00003 		mov	r3, #0
 602              	.L23:
 603              	.LBE4:
 107:..//PHY/config_data.cpp **** }
 604              		.loc 1 107 0
 605 015a 1846     		mov	r0, r3
 606 015c 07F13807 		add	r7, r7, #56
 607 0160 BD46     		mov	sp, r7
 608 0162 80BD     		pop	{r7, pc}
 609              	.L27:
 610              		.align	2
 611              	.L26:
 612 0164 00008041 		.word	1098907648
 613              		.cfi_endproc
 614              	.LFE31:
 616              		.section	.text._Z19read_config_versionRhS_,"ax",%progbits
 617              		.align	2
 618              		.global	_Z19read_config_versionRhS_
 619              		.thumb
 620              		.thumb_func
 622              	_Z19read_config_versionRhS_:
 623              	.LFB32:
 108:..//PHY/config_data.cpp **** #endif
 109:..//PHY/config_data.cpp **** 
 110:..//PHY/config_data.cpp **** int read_config_version(uint8_t &major, uint8_t &minor){	
 624              		.loc 1 110 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 64
 627              		@ frame_needed = 1, uses_anonymous_args = 0
 628 0000 80B5     		push	{r7, lr}
 629              	.LCFI9:
 630              		.cfi_def_cfa_offset 8
 631 0002 90B0     		sub	sp, sp, #64
 632              	.LCFI10:
 633              		.cfi_def_cfa_offset 72
 634 0004 00AF     		add	r7, sp, #0
 635              		.cfi_offset 14, -4
 636              		.cfi_offset 7, -8
 637              	.LCFI11:
 638              		.cfi_def_cfa_register 7
 639 0006 7860     		str	r0, [r7, #4]
 640 0008 3960     		str	r1, [r7, #0]
 641              	.LBB5:
 111:..//PHY/config_data.cpp **** 	int ret=0;
 642              		.loc 1 111 0
 643 000a 4FF00003 		mov	r3, #0
 644 000e 7B61     		str	r3, [r7, #20]
 112:..//PHY/config_data.cpp **** 	int id=0;
 645              		.loc 1 112 0
 646 0010 4FF00003 		mov	r3, #0
 647 0014 BB61     		str	r3, [r7, #24]
 113:..//PHY/config_data.cpp **** 	int length=0;
 648              		.loc 1 113 0
 649 0016 4FF00003 		mov	r3, #0
 650 001a FB61     		str	r3, [r7, #28]
 114:..//PHY/config_data.cpp **** 	int arr_idx=0;
 651              		.loc 1 114 0
 652 001c 4FF00003 		mov	r3, #0
 653 0020 3B62     		str	r3, [r7, #32]
 115:..//PHY/config_data.cpp **** 	int chunkSize=16;
 654              		.loc 1 115 0
 655 0022 4FF01003 		mov	r3, #16
 656 0026 7B62     		str	r3, [r7, #36]
 116:..//PHY/config_data.cpp **** 	float buf_size=16.0;
 657              		.loc 1 116 0
 658 0028 4F4B     		ldr	r3, .L37	@ float
 659 002a BB62     		str	r3, [r7, #40]	@ float
 117:..//PHY/config_data.cpp **** 	int csize = 16;
 660              		.loc 1 117 0
 661 002c 4FF01003 		mov	r3, #16
 662 0030 FB62     		str	r3, [r7, #44]
 118:..//PHY/config_data.cpp **** 	int16_t addr=0;
 663              		.loc 1 118 0
 664 0032 4FF00003 		mov	r3, #0
 665 0036 7B86     		strh	r3, [r7, #50]	@ movhi
 119:..//PHY/config_data.cpp **** 	EepromStorage obj;
 120:..//PHY/config_data.cpp **** 	int size=sizeof(EepromStorage);
 666              		.loc 1 120 0
 667 0038 4FF00C03 		mov	r3, #12
 668 003c 7B63     		str	r3, [r7, #52]
 121:..//PHY/config_data.cpp **** 
 122:..//PHY/config_data.cpp **** 	uint8_t *ptr=(uint8_t *) (&obj);
 669              		.loc 1 122 0
 670 003e 07F10803 		add	r3, r7, #8
 671 0042 BB63     		str	r3, [r7, #56]
 123:..//PHY/config_data.cpp **** 	length=ceil((double)(size/buf_size));
 672              		.loc 1 123 0
 673 0044 40F20003 		movw	r3, #:lower16:__aeabi_i2f
 674 0048 C0F20003 		movt	r3, #:upper16:__aeabi_i2f
 675 004c 786B     		ldr	r0, [r7, #52]
 676 004e 9847     		blx	r3
 677 0050 0246     		mov	r2, r0
 678 0052 40F20003 		movw	r3, #:lower16:__aeabi_fdiv
 679 0056 C0F20003 		movt	r3, #:upper16:__aeabi_fdiv
 680 005a 1046     		mov	r0, r2
 681 005c B96A     		ldr	r1, [r7, #40]	@ float
 682 005e 9847     		blx	r3
 683 0060 0346     		mov	r3, r0
 684 0062 1A46     		mov	r2, r3
 685 0064 40F20003 		movw	r3, #:lower16:__aeabi_f2d
 686 0068 C0F20003 		movt	r3, #:upper16:__aeabi_f2d
 687 006c 1046     		mov	r0, r2
 688 006e 9847     		blx	r3
 689 0070 0246     		mov	r2, r0
 690 0072 0B46     		mov	r3, r1
 691 0074 1046     		mov	r0, r2
 692 0076 1946     		mov	r1, r3
 693 0078 40F20003 		movw	r3, #:lower16:ceil
 694 007c C0F20003 		movt	r3, #:upper16:ceil
 695 0080 9847     		blx	r3
 696 0082 40F20003 		movw	r3, #:lower16:__aeabi_d2iz
 697 0086 C0F20003 		movt	r3, #:upper16:__aeabi_d2iz
 698 008a 9847     		blx	r3
 699 008c 0346     		mov	r3, r0
 700 008e FB61     		str	r3, [r7, #28]
 124:..//PHY/config_data.cpp **** 	for(id=0;id<length;id++){
 701              		.loc 1 124 0
 702 0090 4FF00003 		mov	r3, #0
 703 0094 BB61     		str	r3, [r7, #24]
 704 0096 39E0     		b	.L29
 705              	.L32:
 125:..//PHY/config_data.cpp **** 		arr_idx=id*chunkSize;
 706              		.loc 1 125 0
 707 0098 BB69     		ldr	r3, [r7, #24]
 708 009a 7A6A     		ldr	r2, [r7, #36]
 709 009c 02FB03F3 		mul	r3, r2, r3
 710 00a0 3B62     		str	r3, [r7, #32]
 126:..//PHY/config_data.cpp **** 		csize = chunkSize;
 711              		.loc 1 126 0
 712 00a2 7B6A     		ldr	r3, [r7, #36]
 713 00a4 FB62     		str	r3, [r7, #44]
 127:..//PHY/config_data.cpp **** 		if (size - arr_idx < chunkSize){
 714              		.loc 1 127 0
 715 00a6 7A6B     		ldr	r2, [r7, #52]
 716 00a8 3B6A     		ldr	r3, [r7, #32]
 717 00aa C3EB0202 		rsb	r2, r3, r2
 718 00ae 7B6A     		ldr	r3, [r7, #36]
 719 00b0 9A42     		cmp	r2, r3
 720 00b2 04DA     		bge	.L30
 128:..//PHY/config_data.cpp **** 			csize = size - arr_idx;
 721              		.loc 1 128 0
 722 00b4 7A6B     		ldr	r2, [r7, #52]
 723 00b6 3B6A     		ldr	r3, [r7, #32]
 724 00b8 C3EB0203 		rsb	r3, r3, r2
 725 00bc FB62     		str	r3, [r7, #44]
 726              	.L30:
 129:..//PHY/config_data.cpp **** 		}
 130:..//PHY/config_data.cpp **** 		ret=i2cEEPROM_read8(addr,&ptr[arr_idx],csize);
 727              		.loc 1 130 0
 728 00be 3A6A     		ldr	r2, [r7, #32]
 729 00c0 BB6B     		ldr	r3, [r7, #56]
 730 00c2 1344     		add	r3, r2, r3
 731 00c4 B7F93220 		ldrsh	r2, [r7, #50]
 732 00c8 1046     		mov	r0, r2
 733 00ca 1946     		mov	r1, r3
 734 00cc FA6A     		ldr	r2, [r7, #44]
 735 00ce 40F20003 		movw	r3, #:lower16:i2cEEPROM_read8
 736 00d2 C0F20003 		movt	r3, #:upper16:i2cEEPROM_read8
 737 00d6 9847     		blx	r3
 738 00d8 0346     		mov	r3, r0
 739 00da DBB2     		uxtb	r3, r3
 740 00dc 5BB2     		sxtb	r3, r3
 741 00de 7B61     		str	r3, [r7, #20]
 131:..//PHY/config_data.cpp **** 		addr+=chunkSize;
 742              		.loc 1 131 0
 743 00e0 7B6A     		ldr	r3, [r7, #36]
 744 00e2 9AB2     		uxth	r2, r3
 745 00e4 7B8E     		ldrh	r3, [r7, #50]
 746 00e6 1344     		add	r3, r2, r3
 747 00e8 9BB2     		uxth	r3, r3
 748 00ea 7B86     		strh	r3, [r7, #50]	@ movhi
 132:..//PHY/config_data.cpp **** 		// addr++;
 133:..//PHY/config_data.cpp **** 		if(ret!=0){
 749              		.loc 1 133 0
 750 00ec 7B69     		ldr	r3, [r7, #20]
 751 00ee 002B     		cmp	r3, #0
 752 00f0 08D0     		beq	.L31
 134:..//PHY/config_data.cpp **** 			printf("READ ERROR\n");
 753              		.loc 1 134 0
 754 00f2 40F20000 		movw	r0, #:lower16:.LC1
 755 00f6 C0F20000 		movt	r0, #:upper16:.LC1
 756 00fa 40F20003 		movw	r3, #:lower16:puts
 757 00fe C0F20003 		movt	r3, #:upper16:puts
 758 0102 9847     		blx	r3
 759              	.L31:
 760              		.loc 1 124 0
 761 0104 BB69     		ldr	r3, [r7, #24]
 762 0106 03F10103 		add	r3, r3, #1
 763 010a BB61     		str	r3, [r7, #24]
 764              	.L29:
 765 010c BA69     		ldr	r2, [r7, #24]
 766 010e FB69     		ldr	r3, [r7, #28]
 767 0110 9A42     		cmp	r2, r3
 768 0112 ACBF     		ite	ge
 769 0114 0023     		movge	r3, #0
 770 0116 0123     		movlt	r3, #1
 771 0118 DBB2     		uxtb	r3, r3
 772 011a 002B     		cmp	r3, #0
 773 011c BCD1     		bne	.L32
 135:..//PHY/config_data.cpp **** 		}		
 136:..//PHY/config_data.cpp **** 	}
 137:..//PHY/config_data.cpp **** 	I2CDeinit();
 774              		.loc 1 137 0
 775 011e 40F20003 		movw	r3, #:lower16:I2CDeinit
 776 0122 C0F20003 		movt	r3, #:upper16:I2CDeinit
 777 0126 9847     		blx	r3
 138:..//PHY/config_data.cpp **** 	EepromStorage *es= &obj;
 778              		.loc 1 138 0
 779 0128 07F10803 		add	r3, r7, #8
 780 012c FB63     		str	r3, [r7, #60]
 139:..//PHY/config_data.cpp **** 	major=es->fw_major_version;
 781              		.loc 1 139 0
 782 012e FB6B     		ldr	r3, [r7, #60]
 783 0130 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 784 0132 7B68     		ldr	r3, [r7, #4]
 785 0134 1A70     		strb	r2, [r3, #0]
 140:..//PHY/config_data.cpp **** 	minor=es->fw_minor_version;
 786              		.loc 1 140 0
 787 0136 FB6B     		ldr	r3, [r7, #60]
 788 0138 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 789 013a 3B68     		ldr	r3, [r7, #0]
 790 013c 1A70     		strb	r2, [r3, #0]
 141:..//PHY/config_data.cpp **** 	if(CURRENT_CONFIG_MAJOR_VERSION!=major)
 791              		.loc 1 141 0
 792 013e 7B68     		ldr	r3, [r7, #4]
 793 0140 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 794 0142 012B     		cmp	r3, #1
 795 0144 02D0     		beq	.L33
 142:..//PHY/config_data.cpp **** 		return 1;
 796              		.loc 1 142 0
 797 0146 4FF00103 		mov	r3, #1
 798 014a 08E0     		b	.L34
 799              	.L33:
 143:..//PHY/config_data.cpp **** 	if(CURRENT_CONFIG_MINOR_VERSION!=minor)
 800              		.loc 1 143 0
 801 014c 3B68     		ldr	r3, [r7, #0]
 802 014e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 803 0150 002B     		cmp	r3, #0
 804 0152 02D0     		beq	.L35
 144:..//PHY/config_data.cpp **** 		return 2;	
 805              		.loc 1 144 0
 806 0154 4FF00203 		mov	r3, #2
 807 0158 01E0     		b	.L34
 808              	.L35:
 145:..//PHY/config_data.cpp **** 	return 0;
 809              		.loc 1 145 0
 810 015a 4FF00003 		mov	r3, #0
 811              	.L34:
 812              	.LBE5:
 146:..//PHY/config_data.cpp **** }
 813              		.loc 1 146 0
 814 015e 1846     		mov	r0, r3
 815 0160 07F14007 		add	r7, r7, #64
 816 0164 BD46     		mov	sp, r7
 817 0166 80BD     		pop	{r7, pc}
 818              	.L38:
 819              		.align	2
 820              	.L37:
 821 0168 00008041 		.word	1098907648
 822              		.cfi_endproc
 823              	.LFE32:
 825              		.section	.rodata
 826 0017 00       		.align	2
 827              	.LC2:
 828 0018 52656164 		.ascii	"Reading config data%d\012\000"
 828      696E6720 
 828      636F6E66 
 828      69672064 
 828      61746125 
 829              		.section	.text._Z16read_config_datav,"ax",%progbits
 830              		.align	2
 831              		.global	_Z16read_config_datav
 832              		.thumb
 833              		.thumb_func
 835              	_Z16read_config_datav:
 836              	.LFB33:
 147:..//PHY/config_data.cpp **** 
 148:..//PHY/config_data.cpp **** int read_config_data(void){
 837              		.loc 1 148 0
 838              		.cfi_startproc
 839              		@ args = 0, pretend = 0, frame = 24
 840              		@ frame_needed = 1, uses_anonymous_args = 0
 841 0000 80B5     		push	{r7, lr}
 842              	.LCFI12:
 843              		.cfi_def_cfa_offset 8
 844 0002 86B0     		sub	sp, sp, #24
 845              	.LCFI13:
 846              		.cfi_def_cfa_offset 32
 847 0004 00AF     		add	r7, sp, #0
 848              		.cfi_offset 14, -4
 849              		.cfi_offset 7, -8
 850              	.LCFI14:
 851              		.cfi_def_cfa_register 7
 852              	.LBB6:
 149:..//PHY/config_data.cpp **** 	EepromStorage eeps;
 150:..//PHY/config_data.cpp **** 	EepromStorage1 eeps1;
 151:..//PHY/config_data.cpp **** 	EepromStorage2 eeps2;
 152:..//PHY/config_data.cpp **** 	EepromStorage3 eeps3;
 153:..//PHY/config_data.cpp **** 	printf("Reading config data%d\n",sizeof(eeps));
 853              		.loc 1 153 0
 854 0006 40F20000 		movw	r0, #:lower16:.LC2
 855 000a C0F20000 		movt	r0, #:upper16:.LC2
 856 000e 4FF00C01 		mov	r1, #12
 857 0012 40F20003 		movw	r3, #:lower16:printf
 858 0016 C0F20003 		movt	r3, #:upper16:printf
 859 001a 9847     		blx	r3
 154:..//PHY/config_data.cpp **** 	read_objects_eeprom(0,&eeps,sizeof(eeps));
 860              		.loc 1 154 0
 861 001c 07F10C03 		add	r3, r7, #12
 862 0020 4FF00000 		mov	r0, #0
 863 0024 1946     		mov	r1, r3
 864 0026 4FF00C02 		mov	r2, #12
 865 002a 40F20003 		movw	r3, #:lower16:_Z19read_objects_eepromsPvi
 866 002e C0F20003 		movt	r3, #:upper16:_Z19read_objects_eepromsPvi
 867 0032 9847     		blx	r3
 155:..//PHY/config_data.cpp **** 	
 156:..//PHY/config_data.cpp **** 	fw_major_version=eepromStorage.fw_major_version;
 868              		.loc 1 156 0
 869 0034 40F20003 		movw	r3, #:lower16:eepromStorage
 870 0038 C0F20003 		movt	r3, #:upper16:eepromStorage
 871 003c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 872 003e 40F20003 		movw	r3, #:lower16:fw_major_version
 873 0042 C0F20003 		movt	r3, #:upper16:fw_major_version
 874 0046 1A70     		strb	r2, [r3, #0]
 157:..//PHY/config_data.cpp **** 	fw_minor_version=eepromStorage.fw_minor_version;
 875              		.loc 1 157 0
 876 0048 40F20003 		movw	r3, #:lower16:eepromStorage
 877 004c C0F20003 		movt	r3, #:upper16:eepromStorage
 878 0050 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 879 0052 40F20003 		movw	r3, #:lower16:fw_minor_version
 880 0056 C0F20003 		movt	r3, #:upper16:fw_minor_version
 881 005a 1A70     		strb	r2, [r3, #0]
 158:..//PHY/config_data.cpp **** 	
 159:..//PHY/config_data.cpp **** 
 160:..//PHY/config_data.cpp **** 
 161:..//PHY/config_data.cpp **** 	// copy config_daa into their respective sructs...
 162:..//PHY/config_data.cpp **** 	
 163:..//PHY/config_data.cpp **** /**#########################################################################################*/	
 164:..//PHY/config_data.cpp **** 	// copy config_daa into their respective sructs...			
 165:..//PHY/config_data.cpp **** 
 166:..//PHY/config_data.cpp **** /**#########################################################################################*/
 167:..//PHY/config_data.cpp **** 	
 168:..//PHY/config_data.cpp **** 	// final_motor_ppr_per_pt_mm		= eeps.c_final_motor_ppr_per_pt_mm;
 169:..//PHY/config_data.cpp **** 	// motor_ppr_num					= eeps.c_motor_ppr_num;
 170:..//PHY/config_data.cpp **** 
 171:..//PHY/config_data.cpp **** 	return 1;
 882              		.loc 1 171 0
 883 005c 4FF00103 		mov	r3, #1
 884              	.LBE6:
 172:..//PHY/config_data.cpp **** }
 885              		.loc 1 172 0
 886 0060 1846     		mov	r0, r3
 887 0062 07F11807 		add	r7, r7, #24
 888 0066 BD46     		mov	sp, r7
 889 0068 80BD     		pop	{r7, pc}
 890              		.cfi_endproc
 891              	.LFE33:
 893 006a 00BF     		.section	.text._Z17write_config_datav,"ax",%progbits
 894              		.align	2
 895              		.global	_Z17write_config_datav
 896              		.thumb
 897              		.thumb_func
 899              	_Z17write_config_datav:
 900              	.LFB34:
 173:..//PHY/config_data.cpp **** 
 174:..//PHY/config_data.cpp **** int write_config_data(void){
 901              		.loc 1 174 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 1, uses_anonymous_args = 0
 905 0000 80B5     		push	{r7, lr}
 906              	.LCFI15:
 907              		.cfi_def_cfa_offset 8
 908 0002 00AF     		add	r7, sp, #0
 909              		.cfi_offset 14, -4
 910              		.cfi_offset 7, -8
 911              	.LCFI16:
 912              		.cfi_def_cfa_register 7
 175:..//PHY/config_data.cpp **** 	
 176:..//PHY/config_data.cpp **** 	// copy all data to the config_data struct ..	
 177:..//PHY/config_data.cpp **** 	eepromStorage.fw_major_version = CURRENT_CONFIG_MAJOR_VERSION;
 913              		.loc 1 177 0
 914 0004 40F20003 		movw	r3, #:lower16:eepromStorage
 915 0008 C0F20003 		movt	r3, #:upper16:eepromStorage
 916 000c 4FF00102 		mov	r2, #1
 917 0010 1A70     		strb	r2, [r3, #0]
 178:..//PHY/config_data.cpp **** 	eepromStorage.fw_minor_version = CURRENT_CONFIG_MINOR_VERSION;
 918              		.loc 1 178 0
 919 0012 40F20003 		movw	r3, #:lower16:eepromStorage
 920 0016 C0F20003 		movt	r3, #:upper16:eepromStorage
 921 001a 4FF00002 		mov	r2, #0
 922 001e 5A70     		strb	r2, [r3, #1]
 179:..//PHY/config_data.cpp **** 
 180:..//PHY/config_data.cpp **** 
 181:..//PHY/config_data.cpp **** 	// printf("\n my write=%d",eepromStorage.c_MYIP_1);
 182:..//PHY/config_data.cpp **** 	// eepromStorage.c_motor_ppr_num					= motor_ppr_num;
 183:..//PHY/config_data.cpp **** 
 184:..//PHY/config_data.cpp **** /**#########################################################################################*/	
 185:..//PHY/config_data.cpp **** 	
 186:..//PHY/config_data.cpp **** /**#########################################################################################*/	
 187:..//PHY/config_data.cpp **** 	
 188:..//PHY/config_data.cpp **** 
 189:..//PHY/config_data.cpp **** 	// write config_data to flash
 190:..//PHY/config_data.cpp **** 	write_objects_eeprom(0,&eepromStorage,sizeof(eepromStorage));
 923              		.loc 1 190 0
 924 0020 4FF00000 		mov	r0, #0
 925 0024 40F20001 		movw	r1, #:lower16:eepromStorage
 926 0028 C0F20001 		movt	r1, #:upper16:eepromStorage
 927 002c 4FF00C02 		mov	r2, #12
 928 0030 40F20003 		movw	r3, #:lower16:_Z20write_objects_eepromsPvi
 929 0034 C0F20003 		movt	r3, #:upper16:_Z20write_objects_eepromsPvi
 930 0038 9847     		blx	r3
 191:..//PHY/config_data.cpp **** 	// write_objects_eeprom(0,&eepromStorage,1);
 192:..//PHY/config_data.cpp **** 	// printf("Writing config data%d\n",sizeof(eepromStorage));
 193:..//PHY/config_data.cpp **** 	return 1;
 931              		.loc 1 193 0
 932 003a 4FF00103 		mov	r3, #1
 194:..//PHY/config_data.cpp **** }
 933              		.loc 1 194 0
 934 003e 1846     		mov	r0, r3
 935 0040 80BD     		pop	{r7, pc}
 936              		.cfi_endproc
 937              	.LFE34:
 939 0042 00BF     		.section	.text._Z25write_config_data_table_1v,"ax",%progbits
 940              		.align	2
 941              		.global	_Z25write_config_data_table_1v
 942              		.thumb
 943              		.thumb_func
 945              	_Z25write_config_data_table_1v:
 946              	.LFB35:
 195:..//PHY/config_data.cpp **** 
 196:..//PHY/config_data.cpp **** int write_config_data_table_1(void){
 947              		.loc 1 196 0
 948              		.cfi_startproc
 949              		@ args = 0, pretend = 0, frame = 0
 950              		@ frame_needed = 1, uses_anonymous_args = 0
 951              		@ link register save eliminated.
 952 0000 80B4     		push	{r7}
 953              	.LCFI17:
 954              		.cfi_def_cfa_offset 4
 955 0002 00AF     		add	r7, sp, #0
 956              		.cfi_offset 7, -4
 957              	.LCFI18:
 958              		.cfi_def_cfa_register 7
 197:..//PHY/config_data.cpp **** 
 198:..//PHY/config_data.cpp **** 	// for(int i=0; i<15;i++){
 199:..//PHY/config_data.cpp **** 	// 	eepromStorage1.c_value_table[i]		= value_table[i];
 200:..//PHY/config_data.cpp **** 	// }
 201:..//PHY/config_data.cpp **** 	// // printf("\n write=value_table[0].pre_val=%f",value_table[0].pre_val);
 202:..//PHY/config_data.cpp **** 	// write_objects_eeprom(256,&eepromStorage1,sizeof(eepromStorage1));
 203:..//PHY/config_data.cpp **** 
 204:..//PHY/config_data.cpp **** 	return 1;
 959              		.loc 1 204 0
 960 0004 4FF00103 		mov	r3, #1
 205:..//PHY/config_data.cpp **** }
 961              		.loc 1 205 0
 962 0008 1846     		mov	r0, r3
 963 000a BD46     		mov	sp, r7
 964 000c 80BC     		pop	{r7}
 965 000e 7047     		bx	lr
 966              		.cfi_endproc
 967              	.LFE35:
 969              		.section	.text._Z25write_config_data_table_2v,"ax",%progbits
 970              		.align	2
 971              		.global	_Z25write_config_data_table_2v
 972              		.thumb
 973              		.thumb_func
 975              	_Z25write_config_data_table_2v:
 976              	.LFB36:
 206:..//PHY/config_data.cpp **** 
 207:..//PHY/config_data.cpp **** 
 208:..//PHY/config_data.cpp **** int write_config_data_table_2(void){
 977              		.loc 1 208 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 1, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 982 0000 80B4     		push	{r7}
 983              	.LCFI19:
 984              		.cfi_def_cfa_offset 4
 985 0002 00AF     		add	r7, sp, #0
 986              		.cfi_offset 7, -4
 987              	.LCFI20:
 988              		.cfi_def_cfa_register 7
 209:..//PHY/config_data.cpp **** 
 210:..//PHY/config_data.cpp **** 	// for(int i=0; i<15;i++){
 211:..//PHY/config_data.cpp **** 	// 	eepromStorage2.c_value_table2[i]	= value_table[i+15];
 212:..//PHY/config_data.cpp **** 	// }
 213:..//PHY/config_data.cpp **** 	// write_objects_eeprom(512,&eepromStorage2,sizeof(eepromStorage2));
 214:..//PHY/config_data.cpp **** 
 215:..//PHY/config_data.cpp **** 	return 1;
 989              		.loc 1 215 0
 990 0004 4FF00103 		mov	r3, #1
 216:..//PHY/config_data.cpp **** }
 991              		.loc 1 216 0
 992 0008 1846     		mov	r0, r3
 993 000a BD46     		mov	sp, r7
 994 000c 80BC     		pop	{r7}
 995 000e 7047     		bx	lr
 996              		.cfi_endproc
 997              	.LFE36:
 999              		.section	.text._Z25write_config_data_table_3v,"ax",%progbits
 1000              		.align	2
 1001              		.global	_Z25write_config_data_table_3v
 1002              		.thumb
 1003              		.thumb_func
 1005              	_Z25write_config_data_table_3v:
 1006              	.LFB37:
 217:..//PHY/config_data.cpp **** 
 218:..//PHY/config_data.cpp **** 
 219:..//PHY/config_data.cpp **** int write_config_data_table_3(void){
 1007              		.loc 1 219 0
 1008              		.cfi_startproc
 1009              		@ args = 0, pretend = 0, frame = 0
 1010              		@ frame_needed = 1, uses_anonymous_args = 0
 1011              		@ link register save eliminated.
 1012 0000 80B4     		push	{r7}
 1013              	.LCFI21:
 1014              		.cfi_def_cfa_offset 4
 1015 0002 00AF     		add	r7, sp, #0
 1016              		.cfi_offset 7, -4
 1017              	.LCFI22:
 1018              		.cfi_def_cfa_register 7
 220:..//PHY/config_data.cpp **** 
 221:..//PHY/config_data.cpp **** 	// for(int i=0; i<15;i++){
 222:..//PHY/config_data.cpp **** 	// 	eepromStorage3.c_value_table3[i]	= value_table[i+30];
 223:..//PHY/config_data.cpp **** 	// }
 224:..//PHY/config_data.cpp **** 	// write_objects_eeprom(768,&eepromStorage3,sizeof(eepromStorage3));
 225:..//PHY/config_data.cpp **** 
 226:..//PHY/config_data.cpp **** 	return 1;
 1019              		.loc 1 226 0
 1020 0004 4FF00103 		mov	r3, #1
 227:..//PHY/config_data.cpp **** }
 1021              		.loc 1 227 0
 1022 0008 1846     		mov	r0, r3
 1023 000a BD46     		mov	sp, r7
 1024 000c 80BC     		pop	{r7}
 1025 000e 7047     		bx	lr
 1026              		.cfi_endproc
 1027              	.LFE37:
 1029              		.section	.rodata
 1030 002f 00       		.align	2
 1031              	.LC3:
 1032 0030 53657474 		.ascii	"Setting defaults %d\012\000"
 1032      696E6720 
 1032      64656661 
 1032      756C7473 
 1032      2025640A 
 1033 0045 000000   		.section	.text._Z19config_set_defaultshh,"ax",%progbits
 1034              		.align	2
 1035              		.global	_Z19config_set_defaultshh
 1036              		.thumb
 1037              		.thumb_func
 1039              	_Z19config_set_defaultshh:
 1040              	.LFB38:
 228:..//PHY/config_data.cpp **** 
 229:..//PHY/config_data.cpp **** 
 230:..//PHY/config_data.cpp **** int config_set_defaults(uint8_t, uint8_t){
 1041              		.loc 1 230 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 8
 1044              		@ frame_needed = 1, uses_anonymous_args = 0
 1045 0000 80B5     		push	{r7, lr}
 1046              	.LCFI23:
 1047              		.cfi_def_cfa_offset 8
 1048 0002 82B0     		sub	sp, sp, #8
 1049              	.LCFI24:
 1050              		.cfi_def_cfa_offset 16
 1051 0004 00AF     		add	r7, sp, #0
 1052              		.cfi_offset 14, -4
 1053              		.cfi_offset 7, -8
 1054              	.LCFI25:
 1055              		.cfi_def_cfa_register 7
 1056 0006 0246     		mov	r2, r0
 1057 0008 0B46     		mov	r3, r1
 1058 000a FA71     		strb	r2, [r7, #7]
 1059 000c BB71     		strb	r3, [r7, #6]
 231:..//PHY/config_data.cpp **** 	printf("Setting defaults %d\n",TRUE);
 1060              		.loc 1 231 0
 1061 000e 40F20000 		movw	r0, #:lower16:.LC3
 1062 0012 C0F20000 		movt	r0, #:upper16:.LC3
 1063 0016 4FF00101 		mov	r1, #1
 1064 001a 40F20003 		movw	r3, #:lower16:printf
 1065 001e C0F20003 		movt	r3, #:upper16:printf
 1066 0022 9847     		blx	r3
 232:..//PHY/config_data.cpp **** 	fw_major_version = CURRENT_CONFIG_MAJOR_VERSION;
 1067              		.loc 1 232 0
 1068 0024 40F20003 		movw	r3, #:lower16:fw_major_version
 1069 0028 C0F20003 		movt	r3, #:upper16:fw_major_version
 1070 002c 4FF00102 		mov	r2, #1
 1071 0030 1A70     		strb	r2, [r3, #0]
 233:..//PHY/config_data.cpp **** 	fw_minor_version = CURRENT_CONFIG_MINOR_VERSION;
 1072              		.loc 1 233 0
 1073 0032 40F20003 		movw	r3, #:lower16:fw_minor_version
 1074 0036 C0F20003 		movt	r3, #:upper16:fw_minor_version
 1075 003a 4FF00002 		mov	r2, #0
 1076 003e 1A70     		strb	r2, [r3, #0]
 234:..//PHY/config_data.cpp **** 	write_config_data();
 1077              		.loc 1 234 0
 1078 0040 40F20003 		movw	r3, #:lower16:_Z17write_config_datav
 1079 0044 C0F20003 		movt	r3, #:upper16:_Z17write_config_datav
 1080 0048 9847     		blx	r3
 235:..//PHY/config_data.cpp **** 	return 1;
 1081              		.loc 1 235 0
 1082 004a 4FF00103 		mov	r3, #1
 236:..//PHY/config_data.cpp **** }
 1083              		.loc 1 236 0
 1084 004e 1846     		mov	r0, r3
 1085 0050 07F10807 		add	r7, r7, #8
 1086 0054 BD46     		mov	sp, r7
 1087 0056 80BD     		pop	{r7, pc}
 1088              		.cfi_endproc
 1089              	.LFE38:
 1091              		.section	.text._Z24write_Sequence_to_EEPROMPcii,"ax",%progbits
 1092              		.align	2
 1093              		.global	_Z24write_Sequence_to_EEPROMPcii
 1094              		.thumb
 1095              		.thumb_func
 1097              	_Z24write_Sequence_to_EEPROMPcii:
 1098              	.LFB39:
 237:..//PHY/config_data.cpp **** 
 238:..//PHY/config_data.cpp **** int write_Sequence_to_EEPROM(char *p, int size, int seq_num){
 1099              		.loc 1 238 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 128
 1102              		@ frame_needed = 1, uses_anonymous_args = 0
 1103 0000 80B5     		push	{r7, lr}
 1104              	.LCFI26:
 1105              		.cfi_def_cfa_offset 8
 1106 0002 A0B0     		sub	sp, sp, #128
 1107              	.LCFI27:
 1108              		.cfi_def_cfa_offset 136
 1109 0004 00AF     		add	r7, sp, #0
 1110              		.cfi_offset 14, -4
 1111              		.cfi_offset 7, -8
 1112              	.LCFI28:
 1113              		.cfi_def_cfa_register 7
 1114 0006 F860     		str	r0, [r7, #12]
 1115 0008 B960     		str	r1, [r7, #8]
 1116 000a 7A60     		str	r2, [r7, #4]
 1117              	.LBB7:
 239:..//PHY/config_data.cpp **** 	// seqnum is the num of the sequence to write to...
 240:..//PHY/config_data.cpp **** 	//Start breaking the data into 32byte chunks
 241:..//PHY/config_data.cpp **** 	// unsigned int i = 0;
 242:..//PHY/config_data.cpp **** 	int id = 0;
 1118              		.loc 1 242 0
 1119 000c 4FF00003 		mov	r3, #0
 1120 0010 FB65     		str	r3, [r7, #92]
 243:..//PHY/config_data.cpp **** 	int chunkSize = 32;
 1121              		.loc 1 243 0
 1122 0012 4FF02003 		mov	r3, #32
 1123 0016 3B66     		str	r3, [r7, #96]
 244:..//PHY/config_data.cpp **** 	int arr_idx = 0;
 1124              		.loc 1 244 0
 1125 0018 4FF00003 		mov	r3, #0
 1126 001c 7B66     		str	r3, [r7, #100]
 245:..//PHY/config_data.cpp **** 	int retval = 0;
 1127              		.loc 1 245 0
 1128 001e 4FF00003 		mov	r3, #0
 1129 0022 BB66     		str	r3, [r7, #104]
 246:..//PHY/config_data.cpp **** 	char temp_str[33] = {0};
 1130              		.loc 1 246 0
 1131 0024 07F13803 		add	r3, r7, #56
 1132 0028 4FF00002 		mov	r2, #0
 1133 002c 1A60     		str	r2, [r3, #0]
 1134 002e 03F10403 		add	r3, r3, #4
 1135 0032 4FF00002 		mov	r2, #0
 1136 0036 1A60     		str	r2, [r3, #0]
 1137 0038 03F10403 		add	r3, r3, #4
 1138 003c 4FF00002 		mov	r2, #0
 1139 0040 1A60     		str	r2, [r3, #0]
 1140 0042 03F10403 		add	r3, r3, #4
 1141 0046 4FF00002 		mov	r2, #0
 1142 004a 1A60     		str	r2, [r3, #0]
 1143 004c 03F10403 		add	r3, r3, #4
 1144 0050 4FF00002 		mov	r2, #0
 1145 0054 1A60     		str	r2, [r3, #0]
 1146 0056 03F10403 		add	r3, r3, #4
 1147 005a 4FF00002 		mov	r2, #0
 1148 005e 1A60     		str	r2, [r3, #0]
 1149 0060 03F10403 		add	r3, r3, #4
 1150 0064 4FF00002 		mov	r2, #0
 1151 0068 1A60     		str	r2, [r3, #0]
 1152 006a 03F10403 		add	r3, r3, #4
 1153 006e 4FF00002 		mov	r2, #0
 1154 0072 1A60     		str	r2, [r3, #0]
 1155 0074 03F10403 		add	r3, r3, #4
 1156 0078 4FF00002 		mov	r2, #0
 1157 007c 1A70     		strb	r2, [r3, #0]
 1158 007e 03F10103 		add	r3, r3, #1
 247:..//PHY/config_data.cpp **** 	char read_str[33] = {0};
 1159              		.loc 1 247 0
 1160 0082 07F11403 		add	r3, r7, #20
 1161 0086 4FF00002 		mov	r2, #0
 1162 008a 1A60     		str	r2, [r3, #0]
 1163 008c 03F10403 		add	r3, r3, #4
 1164 0090 4FF00002 		mov	r2, #0
 1165 0094 1A60     		str	r2, [r3, #0]
 1166 0096 03F10403 		add	r3, r3, #4
 1167 009a 4FF00002 		mov	r2, #0
 1168 009e 1A60     		str	r2, [r3, #0]
 1169 00a0 03F10403 		add	r3, r3, #4
 1170 00a4 4FF00002 		mov	r2, #0
 1171 00a8 1A60     		str	r2, [r3, #0]
 1172 00aa 03F10403 		add	r3, r3, #4
 1173 00ae 4FF00002 		mov	r2, #0
 1174 00b2 1A60     		str	r2, [r3, #0]
 1175 00b4 03F10403 		add	r3, r3, #4
 1176 00b8 4FF00002 		mov	r2, #0
 1177 00bc 1A60     		str	r2, [r3, #0]
 1178 00be 03F10403 		add	r3, r3, #4
 1179 00c2 4FF00002 		mov	r2, #0
 1180 00c6 1A60     		str	r2, [r3, #0]
 1181 00c8 03F10403 		add	r3, r3, #4
 1182 00cc 4FF00002 		mov	r2, #0
 1183 00d0 1A60     		str	r2, [r3, #0]
 1184 00d2 03F10403 		add	r3, r3, #4
 1185 00d6 4FF00002 		mov	r2, #0
 1186 00da 1A70     		strb	r2, [r3, #0]
 1187 00dc 03F10103 		add	r3, r3, #1
 248:..//PHY/config_data.cpp **** 	
 249:..//PHY/config_data.cpp **** 	unsigned char chunk_size = 32;
 1188              		.loc 1 249 0
 1189 00e0 4FF02003 		mov	r3, #32
 1190 00e4 87F86F30 		strb	r3, [r7, #111]
 250:..//PHY/config_data.cpp **** 	unsigned int seq_eeprom_start_offset = 0;
 1191              		.loc 1 250 0
 1192 00e8 4FF00003 		mov	r3, #0
 1193 00ec 3B67     		str	r3, [r7, #112]
 251:..//PHY/config_data.cpp **** 	unsigned int seq_size = 512;
 1194              		.loc 1 251 0
 1195 00ee 4FF40073 		mov	r3, #512
 1196 00f2 7B67     		str	r3, [r7, #116]
 252:..//PHY/config_data.cpp **** 	unsigned int seq_addr = seq_num*seq_size + seq_eeprom_start_offset;
 1197              		.loc 1 252 0
 1198 00f4 7B68     		ldr	r3, [r7, #4]
 1199 00f6 7A6F     		ldr	r2, [r7, #116]
 1200 00f8 02FB03F2 		mul	r2, r2, r3
 1201 00fc 3B6F     		ldr	r3, [r7, #112]
 1202 00fe 1344     		add	r3, r2, r3
 1203 0100 BB67     		str	r3, [r7, #120]
 253:..//PHY/config_data.cpp **** 	// printf("SeqAddr: %d\n",seq_addr);
 254:..//PHY/config_data.cpp **** 	
 255:..//PHY/config_data.cpp **** 	unsigned int write_addr = seq_addr;
 1204              		.loc 1 255 0
 1205 0102 BB6F     		ldr	r3, [r7, #120]
 1206 0104 FB67     		str	r3, [r7, #124]
 256:..//PHY/config_data.cpp **** 	
 257:..//PHY/config_data.cpp **** 	// memset(recvd,'0',sizeof(p));
 258:..//PHY/config_data.cpp **** 	// sprintf(I2C_recvd,"%s",s);
 259:..//PHY/config_data.cpp **** 	
 260:..//PHY/config_data.cpp **** 	for (id = 0;id < 16;id++){
 1207              		.loc 1 260 0
 1208 0106 4FF00003 		mov	r3, #0
 1209 010a FB65     		str	r3, [r7, #92]
 1210 010c 4AE0     		b	.L52
 1211              	.L55:
 261:..//PHY/config_data.cpp **** 		arr_idx = id *chunkSize;
 1212              		.loc 1 261 0
 1213 010e FB6D     		ldr	r3, [r7, #92]
 1214 0110 3A6E     		ldr	r2, [r7, #96]
 1215 0112 02FB03F3 		mul	r3, r2, r3
 1216 0116 7B66     		str	r3, [r7, #100]
 262:..//PHY/config_data.cpp **** 		memcpy(temp_str,&p[arr_idx],chunk_size);
 1217              		.loc 1 262 0
 1218 0118 7A6E     		ldr	r2, [r7, #100]
 1219 011a FB68     		ldr	r3, [r7, #12]
 1220 011c 1A44     		add	r2, r2, r3
 1221 011e 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 1222 0122 07F13801 		add	r1, r7, #56
 1223 0126 0846     		mov	r0, r1
 1224 0128 1146     		mov	r1, r2
 1225 012a 1A46     		mov	r2, r3
 1226 012c 40F20003 		movw	r3, #:lower16:memcpy
 1227 0130 C0F20003 		movt	r3, #:upper16:memcpy
 1228 0134 9847     		blx	r3
 263:..//PHY/config_data.cpp **** 		temp_str[chunk_size] = '\0';
 1229              		.loc 1 263 0
 1230 0136 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 1231 013a 07F18002 		add	r2, r7, #128
 1232 013e 1344     		add	r3, r2, r3
 1233 0140 4FF00002 		mov	r2, #0
 1234 0144 03F8482C 		strb	r2, [r3, #-72]
 264:..//PHY/config_data.cpp **** 		// printf("Wr%d:%s\n",id,temp_str);
 265:..//PHY/config_data.cpp **** 		write_addr = seq_addr + arr_idx;
 1235              		.loc 1 265 0
 1236 0148 7B6E     		ldr	r3, [r7, #100]
 1237 014a BA6F     		ldr	r2, [r7, #120]
 1238 014c 1344     		add	r3, r2, r3
 1239 014e FB67     		str	r3, [r7, #124]
 266:..//PHY/config_data.cpp **** 		retval = i2cEEPROM_write32(write_addr,temp_str);
 1240              		.loc 1 266 0
 1241 0150 FB6F     		ldr	r3, [r7, #124]
 1242 0152 9BB2     		uxth	r3, r3
 1243 0154 1AB2     		sxth	r2, r3
 1244 0156 07F13803 		add	r3, r7, #56
 1245 015a 1046     		mov	r0, r2
 1246 015c 1946     		mov	r1, r3
 1247 015e 40F20003 		movw	r3, #:lower16:i2cEEPROM_write32
 1248 0162 C0F20003 		movt	r3, #:upper16:i2cEEPROM_write32
 1249 0166 9847     		blx	r3
 1250 0168 0346     		mov	r3, r0
 1251 016a BB66     		str	r3, [r7, #104]
 267:..//PHY/config_data.cpp **** 		if (retval !=0){			
 1252              		.loc 1 267 0
 1253 016c BB6E     		ldr	r3, [r7, #104]
 1254 016e 002B     		cmp	r3, #0
 1255 0170 21D1     		bne	.L57
 1256              	.L53:
 268:..//PHY/config_data.cpp **** 			// printf("Wrong: %d\n",id);
 269:..//PHY/config_data.cpp **** 			break;
 270:..//PHY/config_data.cpp **** 		}
 271:..//PHY/config_data.cpp **** 		//read it back...
 272:..//PHY/config_data.cpp **** 		// my_delay(50);
 273:..//PHY/config_data.cpp **** 		i2cEEPROM_read32(write_addr,read_str,chunk_size);
 1257              		.loc 1 273 0
 1258 0172 07F11402 		add	r2, r7, #20
 1259 0176 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 1260 017a F86F     		ldr	r0, [r7, #124]
 1261 017c 1146     		mov	r1, r2
 1262 017e 1A46     		mov	r2, r3
 1263 0180 40F20003 		movw	r3, #:lower16:i2cEEPROM_read32
 1264 0184 C0F20003 		movt	r3, #:upper16:i2cEEPROM_read32
 1265 0188 9847     		blx	r3
 274:..//PHY/config_data.cpp **** 		read_str[chunk_size] = '\0';
 1266              		.loc 1 274 0
 1267 018a 97F86F30 		ldrb	r3, [r7, #111]	@ zero_extendqisi2
 1268 018e 07F18002 		add	r2, r7, #128
 1269 0192 1344     		add	r3, r2, r3
 1270 0194 4FF00002 		mov	r2, #0
 1271 0198 03F86C2C 		strb	r2, [r3, #-108]
 1272              		.loc 1 260 0
 1273 019c FB6D     		ldr	r3, [r7, #92]
 1274 019e 03F10103 		add	r3, r3, #1
 1275 01a2 FB65     		str	r3, [r7, #92]
 1276              	.L52:
 1277 01a4 FB6D     		ldr	r3, [r7, #92]
 1278 01a6 0F2B     		cmp	r3, #15
 1279 01a8 CCBF     		ite	gt
 1280 01aa 0023     		movgt	r3, #0
 1281 01ac 0123     		movle	r3, #1
 1282 01ae DBB2     		uxtb	r3, r3
 1283 01b0 002B     		cmp	r3, #0
 1284 01b2 ACD1     		bne	.L55
 1285 01b4 00E0     		b	.L54
 1286              	.L57:
 1287              		.loc 1 269 0
 1288 01b6 00BF     		nop
 1289              	.L54:
 275:..//PHY/config_data.cpp **** 		// printf("Rd%d:%s\n",id,read_str);
 276:..//PHY/config_data.cpp **** 	}	
 277:..//PHY/config_data.cpp **** 	I2CDeinit();
 1290              		.loc 1 277 0
 1291 01b8 40F20003 		movw	r3, #:lower16:I2CDeinit
 1292 01bc C0F20003 		movt	r3, #:upper16:I2CDeinit
 1293 01c0 9847     		blx	r3
 278:..//PHY/config_data.cpp **** 	// my_delay(10);
 279:..//PHY/config_data.cpp **** 	return retval;
 1294              		.loc 1 279 0
 1295 01c2 BB6E     		ldr	r3, [r7, #104]
 1296              	.LBE7:
 280:..//PHY/config_data.cpp **** }
 1297              		.loc 1 280 0
 1298 01c4 1846     		mov	r0, r3
 1299 01c6 07F18007 		add	r7, r7, #128
 1300 01ca BD46     		mov	sp, r7
 1301 01cc 80BD     		pop	{r7, pc}
 1302              		.cfi_endproc
 1303              	.LFE39:
 1305 01ce 00BF     		.section	.text._Z25read_Sequence_from_EEPROMPcii,"ax",%progbits
 1306              		.align	2
 1307              		.global	_Z25read_Sequence_from_EEPROMPcii
 1308              		.thumb
 1309              		.thumb_func
 1311              	_Z25read_Sequence_from_EEPROMPcii:
 1312              	.LFB40:
 281:..//PHY/config_data.cpp **** 
 282:..//PHY/config_data.cpp **** int read_Sequence_from_EEPROM(char *p, int size, int seq_num){
 1313              		.loc 1 282 0
 1314              		.cfi_startproc
 1315              		@ args = 0, pretend = 0, frame = 88
 1316              		@ frame_needed = 1, uses_anonymous_args = 0
 1317 0000 80B5     		push	{r7, lr}
 1318              	.LCFI29:
 1319              		.cfi_def_cfa_offset 8
 1320 0002 96B0     		sub	sp, sp, #88
 1321              	.LCFI30:
 1322              		.cfi_def_cfa_offset 96
 1323 0004 00AF     		add	r7, sp, #0
 1324              		.cfi_offset 14, -4
 1325              		.cfi_offset 7, -8
 1326              	.LCFI31:
 1327              		.cfi_def_cfa_register 7
 1328 0006 F860     		str	r0, [r7, #12]
 1329 0008 B960     		str	r1, [r7, #8]
 1330 000a 7A60     		str	r2, [r7, #4]
 1331              	.LBB8:
 283:..//PHY/config_data.cpp **** 	// seq_num is the num of the seq to load...
 284:..//PHY/config_data.cpp **** 	// start getting the data for the sequence in chunks of 32 bytes..
 285:..//PHY/config_data.cpp **** 	// unsigned int i = 0;
 286:..//PHY/config_data.cpp **** 	int id = 0;
 1332              		.loc 1 286 0
 1333 000c 4FF00003 		mov	r3, #0
 1334 0010 3B63     		str	r3, [r7, #48]
 287:..//PHY/config_data.cpp **** 	int chunkSize = 32;
 1335              		.loc 1 287 0
 1336 0012 4FF02003 		mov	r3, #32
 1337 0016 7B63     		str	r3, [r7, #52]
 288:..//PHY/config_data.cpp **** 	int arr_idx = 0;
 1338              		.loc 1 288 0
 1339 0018 4FF00003 		mov	r3, #0
 1340 001c BB63     		str	r3, [r7, #56]
 289:..//PHY/config_data.cpp **** 	int retval = 0;
 1341              		.loc 1 289 0
 1342 001e 4FF00003 		mov	r3, #0
 1343 0022 FB63     		str	r3, [r7, #60]
 290:..//PHY/config_data.cpp **** 	char recvd_str[32];
 291:..//PHY/config_data.cpp **** 	char *data = recvd_str;
 1344              		.loc 1 291 0
 1345 0024 07F11003 		add	r3, r7, #16
 1346 0028 3B64     		str	r3, [r7, #64]
 292:..//PHY/config_data.cpp **** 	
 293:..//PHY/config_data.cpp **** 	unsigned char chunk_size = 32;
 1347              		.loc 1 293 0
 1348 002a 4FF02003 		mov	r3, #32
 1349 002e 87F84730 		strb	r3, [r7, #71]
 294:..//PHY/config_data.cpp **** 	unsigned int seq_eeprom_start_offset = 0;
 1350              		.loc 1 294 0
 1351 0032 4FF00003 		mov	r3, #0
 1352 0036 BB64     		str	r3, [r7, #72]
 295:..//PHY/config_data.cpp **** 	unsigned int seq_size = 512;
 1353              		.loc 1 295 0
 1354 0038 4FF40073 		mov	r3, #512
 1355 003c FB64     		str	r3, [r7, #76]
 296:..//PHY/config_data.cpp **** 	unsigned int seq_addr = seq_num*seq_size + seq_eeprom_start_offset;
 1356              		.loc 1 296 0
 1357 003e 7B68     		ldr	r3, [r7, #4]
 1358 0040 FA6C     		ldr	r2, [r7, #76]
 1359 0042 02FB03F2 		mul	r2, r2, r3
 1360 0046 BB6C     		ldr	r3, [r7, #72]
 1361 0048 1344     		add	r3, r2, r3
 1362 004a 3B65     		str	r3, [r7, #80]
 297:..//PHY/config_data.cpp **** 	
 298:..//PHY/config_data.cpp **** 	unsigned int read_addr = seq_addr;
 1363              		.loc 1 298 0
 1364 004c 3B6D     		ldr	r3, [r7, #80]
 1365 004e 7B65     		str	r3, [r7, #84]
 299:..//PHY/config_data.cpp **** 	
 300:..//PHY/config_data.cpp **** 	memset(p,'0',size);
 1366              		.loc 1 300 0
 1367 0050 BB68     		ldr	r3, [r7, #8]
 1368 0052 F868     		ldr	r0, [r7, #12]
 1369 0054 4FF03001 		mov	r1, #48
 1370 0058 1A46     		mov	r2, r3
 1371 005a 40F20003 		movw	r3, #:lower16:memset
 1372 005e C0F20003 		movt	r3, #:upper16:memset
 1373 0062 9847     		blx	r3
 301:..//PHY/config_data.cpp **** 	p[0] = '\0';
 1374              		.loc 1 301 0
 1375 0064 FB68     		ldr	r3, [r7, #12]
 1376 0066 4FF00002 		mov	r2, #0
 1377 006a 1A70     		strb	r2, [r3, #0]
 302:..//PHY/config_data.cpp **** 	for (id = 0;id < 16;id++){
 1378              		.loc 1 302 0
 1379 006c 4FF00003 		mov	r3, #0
 1380 0070 3B63     		str	r3, [r7, #48]
 1381 0072 39E0     		b	.L59
 1382              	.L62:
 303:..//PHY/config_data.cpp **** 		arr_idx = id *chunkSize;		
 1383              		.loc 1 303 0
 1384 0074 3B6B     		ldr	r3, [r7, #48]
 1385 0076 7A6B     		ldr	r2, [r7, #52]
 1386 0078 02FB03F3 		mul	r3, r2, r3
 1387 007c BB63     		str	r3, [r7, #56]
 304:..//PHY/config_data.cpp **** 		read_addr = seq_addr + arr_idx;
 1388              		.loc 1 304 0
 1389 007e BB6B     		ldr	r3, [r7, #56]
 1390 0080 3A6D     		ldr	r2, [r7, #80]
 1391 0082 1344     		add	r3, r2, r3
 1392 0084 7B65     		str	r3, [r7, #84]
 305:..//PHY/config_data.cpp **** 		memset(data,'0',sizeof(recvd_str));
 1393              		.loc 1 305 0
 1394 0086 386C     		ldr	r0, [r7, #64]
 1395 0088 4FF03001 		mov	r1, #48
 1396 008c 4FF02002 		mov	r2, #32
 1397 0090 40F20003 		movw	r3, #:lower16:memset
 1398 0094 C0F20003 		movt	r3, #:upper16:memset
 1399 0098 9847     		blx	r3
 306:..//PHY/config_data.cpp **** 		retval = i2cEEPROM_read32(read_addr,recvd_str,chunk_size); 
 1400              		.loc 1 306 0
 1401 009a 07F11002 		add	r2, r7, #16
 1402 009e 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 1403 00a2 786D     		ldr	r0, [r7, #84]
 1404 00a4 1146     		mov	r1, r2
 1405 00a6 1A46     		mov	r2, r3
 1406 00a8 40F20003 		movw	r3, #:lower16:i2cEEPROM_read32
 1407 00ac C0F20003 		movt	r3, #:upper16:i2cEEPROM_read32
 1408 00b0 9847     		blx	r3
 1409 00b2 0346     		mov	r3, r0
 1410 00b4 FB63     		str	r3, [r7, #60]
 307:..//PHY/config_data.cpp **** 		if (retval != 0){			
 1411              		.loc 1 307 0
 1412 00b6 FB6B     		ldr	r3, [r7, #60]
 1413 00b8 002B     		cmp	r3, #0
 1414 00ba 1ED1     		bne	.L64
 1415              	.L60:
 308:..//PHY/config_data.cpp **** 			// printf("Wrong: %d\n",id);
 309:..//PHY/config_data.cpp **** 			break;
 310:..//PHY/config_data.cpp **** 		}		
 311:..//PHY/config_data.cpp **** 		//read it back...		
 312:..//PHY/config_data.cpp **** 		recvd_str[chunk_size] = '\0';
 1416              		.loc 1 312 0
 1417 00bc 97F84730 		ldrb	r3, [r7, #71]	@ zero_extendqisi2
 1418 00c0 07F15802 		add	r2, r7, #88
 1419 00c4 1344     		add	r3, r2, r3
 1420 00c6 4FF00002 		mov	r2, #0
 1421 00ca 03F8482C 		strb	r2, [r3, #-72]
 313:..//PHY/config_data.cpp **** 		// printf("Rd%d:%s\n",id,recvd_str);
 314:..//PHY/config_data.cpp **** 		strcat(p,recvd_str);
 1422              		.loc 1 314 0
 1423 00ce 07F11003 		add	r3, r7, #16
 1424 00d2 F868     		ldr	r0, [r7, #12]
 1425 00d4 1946     		mov	r1, r3
 1426 00d6 40F20003 		movw	r3, #:lower16:strcat
 1427 00da C0F20003 		movt	r3, #:upper16:strcat
 1428 00de 9847     		blx	r3
 1429              		.loc 1 302 0
 1430 00e0 3B6B     		ldr	r3, [r7, #48]
 1431 00e2 03F10103 		add	r3, r3, #1
 1432 00e6 3B63     		str	r3, [r7, #48]
 1433              	.L59:
 1434 00e8 3B6B     		ldr	r3, [r7, #48]
 1435 00ea 0F2B     		cmp	r3, #15
 1436 00ec CCBF     		ite	gt
 1437 00ee 0023     		movgt	r3, #0
 1438 00f0 0123     		movle	r3, #1
 1439 00f2 DBB2     		uxtb	r3, r3
 1440 00f4 002B     		cmp	r3, #0
 1441 00f6 BDD1     		bne	.L62
 1442 00f8 00E0     		b	.L61
 1443              	.L64:
 1444              		.loc 1 309 0
 1445 00fa 00BF     		nop
 1446              	.L61:
 315:..//PHY/config_data.cpp **** 	}
 316:..//PHY/config_data.cpp **** 	// for(i=0;i<seq_size;i++){
 317:..//PHY/config_data.cpp **** 		// printf("RECVD[%d]: %d\n",i,(s[i])-48);
 318:..//PHY/config_data.cpp **** 	// }
 319:..//PHY/config_data.cpp **** 	// printf("final string = %s",s);
 320:..//PHY/config_data.cpp **** 	I2CDeinit();
 1447              		.loc 1 320 0
 1448 00fc 40F20003 		movw	r3, #:lower16:I2CDeinit
 1449 0100 C0F20003 		movt	r3, #:upper16:I2CDeinit
 1450 0104 9847     		blx	r3
 321:..//PHY/config_data.cpp **** 	// my_delay(10);
 322:..//PHY/config_data.cpp **** 	return retval;
 1451              		.loc 1 322 0
 1452 0106 FB6B     		ldr	r3, [r7, #60]
 1453              	.LBE8:
 323:..//PHY/config_data.cpp **** 	
 324:..//PHY/config_data.cpp **** }
 1454              		.loc 1 324 0
 1455 0108 1846     		mov	r0, r3
 1456 010a 07F15807 		add	r7, r7, #88
 1457 010e BD46     		mov	sp, r7
 1458 0110 80BD     		pop	{r7, pc}
 1459              		.cfi_endproc
 1460              	.LFE40:
 1462 0112 00BF     		.text
 1463              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 config_data.cpp
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:28     .bss.eepromStorage:00000000 eepromStorage
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:25     .bss.eepromStorage:00000000 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:35     .bss.eepromStorage1:00000000 eepromStorage1
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:32     .bss.eepromStorage1:00000000 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:42     .bss.eepromStorage2:00000000 eepromStorage2
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:39     .bss.eepromStorage2:00000000 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:49     .bss.eepromStorage3:00000000 eepromStorage3
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:46     .bss.eepromStorage3:00000000 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:56     .rodata:00000000 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:57     .rodata:00000000 .LC0
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:60     .text._Z20write_objects_eepromsPvi:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:65     .text._Z20write_objects_eepromsPvi:00000000 _Z20write_objects_eepromsPvi
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:232    .text._Z20write_objects_eepromsPvi:00000138 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:238    .rodata:0000000c .LC1
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:241    .text._Z19read_objects_eepromsPvi:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:246    .text._Z19read_objects_eepromsPvi:00000000 _Z19read_objects_eepromsPvi
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:409    .text._Z19read_objects_eepromsPvi:0000012c $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:414    .text._Z19read_config_versionv:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:419    .text._Z19read_config_versionv:00000000 _Z19read_config_versionv
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:612    .text._Z19read_config_versionv:00000164 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:617    .text._Z19read_config_versionRhS_:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:622    .text._Z19read_config_versionRhS_:00000000 _Z19read_config_versionRhS_
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:821    .text._Z19read_config_versionRhS_:00000168 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:827    .rodata:00000018 .LC2
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:830    .text._Z16read_config_datav:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:835    .text._Z16read_config_datav:00000000 _Z16read_config_datav
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:894    .text._Z17write_config_datav:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:899    .text._Z17write_config_datav:00000000 _Z17write_config_datav
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:940    .text._Z25write_config_data_table_1v:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:945    .text._Z25write_config_data_table_1v:00000000 _Z25write_config_data_table_1v
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:970    .text._Z25write_config_data_table_2v:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:975    .text._Z25write_config_data_table_2v:00000000 _Z25write_config_data_table_2v
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:1000   .text._Z25write_config_data_table_3v:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:1005   .text._Z25write_config_data_table_3v:00000000 _Z25write_config_data_table_3v
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:1031   .rodata:00000030 .LC3
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:1034   .text._Z19config_set_defaultshh:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:1039   .text._Z19config_set_defaultshh:00000000 _Z19config_set_defaultshh
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:1092   .text._Z24write_Sequence_to_EEPROMPcii:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:1097   .text._Z24write_Sequence_to_EEPROMPcii:00000000 _Z24write_Sequence_to_EEPROMPcii
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:1306   .text._Z25read_Sequence_from_EEPROMPcii:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccPbesZC.s:1311   .text._Z25read_Sequence_from_EEPROMPcii:00000000 _Z25read_Sequence_from_EEPROMPcii
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_i2f
__aeabi_fdiv
__aeabi_f2d
__aeabi_d2iz
ceil
i2cEEPROM_write8
puts
_delay_ms
I2CDeinit
i2cEEPROM_read8
fw_major_version
fw_minor_version
printf
memcpy
i2cEEPROM_write32
i2cEEPROM_read32
memset
strcat
