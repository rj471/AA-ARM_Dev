   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"syscalls.c"
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text._kill,"ax",%progbits
  24              		.align	2
  25              		.global	_kill
  26              		.thumb
  27              		.thumb_func
  29              	_kill:
  30              	.LFB29:
  31              		.file 1 "..//Common/src/syscalls.c"
   1:..//Common/src/syscalls.c **** /*
   2:..//Common/src/syscalls.c ****  * syscalls.c
   3:..//Common/src/syscalls.c ****  *
   4:..//Common/src/syscalls.c ****  *  Created on: 03.12.2009
   5:..//Common/src/syscalls.c ****  *      Author: Martin Thomas, 3BSD license
   6:..//Common/src/syscalls.c ****  */
   7:..//Common/src/syscalls.c ****  /* MOdified by Sagar G V, Feb 2011.
   8:..//Common/src/syscalls.c ****  Ported to LPC17xx.
   9:..//Common/src/syscalls.c ****  */
  10:..//Common/src/syscalls.c **** 
  11:..//Common/src/syscalls.c **** #include "syscalls.h"
  12:..//Common/src/syscalls.c **** 
  13:..//Common/src/syscalls.c **** 
  14:..//Common/src/syscalls.c **** #ifdef __cplusplus
  15:..//Common/src/syscalls.c **** extern "C" {
  16:..//Common/src/syscalls.c **** #endif
  17:..//Common/src/syscalls.c **** 
  18:..//Common/src/syscalls.c **** #undef errno
  19:..//Common/src/syscalls.c **** extern int errno;
  20:..//Common/src/syscalls.c **** 
  21:..//Common/src/syscalls.c **** int _kill(int pid, int sig)
  22:..//Common/src/syscalls.c **** {
  32              		.loc 1 22 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 8
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40 0002 83B0     		sub	sp, sp, #12
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_offset 7, -4
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 7
  47 0006 7860     		str	r0, [r7, #4]
  48 0008 3960     		str	r1, [r7, #0]
  23:..//Common/src/syscalls.c **** 	pid = pid; sig = sig; /* avoid warnings */
  24:..//Common/src/syscalls.c **** 	errno = EINVAL;
  49              		.loc 1 24 0
  50 000a 40F20003 		movw	r3, #:lower16:errno
  51 000e C0F20003 		movt	r3, #:upper16:errno
  52 0012 4FF01602 		mov	r2, #22
  53 0016 1A60     		str	r2, [r3, #0]
  25:..//Common/src/syscalls.c **** 	return -1;
  54              		.loc 1 25 0
  55 0018 4FF0FF33 		mov	r3, #-1
  26:..//Common/src/syscalls.c **** }
  56              		.loc 1 26 0
  57 001c 1846     		mov	r0, r3
  58 001e 07F10C07 		add	r7, r7, #12
  59 0022 BD46     		mov	sp, r7
  60 0024 80BC     		pop	{r7}
  61 0026 7047     		bx	lr
  62              		.cfi_endproc
  63              	.LFE29:
  65              		.section	.text._exit,"ax",%progbits
  66              		.align	2
  67              		.global	_exit
  68              		.thumb
  69              		.thumb_func
  71              	_exit:
  72              	.LFB30:
  27:..//Common/src/syscalls.c **** 
  28:..//Common/src/syscalls.c **** void _exit(int status)
  29:..//Common/src/syscalls.c **** {
  30:..//Common/src/syscalls.c **** 	status = status;
  31:..//Common/src/syscalls.c **** 	while(1) {;}
  73              		.loc 1 31 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 8
  76              		@ frame_needed = 1, uses_anonymous_args = 0
  77              		@ link register save eliminated.
  78 0000 80B4     		push	{r7}
  79              	.LCFI3:
  80              		.cfi_def_cfa_offset 4
  81 0002 83B0     		sub	sp, sp, #12
  82              	.LCFI4:
  83              		.cfi_def_cfa_offset 16
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_offset 7, -4
  86              	.LCFI5:
  87              		.cfi_def_cfa_register 7
  88 0006 7860     		str	r0, [r7, #4]
  89              	.L4:
  90              		.loc 1 31 0
  91 0008 FEE7     		b	.L4
  92              		.cfi_endproc
  93              	.LFE30:
  95 000a 00BF     		.section	.text._getpid,"ax",%progbits
  96              		.align	2
  97              		.global	_getpid
  98              		.thumb
  99              		.thumb_func
 101              	_getpid:
 102              	.LFB31:
  32:..//Common/src/syscalls.c **** }
  33:..//Common/src/syscalls.c **** 
  34:..//Common/src/syscalls.c **** int _getpid(void)
  35:..//Common/src/syscalls.c **** {
 103              		.loc 1 35 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 1, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108 0000 80B4     		push	{r7}
 109              	.LCFI6:
 110              		.cfi_def_cfa_offset 4
 111 0002 00AF     		add	r7, sp, #0
 112              		.cfi_offset 7, -4
 113              	.LCFI7:
 114              		.cfi_def_cfa_register 7
  36:..//Common/src/syscalls.c **** 	return 1;
 115              		.loc 1 36 0
 116 0004 4FF00103 		mov	r3, #1
  37:..//Common/src/syscalls.c **** }
 117              		.loc 1 37 0
 118 0008 1846     		mov	r0, r3
 119 000a BD46     		mov	sp, r7
 120 000c 80BC     		pop	{r7}
 121 000e 7047     		bx	lr
 122              		.cfi_endproc
 123              	.LFE31:
 125              		.section	.bss.heap_end,"aw",%nobits
 126              		.align	2
 129              	heap_end:
 130 0000 00000000 		.space	4
 131              		.section	.text.get_heap_end,"ax",%progbits
 132              		.align	2
 133              		.global	get_heap_end
 134              		.thumb
 135              		.thumb_func
 137              	get_heap_end:
 138              	.LFB32:
  38:..//Common/src/syscalls.c **** 
  39:..//Common/src/syscalls.c **** 
  40:..//Common/src/syscalls.c **** extern char _end; /* Defined by the linker */
  41:..//Common/src/syscalls.c **** static char *heap_end;
  42:..//Common/src/syscalls.c **** 
  43:..//Common/src/syscalls.c **** char* get_heap_end(void)
  44:..//Common/src/syscalls.c **** {
 139              		.loc 1 44 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 0
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143              		@ link register save eliminated.
 144 0000 80B4     		push	{r7}
 145              	.LCFI8:
 146              		.cfi_def_cfa_offset 4
 147 0002 00AF     		add	r7, sp, #0
 148              		.cfi_offset 7, -4
 149              	.LCFI9:
 150              		.cfi_def_cfa_register 7
  45:..//Common/src/syscalls.c **** 	return (char*) heap_end;
 151              		.loc 1 45 0
 152 0004 40F20003 		movw	r3, #:lower16:heap_end
 153 0008 C0F20003 		movt	r3, #:upper16:heap_end
 154 000c 1B68     		ldr	r3, [r3, #0]
  46:..//Common/src/syscalls.c **** }
 155              		.loc 1 46 0
 156 000e 1846     		mov	r0, r3
 157 0010 BD46     		mov	sp, r7
 158 0012 80BC     		pop	{r7}
 159 0014 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE32:
 163 0016 00BF     		.section	.text.get_stack_top,"ax",%progbits
 164              		.align	2
 165              		.global	get_stack_top
 166              		.thumb
 167              		.thumb_func
 169              	get_stack_top:
 170              	.LFB33:
  47:..//Common/src/syscalls.c **** 
  48:..//Common/src/syscalls.c **** char* get_stack_top(void)
  49:..//Common/src/syscalls.c **** {
 171              		.loc 1 49 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 1, uses_anonymous_args = 0
 175 0000 80B5     		push	{r7, lr}
 176              	.LCFI10:
 177              		.cfi_def_cfa_offset 8
 178 0002 00AF     		add	r7, sp, #0
 179              		.cfi_offset 14, -4
 180              		.cfi_offset 7, -8
 181              	.LCFI11:
 182              		.cfi_def_cfa_register 7
  50:..//Common/src/syscalls.c **** 	return (char*) __get_MSP();
 183              		.loc 1 50 0
 184 0004 40F20003 		movw	r3, #:lower16:__get_MSP
 185 0008 C0F20003 		movt	r3, #:upper16:__get_MSP
 186 000c 9847     		blx	r3
 187 000e 0346     		mov	r3, r0
  51:..//Common/src/syscalls.c **** 	// return (char*) __get_PSP();
  52:..//Common/src/syscalls.c **** }
 188              		.loc 1 52 0
 189 0010 1846     		mov	r0, r3
 190 0012 80BD     		pop	{r7, pc}
 191              		.cfi_endproc
 192              	.LFE33:
 194              		.section	.text._sbrk,"ax",%progbits
 195              		.align	2
 196              		.global	_sbrk
 197              		.thumb
 198              		.thumb_func
 200              	_sbrk:
 201              	.LFB34:
  53:..//Common/src/syscalls.c **** 
  54:..//Common/src/syscalls.c **** caddr_t _sbrk(int incr)
  55:..//Common/src/syscalls.c **** {
 202              		.loc 1 55 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 16
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0000 90B5     		push	{r4, r7, lr}
 207              	.LCFI12:
 208              		.cfi_def_cfa_offset 12
 209 0002 85B0     		sub	sp, sp, #20
 210              	.LCFI13:
 211              		.cfi_def_cfa_offset 32
 212 0004 00AF     		add	r7, sp, #0
 213              		.cfi_offset 14, -4
 214              		.cfi_offset 7, -8
 215              		.cfi_offset 4, -12
 216              	.LCFI14:
 217              		.cfi_def_cfa_register 7
 218 0006 7860     		str	r0, [r7, #4]
  56:..//Common/src/syscalls.c **** 	char *prev_heap_end;
  57:..//Common/src/syscalls.c **** 	if (heap_end == 0) {
 219              		.loc 1 57 0
 220 0008 40F20003 		movw	r3, #:lower16:heap_end
 221 000c C0F20003 		movt	r3, #:upper16:heap_end
 222 0010 1B68     		ldr	r3, [r3, #0]
 223 0012 002B     		cmp	r3, #0
 224 0014 08D1     		bne	.L13
  58:..//Common/src/syscalls.c **** 		heap_end = &_end;
 225              		.loc 1 58 0
 226 0016 40F20003 		movw	r3, #:lower16:heap_end
 227 001a C0F20003 		movt	r3, #:upper16:heap_end
 228 001e 40F20002 		movw	r2, #:lower16:_end
 229 0022 C0F20002 		movt	r2, #:upper16:_end
 230 0026 1A60     		str	r2, [r3, #0]
 231              	.L13:
  59:..//Common/src/syscalls.c **** 	}
  60:..//Common/src/syscalls.c **** 	prev_heap_end = heap_end;
 232              		.loc 1 60 0
 233 0028 40F20003 		movw	r3, #:lower16:heap_end
 234 002c C0F20003 		movt	r3, #:upper16:heap_end
 235 0030 1B68     		ldr	r3, [r3, #0]
 236 0032 FB60     		str	r3, [r7, #12]
  61:..//Common/src/syscalls.c **** #if 1
  62:..//Common/src/syscalls.c **** 	if (heap_end + incr > get_stack_top()) {
 237              		.loc 1 62 0
 238 0034 40F20003 		movw	r3, #:lower16:heap_end
 239 0038 C0F20003 		movt	r3, #:upper16:heap_end
 240 003c 1A68     		ldr	r2, [r3, #0]
 241 003e 7B68     		ldr	r3, [r7, #4]
 242 0040 02EB0304 		add	r4, r2, r3
 243 0044 40F20003 		movw	r3, #:lower16:get_stack_top
 244 0048 C0F20003 		movt	r3, #:upper16:get_stack_top
 245 004c 9847     		blx	r3
 246 004e 0346     		mov	r3, r0
 247 0050 9C42     		cmp	r4, r3
 248 0052 04D9     		bls	.L14
  63:..//Common/src/syscalls.c **** 		
  64:..//Common/src/syscalls.c **** 		abort();
 249              		.loc 1 64 0
 250 0054 40F20003 		movw	r3, #:lower16:abort
 251 0058 C0F20003 		movt	r3, #:upper16:abort
 252 005c 9847     		blx	r3
 253              	.L14:
  65:..//Common/src/syscalls.c **** 	}
  66:..//Common/src/syscalls.c **** #endif
  67:..//Common/src/syscalls.c **** 	heap_end += incr;
 254              		.loc 1 67 0
 255 005e 40F20003 		movw	r3, #:lower16:heap_end
 256 0062 C0F20003 		movt	r3, #:upper16:heap_end
 257 0066 1A68     		ldr	r2, [r3, #0]
 258 0068 7B68     		ldr	r3, [r7, #4]
 259 006a 1A44     		add	r2, r2, r3
 260 006c 40F20003 		movw	r3, #:lower16:heap_end
 261 0070 C0F20003 		movt	r3, #:upper16:heap_end
 262 0074 1A60     		str	r2, [r3, #0]
  68:..//Common/src/syscalls.c **** 	return (caddr_t) prev_heap_end;
 263              		.loc 1 68 0
 264 0076 FB68     		ldr	r3, [r7, #12]
  69:..//Common/src/syscalls.c **** }
 265              		.loc 1 69 0
 266 0078 1846     		mov	r0, r3
 267 007a 07F11407 		add	r7, r7, #20
 268 007e BD46     		mov	sp, r7
 269 0080 90BD     		pop	{r4, r7, pc}
 270              		.cfi_endproc
 271              	.LFE34:
 273 0082 00BF     		.section	.text._close,"ax",%progbits
 274              		.align	2
 275              		.global	_close
 276              		.thumb
 277              		.thumb_func
 279              	_close:
 280              	.LFB35:
  70:..//Common/src/syscalls.c **** 
  71:..//Common/src/syscalls.c **** int _close(int file)
  72:..//Common/src/syscalls.c **** {
 281              		.loc 1 72 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 0000 80B4     		push	{r7}
 287              	.LCFI15:
 288              		.cfi_def_cfa_offset 4
 289 0002 83B0     		sub	sp, sp, #12
 290              	.LCFI16:
 291              		.cfi_def_cfa_offset 16
 292 0004 00AF     		add	r7, sp, #0
 293              		.cfi_offset 7, -4
 294              	.LCFI17:
 295              		.cfi_def_cfa_register 7
 296 0006 7860     		str	r0, [r7, #4]
  73:..//Common/src/syscalls.c **** 	file = file; /* avoid warning */
  74:..//Common/src/syscalls.c **** 	return -1;
 297              		.loc 1 74 0
 298 0008 4FF0FF33 		mov	r3, #-1
  75:..//Common/src/syscalls.c **** }
 299              		.loc 1 75 0
 300 000c 1846     		mov	r0, r3
 301 000e 07F10C07 		add	r7, r7, #12
 302 0012 BD46     		mov	sp, r7
 303 0014 80BC     		pop	{r7}
 304 0016 7047     		bx	lr
 305              		.cfi_endproc
 306              	.LFE35:
 308              		.section	.text._fstat,"ax",%progbits
 309              		.align	2
 310              		.global	_fstat
 311              		.thumb
 312              		.thumb_func
 314              	_fstat:
 315              	.LFB36:
  76:..//Common/src/syscalls.c **** 
  77:..//Common/src/syscalls.c **** int _fstat(int file, struct stat *st)
  78:..//Common/src/syscalls.c **** {
 316              		.loc 1 78 0
 317              		.cfi_startproc
 318              		@ args = 0, pretend = 0, frame = 8
 319              		@ frame_needed = 1, uses_anonymous_args = 0
 320              		@ link register save eliminated.
 321 0000 80B4     		push	{r7}
 322              	.LCFI18:
 323              		.cfi_def_cfa_offset 4
 324 0002 83B0     		sub	sp, sp, #12
 325              	.LCFI19:
 326              		.cfi_def_cfa_offset 16
 327 0004 00AF     		add	r7, sp, #0
 328              		.cfi_offset 7, -4
 329              	.LCFI20:
 330              		.cfi_def_cfa_register 7
 331 0006 7860     		str	r0, [r7, #4]
 332 0008 3960     		str	r1, [r7, #0]
  79:..//Common/src/syscalls.c **** 	file = file; /* avoid warning */
  80:..//Common/src/syscalls.c **** 	st->st_mode = S_IFCHR;
 333              		.loc 1 80 0
 334 000a 3B68     		ldr	r3, [r7, #0]
 335 000c 4FF40052 		mov	r2, #8192
 336 0010 5A60     		str	r2, [r3, #4]
  81:..//Common/src/syscalls.c **** 	return 0;
 337              		.loc 1 81 0
 338 0012 4FF00003 		mov	r3, #0
  82:..//Common/src/syscalls.c **** }
 339              		.loc 1 82 0
 340 0016 1846     		mov	r0, r3
 341 0018 07F10C07 		add	r7, r7, #12
 342 001c BD46     		mov	sp, r7
 343 001e 80BC     		pop	{r7}
 344 0020 7047     		bx	lr
 345              		.cfi_endproc
 346              	.LFE36:
 348 0022 00BF     		.section	.text._isatty,"ax",%progbits
 349              		.align	2
 350              		.global	_isatty
 351              		.thumb
 352              		.thumb_func
 354              	_isatty:
 355              	.LFB37:
  83:..//Common/src/syscalls.c **** 
  84:..//Common/src/syscalls.c **** int _isatty(int file)
  85:..//Common/src/syscalls.c **** {
 356              		.loc 1 85 0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 8
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 361 0000 80B4     		push	{r7}
 362              	.LCFI21:
 363              		.cfi_def_cfa_offset 4
 364 0002 83B0     		sub	sp, sp, #12
 365              	.LCFI22:
 366              		.cfi_def_cfa_offset 16
 367 0004 00AF     		add	r7, sp, #0
 368              		.cfi_offset 7, -4
 369              	.LCFI23:
 370              		.cfi_def_cfa_register 7
 371 0006 7860     		str	r0, [r7, #4]
  86:..//Common/src/syscalls.c **** 	file = file; /* avoid warning */
  87:..//Common/src/syscalls.c **** 	return 1;
 372              		.loc 1 87 0
 373 0008 4FF00103 		mov	r3, #1
  88:..//Common/src/syscalls.c **** }
 374              		.loc 1 88 0
 375 000c 1846     		mov	r0, r3
 376 000e 07F10C07 		add	r7, r7, #12
 377 0012 BD46     		mov	sp, r7
 378 0014 80BC     		pop	{r7}
 379 0016 7047     		bx	lr
 380              		.cfi_endproc
 381              	.LFE37:
 383              		.section	.text._lseek,"ax",%progbits
 384              		.align	2
 385              		.global	_lseek
 386              		.thumb
 387              		.thumb_func
 389              	_lseek:
 390              	.LFB38:
  89:..//Common/src/syscalls.c **** 
  90:..//Common/src/syscalls.c **** int _lseek(int file, int ptr, int dir) {
 391              		.loc 1 90 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 16
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              	.LCFI24:
 398              		.cfi_def_cfa_offset 4
 399 0002 85B0     		sub	sp, sp, #20
 400              	.LCFI25:
 401              		.cfi_def_cfa_offset 24
 402 0004 00AF     		add	r7, sp, #0
 403              		.cfi_offset 7, -4
 404              	.LCFI26:
 405              		.cfi_def_cfa_register 7
 406 0006 F860     		str	r0, [r7, #12]
 407 0008 B960     		str	r1, [r7, #8]
 408 000a 7A60     		str	r2, [r7, #4]
  91:..//Common/src/syscalls.c **** 	file = file; /* avoid warning */
  92:..//Common/src/syscalls.c **** 	ptr = ptr; /* avoid warning */
  93:..//Common/src/syscalls.c **** 	dir = dir; /* avoid warning */
  94:..//Common/src/syscalls.c **** 	return 0;
 409              		.loc 1 94 0
 410 000c 4FF00003 		mov	r3, #0
  95:..//Common/src/syscalls.c **** }
 411              		.loc 1 95 0
 412 0010 1846     		mov	r0, r3
 413 0012 07F11407 		add	r7, r7, #20
 414 0016 BD46     		mov	sp, r7
 415 0018 80BC     		pop	{r7}
 416 001a 7047     		bx	lr
 417              		.cfi_endproc
 418              	.LFE38:
 420              		.section	.text._read,"ax",%progbits
 421              		.align	2
 422              		.global	_read
 423              		.thumb
 424              		.thumb_func
 426              	_read:
 427              	.LFB39:
  96:..//Common/src/syscalls.c **** 
  97:..//Common/src/syscalls.c **** int _read(int file, char *ptr, int len)
  98:..//Common/src/syscalls.c **** {
 428              		.loc 1 98 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 16
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              	.LCFI27:
 435              		.cfi_def_cfa_offset 4
 436 0002 85B0     		sub	sp, sp, #20
 437              	.LCFI28:
 438              		.cfi_def_cfa_offset 24
 439 0004 00AF     		add	r7, sp, #0
 440              		.cfi_offset 7, -4
 441              	.LCFI29:
 442              		.cfi_def_cfa_register 7
 443 0006 F860     		str	r0, [r7, #12]
 444 0008 B960     		str	r1, [r7, #8]
 445 000a 7A60     		str	r2, [r7, #4]
  99:..//Common/src/syscalls.c **** 	file = file; /* avoid warning */
 100:..//Common/src/syscalls.c **** 	ptr = ptr; /* avoid warning */
 101:..//Common/src/syscalls.c **** 	len = len; /* avoid warning */
 102:..//Common/src/syscalls.c **** 
 103:..//Common/src/syscalls.c **** 	ptr = ptr;
 104:..//Common/src/syscalls.c **** 	return 0;
 446              		.loc 1 104 0
 447 000c 4FF00003 		mov	r3, #0
 105:..//Common/src/syscalls.c **** 
 106:..//Common/src/syscalls.c **** }
 448              		.loc 1 106 0
 449 0010 1846     		mov	r0, r3
 450 0012 07F11407 		add	r7, r7, #20
 451 0016 BD46     		mov	sp, r7
 452 0018 80BC     		pop	{r7}
 453 001a 7047     		bx	lr
 454              		.cfi_endproc
 455              	.LFE39:
 457              		.section	.text._write,"ax",%progbits
 458              		.align	2
 459              		.global	_write
 460              		.thumb
 461              		.thumb_func
 463              	_write:
 464              	.LFB40:
 107:..//Common/src/syscalls.c **** 
 108:..//Common/src/syscalls.c **** int _write(int file, char *ptr, int len)
 109:..//Common/src/syscalls.c **** {
 465              		.loc 1 109 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 24
 468              		@ frame_needed = 1, uses_anonymous_args = 0
 469              		@ link register save eliminated.
 470 0000 80B4     		push	{r7}
 471              	.LCFI30:
 472              		.cfi_def_cfa_offset 4
 473 0002 87B0     		sub	sp, sp, #28
 474              	.LCFI31:
 475              		.cfi_def_cfa_offset 32
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_offset 7, -4
 478              	.LCFI32:
 479              		.cfi_def_cfa_register 7
 480 0006 F860     		str	r0, [r7, #12]
 481 0008 B960     		str	r1, [r7, #8]
 482 000a 7A60     		str	r2, [r7, #4]
 110:..//Common/src/syscalls.c **** 	int todo;
 111:..//Common/src/syscalls.c **** 	ptr = ptr;
 112:..//Common/src/syscalls.c **** 	file = file; /* avoid warning */
 113:..//Common/src/syscalls.c **** 	for (todo = 0; todo < len; todo++) {
 483              		.loc 1 113 0
 484 000c 4FF00003 		mov	r3, #0
 485 0010 7B61     		str	r3, [r7, #20]
 486 0012 07E0     		b	.L27
 487              	.L28:
 114:..//Common/src/syscalls.c **** 		ptr++;
 488              		.loc 1 114 0
 489 0014 BB68     		ldr	r3, [r7, #8]
 490 0016 03F10103 		add	r3, r3, #1
 491 001a BB60     		str	r3, [r7, #8]
 492              		.loc 1 113 0
 493 001c 7B69     		ldr	r3, [r7, #20]
 494 001e 03F10103 		add	r3, r3, #1
 495 0022 7B61     		str	r3, [r7, #20]
 496              	.L27:
 497 0024 7A69     		ldr	r2, [r7, #20]
 498 0026 7B68     		ldr	r3, [r7, #4]
 499 0028 9A42     		cmp	r2, r3
 500 002a F3DB     		blt	.L28
 115:..//Common/src/syscalls.c **** 	}
 116:..//Common/src/syscalls.c **** 	return len;
 501              		.loc 1 116 0
 502 002c 7B68     		ldr	r3, [r7, #4]
 117:..//Common/src/syscalls.c **** }
 503              		.loc 1 117 0
 504 002e 1846     		mov	r0, r3
 505 0030 07F11C07 		add	r7, r7, #28
 506 0034 BD46     		mov	sp, r7
 507 0036 80BC     		pop	{r7}
 508 0038 7047     		bx	lr
 509              		.cfi_endproc
 510              	.LFE40:
 512 003a 00BF     		.text
 513              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:24     .text._kill:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:29     .text._kill:00000000 _kill
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:66     .text._exit:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:71     .text._exit:00000000 _exit
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:96     .text._getpid:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:101    .text._getpid:00000000 _getpid
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:126    .bss.heap_end:00000000 $d
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:129    .bss.heap_end:00000000 heap_end
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:132    .text.get_heap_end:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:137    .text.get_heap_end:00000000 get_heap_end
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:164    .text.get_stack_top:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:169    .text.get_stack_top:00000000 get_stack_top
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:195    .text._sbrk:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:200    .text._sbrk:00000000 _sbrk
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:274    .text._close:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:279    .text._close:00000000 _close
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:309    .text._fstat:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:314    .text._fstat:00000000 _fstat
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:349    .text._isatty:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:354    .text._isatty:00000000 _isatty
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:384    .text._lseek:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:389    .text._lseek:00000000 _lseek
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:421    .text._read:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:426    .text._read:00000000 _read
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:458    .text._write:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccTouDdm.s:463    .text._write:00000000 _write
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
errno
__get_MSP
_end
abort
