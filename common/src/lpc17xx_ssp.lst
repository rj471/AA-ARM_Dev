   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"lpc17xx_ssp.c"
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.setSSPclock,"ax",%progbits
  24              		.align	2
  25              		.thumb
  26              		.thumb_func
  28              	setSSPclock:
  29              	.LFB29:
  30              		.file 1 "..//common/src/lpc17xx_ssp.c"
   1:..//common/src/lpc17xx_ssp.c **** /***********************************************************************//**
   2:..//common/src/lpc17xx_ssp.c ****  * @file		lpc17xx_ssp.c
   3:..//common/src/lpc17xx_ssp.c ****  * @brief		Contains all functions support for SSP firmware library on LPC17xx
   4:..//common/src/lpc17xx_ssp.c ****  * @version		3.0
   5:..//common/src/lpc17xx_ssp.c ****  * @date		18. June. 2010
   6:..//common/src/lpc17xx_ssp.c ****  * @author		NXP MCU SW Application Team
   7:..//common/src/lpc17xx_ssp.c ****  **************************************************************************
   8:..//common/src/lpc17xx_ssp.c ****  * Software that is described herein is for illustrative purposes only
   9:..//common/src/lpc17xx_ssp.c ****  * which provides customers with programming information regarding the
  10:..//common/src/lpc17xx_ssp.c ****  * products. This software is supplied "AS IS" without any warranties.
  11:..//common/src/lpc17xx_ssp.c ****  * NXP Semiconductors assumes no responsibility or liability for the
  12:..//common/src/lpc17xx_ssp.c ****  * use of the software, conveys no license or title under any patent,
  13:..//common/src/lpc17xx_ssp.c ****  * copyright, or mask work right to the product. NXP Semiconductors
  14:..//common/src/lpc17xx_ssp.c ****  * reserves the right to make changes in the software without
  15:..//common/src/lpc17xx_ssp.c ****  * notification. NXP Semiconductors also make no representation or
  16:..//common/src/lpc17xx_ssp.c ****  * warranty that such application will be suitable for the specified
  17:..//common/src/lpc17xx_ssp.c ****  * use without further testing or modification.
  18:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
  19:..//common/src/lpc17xx_ssp.c **** 
  20:..//common/src/lpc17xx_ssp.c **** /* Peripheral group ----------------------------------------------------------- */
  21:..//common/src/lpc17xx_ssp.c **** /** @addtogroup SSP
  22:..//common/src/lpc17xx_ssp.c ****  * @{
  23:..//common/src/lpc17xx_ssp.c ****  */
  24:..//common/src/lpc17xx_ssp.c **** 
  25:..//common/src/lpc17xx_ssp.c **** /* Includes ------------------------------------------------------------------- */
  26:..//common/src/lpc17xx_ssp.c **** #include "lpc17xx_ssp.h"
  27:..//common/src/lpc17xx_ssp.c **** #include "lpc17xx_clkpwr.h"
  28:..//common/src/lpc17xx_ssp.c **** 
  29:..//common/src/lpc17xx_ssp.c **** 
  30:..//common/src/lpc17xx_ssp.c **** /* If this source file built with example, the LPC17xx FW library configuration
  31:..//common/src/lpc17xx_ssp.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  32:..//common/src/lpc17xx_ssp.c ****  * otherwise the default FW library configuration file must be included instead
  33:..//common/src/lpc17xx_ssp.c ****  */
  34:..//common/src/lpc17xx_ssp.c **** #ifdef __BUILD_WITH_EXAMPLE__
  35:..//common/src/lpc17xx_ssp.c **** #include "lpc17xx_libcfg.h"
  36:..//common/src/lpc17xx_ssp.c **** #else
  37:..//common/src/lpc17xx_ssp.c **** #include "lpc17xx_libcfg_default.h"
  38:..//common/src/lpc17xx_ssp.c **** #endif /* __BUILD_WITH_EXAMPLE__ */
  39:..//common/src/lpc17xx_ssp.c **** 
  40:..//common/src/lpc17xx_ssp.c **** 
  41:..//common/src/lpc17xx_ssp.c **** #ifdef _SSP
  42:..//common/src/lpc17xx_ssp.c **** 
  43:..//common/src/lpc17xx_ssp.c **** /* Public Functions ----------------------------------------------------------- */
  44:..//common/src/lpc17xx_ssp.c **** /** @addtogroup SSP_Public_Functions
  45:..//common/src/lpc17xx_ssp.c ****  * @{
  46:..//common/src/lpc17xx_ssp.c ****  */
  47:..//common/src/lpc17xx_ssp.c **** static void setSSPclock (LPC_SSP_TypeDef *SSPx, uint32_t target_clock);
  48:..//common/src/lpc17xx_ssp.c **** 
  49:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
  50:..//common/src/lpc17xx_ssp.c ****  * @brief 		Setup clock rate for SSP device
  51:..//common/src/lpc17xx_ssp.c ****  * @param[in] 	SSPx	SSP peripheral definition, should be:
  52:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP0: SSP0 peripheral
  53:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
  54:..//common/src/lpc17xx_ssp.c ****  * @param[in]	target_clock : clock of SSP (Hz)
  55:..//common/src/lpc17xx_ssp.c ****  * @return 		None
  56:..//common/src/lpc17xx_ssp.c ****  ***********************************************************************/
  57:..//common/src/lpc17xx_ssp.c **** static void setSSPclock (LPC_SSP_TypeDef *SSPx, uint32_t target_clock)
  58:..//common/src/lpc17xx_ssp.c **** {
  31              		.loc 1 58 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 24
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38 0002 86B0     		sub	sp, sp, #24
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              		.cfi_offset 14, -4
  43              		.cfi_offset 7, -8
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 7860     		str	r0, [r7, #4]
  47 0008 3960     		str	r1, [r7, #0]
  59:..//common/src/lpc17xx_ssp.c ****     uint32_t prescale, cr0_div, cmp_clk, ssp_clk;
  60:..//common/src/lpc17xx_ssp.c **** 
  61:..//common/src/lpc17xx_ssp.c ****     // // CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
  62:..//common/src/lpc17xx_ssp.c **** 
  63:..//common/src/lpc17xx_ssp.c ****     /* The SSP clock is derived from the (main system oscillator / 2),
  64:..//common/src/lpc17xx_ssp.c ****        so compute the best divider from that clock */
  65:..//common/src/lpc17xx_ssp.c ****     if (SSPx == LPC_SSP0){
  48              		.loc 1 65 0
  49 000a 7A68     		ldr	r2, [r7, #4]
  50 000c 48F20003 		movw	r3, #:lower16:1074298880
  51 0010 C4F20803 		movt	r3, #:upper16:1074298880
  52 0014 9A42     		cmp	r2, r3
  53 0016 09D1     		bne	.L2
  66:..//common/src/lpc17xx_ssp.c ****     	ssp_clk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_SSP0);
  54              		.loc 1 66 0
  55 0018 4FF02A00 		mov	r0, #42
  56 001c 40F20003 		movw	r3, #:lower16:CLKPWR_GetPCLK
  57 0020 C0F20003 		movt	r3, #:upper16:CLKPWR_GetPCLK
  58 0024 9847     		blx	r3
  59 0026 0346     		mov	r3, r0
  60 0028 7B61     		str	r3, [r7, #20]
  61 002a 0FE0     		b	.L3
  62              	.L2:
  67:..//common/src/lpc17xx_ssp.c ****     } else if (SSPx == LPC_SSP1) {
  63              		.loc 1 67 0
  64 002c 7A68     		ldr	r2, [r7, #4]
  65 002e 40F20003 		movw	r3, #:lower16:1073938432
  66 0032 C4F20303 		movt	r3, #:upper16:1073938432
  67 0036 9A42     		cmp	r2, r3
  68 0038 4BD1     		bne	.L9
  68:..//common/src/lpc17xx_ssp.c ****     	ssp_clk = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_SSP1);
  69              		.loc 1 68 0
  70 003a 4FF01400 		mov	r0, #20
  71 003e 40F20003 		movw	r3, #:lower16:CLKPWR_GetPCLK
  72 0042 C0F20003 		movt	r3, #:upper16:CLKPWR_GetPCLK
  73 0046 9847     		blx	r3
  74 0048 0346     		mov	r3, r0
  75 004a 7B61     		str	r3, [r7, #20]
  76              	.L3:
  69:..//common/src/lpc17xx_ssp.c ****     } else {
  70:..//common/src/lpc17xx_ssp.c ****     	return;
  71:..//common/src/lpc17xx_ssp.c ****     }
  72:..//common/src/lpc17xx_ssp.c **** 
  73:..//common/src/lpc17xx_ssp.c **** 	/* Find closest divider to get at or under the target frequency.
  74:..//common/src/lpc17xx_ssp.c **** 	   Use smallest prescale possible and rely on the divider to get
  75:..//common/src/lpc17xx_ssp.c **** 	   the closest target frequency */
  76:..//common/src/lpc17xx_ssp.c **** 	cr0_div = 0;
  77              		.loc 1 76 0
  78 004c 4FF00003 		mov	r3, #0
  79 0050 FB60     		str	r3, [r7, #12]
  77:..//common/src/lpc17xx_ssp.c **** 	cmp_clk = 0xFFFFFFFF;
  80              		.loc 1 77 0
  81 0052 4FF0FF33 		mov	r3, #-1
  82 0056 3B61     		str	r3, [r7, #16]
  78:..//common/src/lpc17xx_ssp.c **** 	prescale = 2;
  83              		.loc 1 78 0
  84 0058 4FF00203 		mov	r3, #2
  85 005c BB60     		str	r3, [r7, #8]
  79:..//common/src/lpc17xx_ssp.c **** 	while (cmp_clk > target_clock)
  86              		.loc 1 79 0
  87 005e 1BE0     		b	.L6
  88              	.L7:
  80:..//common/src/lpc17xx_ssp.c **** 	{
  81:..//common/src/lpc17xx_ssp.c **** 		cmp_clk = ssp_clk / ((cr0_div + 1) * prescale);
  89              		.loc 1 81 0
  90 0060 FB68     		ldr	r3, [r7, #12]
  91 0062 03F10103 		add	r3, r3, #1
  92 0066 BA68     		ldr	r2, [r7, #8]
  93 0068 02FB03F3 		mul	r3, r2, r3
  94 006c 7A69     		ldr	r2, [r7, #20]
  95 006e B2FBF3F3 		udiv	r3, r2, r3
  96 0072 3B61     		str	r3, [r7, #16]
  82:..//common/src/lpc17xx_ssp.c **** 		if (cmp_clk > target_clock)
  97              		.loc 1 82 0
  98 0074 3A69     		ldr	r2, [r7, #16]
  99 0076 3B68     		ldr	r3, [r7, #0]
 100 0078 9A42     		cmp	r2, r3
 101 007a 0DD9     		bls	.L6
  83:..//common/src/lpc17xx_ssp.c **** 		{
  84:..//common/src/lpc17xx_ssp.c **** 			cr0_div++;
 102              		.loc 1 84 0
 103 007c FB68     		ldr	r3, [r7, #12]
 104 007e 03F10103 		add	r3, r3, #1
 105 0082 FB60     		str	r3, [r7, #12]
  85:..//common/src/lpc17xx_ssp.c **** 			if (cr0_div > 0xFF)
 106              		.loc 1 85 0
 107 0084 FB68     		ldr	r3, [r7, #12]
 108 0086 FF2B     		cmp	r3, #255
 109 0088 06D9     		bls	.L6
  86:..//common/src/lpc17xx_ssp.c **** 			{
  87:..//common/src/lpc17xx_ssp.c **** 				cr0_div = 0;
 110              		.loc 1 87 0
 111 008a 4FF00003 		mov	r3, #0
 112 008e FB60     		str	r3, [r7, #12]
  88:..//common/src/lpc17xx_ssp.c **** 				prescale += 2;
 113              		.loc 1 88 0
 114 0090 BB68     		ldr	r3, [r7, #8]
 115 0092 03F10203 		add	r3, r3, #2
 116 0096 BB60     		str	r3, [r7, #8]
 117              	.L6:
 118              		.loc 1 79 0
 119 0098 3A69     		ldr	r2, [r7, #16]
 120 009a 3B68     		ldr	r3, [r7, #0]
 121 009c 9A42     		cmp	r2, r3
 122 009e DFD8     		bhi	.L7
  89:..//common/src/lpc17xx_ssp.c **** 			}
  90:..//common/src/lpc17xx_ssp.c **** 		}
  91:..//common/src/lpc17xx_ssp.c **** 	}
  92:..//common/src/lpc17xx_ssp.c **** 
  93:..//common/src/lpc17xx_ssp.c ****     /* Write computed prescaler and divider back to register */
  94:..//common/src/lpc17xx_ssp.c ****     SSPx->CR0 &= (~SSP_CR0_SCR(0xFF)) & SSP_CR0_BITMASK;
 123              		.loc 1 94 0
 124 00a0 7B68     		ldr	r3, [r7, #4]
 125 00a2 1B68     		ldr	r3, [r3, #0]
 126 00a4 03F0FF02 		and	r2, r3, #255
 127 00a8 7B68     		ldr	r3, [r7, #4]
 128 00aa 1A60     		str	r2, [r3, #0]
  95:..//common/src/lpc17xx_ssp.c ****     SSPx->CR0 |= (SSP_CR0_SCR(cr0_div)) & SSP_CR0_BITMASK;
 129              		.loc 1 95 0
 130 00ac 7B68     		ldr	r3, [r7, #4]
 131 00ae 1A68     		ldr	r2, [r3, #0]
 132 00b0 FB68     		ldr	r3, [r7, #12]
 133 00b2 4FEA0323 		lsl	r3, r3, #8
 134 00b6 4FEA0343 		lsl	r3, r3, #16
 135 00ba 4FEA1343 		lsr	r3, r3, #16
 136 00be 42EA0302 		orr	r2, r2, r3
 137 00c2 7B68     		ldr	r3, [r7, #4]
 138 00c4 1A60     		str	r2, [r3, #0]
  96:..//common/src/lpc17xx_ssp.c ****     SSPx->CPSR = prescale & SSP_CPSR_BITMASK;
 139              		.loc 1 96 0
 140 00c6 BB68     		ldr	r3, [r7, #8]
 141 00c8 03F0FF02 		and	r2, r3, #255
 142 00cc 7B68     		ldr	r3, [r7, #4]
 143 00ce 1A61     		str	r2, [r3, #16]
 144 00d0 00E0     		b	.L8
 145              	.L9:
 146              		.loc 1 70 0
 147 00d2 00BF     		nop
 148              	.L8:
  97:..//common/src/lpc17xx_ssp.c **** }
 149              		.loc 1 97 0
 150 00d4 07F11807 		add	r7, r7, #24
 151 00d8 BD46     		mov	sp, r7
 152 00da 80BD     		pop	{r7, pc}
 153              		.cfi_endproc
 154              	.LFE29:
 156              		.section	.text.SSP_Init,"ax",%progbits
 157              		.align	2
 158              		.global	SSP_Init
 159              		.thumb
 160              		.thumb_func
 162              	SSP_Init:
 163              	.LFB30:
  98:..//common/src/lpc17xx_ssp.c **** 
  99:..//common/src/lpc17xx_ssp.c **** /**
 100:..//common/src/lpc17xx_ssp.c ****  * @}
 101:..//common/src/lpc17xx_ssp.c ****  */
 102:..//common/src/lpc17xx_ssp.c **** 
 103:..//common/src/lpc17xx_ssp.c **** /* Public Functions ----------------------------------------------------------- */
 104:..//common/src/lpc17xx_ssp.c **** /** @addtogroup SSP_Public_Functions
 105:..//common/src/lpc17xx_ssp.c ****  * @{
 106:..//common/src/lpc17xx_ssp.c ****  */
 107:..//common/src/lpc17xx_ssp.c **** 
 108:..//common/src/lpc17xx_ssp.c **** /********************************************************************//**
 109:..//common/src/lpc17xx_ssp.c ****  * @brief		Initializes the SSPx peripheral according to the specified
 110:..//common/src/lpc17xx_ssp.c **** *               parameters in the SSP_ConfigStruct.
 111:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 112:..//common/src/lpc17xx_ssp.c ****  * 				 		- LPC_SSP0: SSP0 peripheral
 113:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 114:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSP_ConfigStruct Pointer to a SSP_CFG_Type structure
 115:..//common/src/lpc17xx_ssp.c **** *                    that contains the configuration information for the
 116:..//common/src/lpc17xx_ssp.c **** *                    specified SSP peripheral.
 117:..//common/src/lpc17xx_ssp.c ****  * @return 		None
 118:..//common/src/lpc17xx_ssp.c ****  *********************************************************************/
 119:..//common/src/lpc17xx_ssp.c **** void SSP_Init(LPC_SSP_TypeDef *SSPx, SSP_CFG_Type *SSP_ConfigStruct)
 120:..//common/src/lpc17xx_ssp.c **** {
 164              		.loc 1 120 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 16
 167              		@ frame_needed = 1, uses_anonymous_args = 0
 168 0000 80B5     		push	{r7, lr}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 8
 171 0002 84B0     		sub	sp, sp, #16
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 24
 174 0004 00AF     		add	r7, sp, #0
 175              		.cfi_offset 14, -4
 176              		.cfi_offset 7, -8
 177              	.LCFI5:
 178              		.cfi_def_cfa_register 7
 179 0006 7860     		str	r0, [r7, #4]
 180 0008 3960     		str	r1, [r7, #0]
 121:..//common/src/lpc17xx_ssp.c **** 	uint32_t tmp;
 122:..//common/src/lpc17xx_ssp.c **** 
 123:..//common/src/lpc17xx_ssp.c **** 	// // CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 124:..//common/src/lpc17xx_ssp.c **** 
 125:..//common/src/lpc17xx_ssp.c **** 	if(SSPx == LPC_SSP0) {
 181              		.loc 1 125 0
 182 000a 7A68     		ldr	r2, [r7, #4]
 183 000c 48F20003 		movw	r3, #:lower16:1074298880
 184 0010 C4F20803 		movt	r3, #:upper16:1074298880
 185 0014 9A42     		cmp	r2, r3
 186 0016 09D1     		bne	.L11
 126:..//common/src/lpc17xx_ssp.c **** 		/* Set up clock and power for SSP0 module */
 127:..//common/src/lpc17xx_ssp.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCSSP0, ENABLE);
 187              		.loc 1 127 0
 188 0018 4FF40010 		mov	r0, #2097152
 189 001c 4FF00101 		mov	r1, #1
 190 0020 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 191 0024 C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 192 0028 9847     		blx	r3
 193 002a 0FE0     		b	.L12
 194              	.L11:
 128:..//common/src/lpc17xx_ssp.c **** 	} else if(SSPx == LPC_SSP1) {
 195              		.loc 1 128 0
 196 002c 7A68     		ldr	r2, [r7, #4]
 197 002e 40F20003 		movw	r3, #:lower16:1073938432
 198 0032 C4F20303 		movt	r3, #:upper16:1073938432
 199 0036 9A42     		cmp	r2, r3
 200 0038 30D1     		bne	.L16
 129:..//common/src/lpc17xx_ssp.c **** 		/* Set up clock and power for SSP1 module */
 130:..//common/src/lpc17xx_ssp.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCSSP1, ENABLE);
 201              		.loc 1 130 0
 202 003a 4FF48060 		mov	r0, #1024
 203 003e 4FF00101 		mov	r1, #1
 204 0042 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 205 0046 C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 206 004a 9847     		blx	r3
 207              	.L12:
 131:..//common/src/lpc17xx_ssp.c **** 	} else {
 132:..//common/src/lpc17xx_ssp.c **** 		return;
 133:..//common/src/lpc17xx_ssp.c **** 	}
 134:..//common/src/lpc17xx_ssp.c **** 
 135:..//common/src/lpc17xx_ssp.c **** 	/* Configure SSP, interrupt is disable, LoopBack mode is disable,
 136:..//common/src/lpc17xx_ssp.c **** 	 * SSP is disable, Slave output is disable as default
 137:..//common/src/lpc17xx_ssp.c **** 	 */
 138:..//common/src/lpc17xx_ssp.c **** 	tmp = ((SSP_ConfigStruct->CPHA) | (SSP_ConfigStruct->CPOL) \
 208              		.loc 1 138 0
 209 004c 3B68     		ldr	r3, [r7, #0]
 210 004e 5A68     		ldr	r2, [r3, #4]
 211 0050 3B68     		ldr	r3, [r7, #0]
 212 0052 9B68     		ldr	r3, [r3, #8]
 139:..//common/src/lpc17xx_ssp.c **** 		| (SSP_ConfigStruct->FrameFormat) | (SSP_ConfigStruct->Databit))
 213              		.loc 1 139 0
 214 0054 42EA0302 		orr	r2, r2, r3
 215 0058 3B68     		ldr	r3, [r7, #0]
 216 005a 1B69     		ldr	r3, [r3, #16]
 217 005c 42EA0302 		orr	r2, r2, r3
 218 0060 3B68     		ldr	r3, [r7, #0]
 219 0062 1B68     		ldr	r3, [r3, #0]
 220              		.loc 1 138 0
 221 0064 42EA0303 		orr	r3, r2, r3
 222 0068 4FEA0343 		lsl	r3, r3, #16
 223 006c 4FEA1343 		lsr	r3, r3, #16
 224 0070 FB60     		str	r3, [r7, #12]
 140:..//common/src/lpc17xx_ssp.c **** 		& SSP_CR0_BITMASK;
 141:..//common/src/lpc17xx_ssp.c **** 	// write back to SSP control register
 142:..//common/src/lpc17xx_ssp.c **** 	SSPx->CR0 = tmp;
 225              		.loc 1 142 0
 226 0072 7B68     		ldr	r3, [r7, #4]
 227 0074 FA68     		ldr	r2, [r7, #12]
 228 0076 1A60     		str	r2, [r3, #0]
 143:..//common/src/lpc17xx_ssp.c **** 
 144:..//common/src/lpc17xx_ssp.c **** 	tmp = SSP_ConfigStruct->Mode & SSP_CR1_BITMASK;
 229              		.loc 1 144 0
 230 0078 3B68     		ldr	r3, [r7, #0]
 231 007a DB68     		ldr	r3, [r3, #12]
 232 007c 03F00F03 		and	r3, r3, #15
 233 0080 FB60     		str	r3, [r7, #12]
 145:..//common/src/lpc17xx_ssp.c **** 	// Write back to CR1
 146:..//common/src/lpc17xx_ssp.c **** 	SSPx->CR1 = tmp;
 234              		.loc 1 146 0
 235 0082 7B68     		ldr	r3, [r7, #4]
 236 0084 FA68     		ldr	r2, [r7, #12]
 237 0086 5A60     		str	r2, [r3, #4]
 147:..//common/src/lpc17xx_ssp.c **** 
 148:..//common/src/lpc17xx_ssp.c **** 	// Set clock rate for SSP peripheral
 149:..//common/src/lpc17xx_ssp.c **** 	setSSPclock(SSPx, SSP_ConfigStruct->ClockRate);
 238              		.loc 1 149 0
 239 0088 3B68     		ldr	r3, [r7, #0]
 240 008a 5B69     		ldr	r3, [r3, #20]
 241 008c 7868     		ldr	r0, [r7, #4]
 242 008e 1946     		mov	r1, r3
 243 0090 40F20003 		movw	r3, #:lower16:setSSPclock
 244 0094 C0F20003 		movt	r3, #:upper16:setSSPclock
 245 0098 9847     		blx	r3
 246 009a 00E0     		b	.L15
 247              	.L16:
 248              		.loc 1 132 0
 249 009c 00BF     		nop
 250              	.L15:
 150:..//common/src/lpc17xx_ssp.c **** }
 251              		.loc 1 150 0
 252 009e 07F11007 		add	r7, r7, #16
 253 00a2 BD46     		mov	sp, r7
 254 00a4 80BD     		pop	{r7, pc}
 255              		.cfi_endproc
 256              	.LFE30:
 258 00a6 00BF     		.section	.text.SSP_DeInit,"ax",%progbits
 259              		.align	2
 260              		.global	SSP_DeInit
 261              		.thumb
 262              		.thumb_func
 264              	SSP_DeInit:
 265              	.LFB31:
 151:..//common/src/lpc17xx_ssp.c **** 
 152:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 153:..//common/src/lpc17xx_ssp.c ****  * @brief		De-initializes the SSPx peripheral registers to their
 154:..//common/src/lpc17xx_ssp.c **** *                  default reset values.
 155:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 156:..//common/src/lpc17xx_ssp.c ****  * 				 		- LPC_SSP0: SSP0 peripheral
 157:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 158:..//common/src/lpc17xx_ssp.c ****  * @return 		None
 159:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 160:..//common/src/lpc17xx_ssp.c **** void SSP_DeInit(LPC_SSP_TypeDef* SSPx)
 161:..//common/src/lpc17xx_ssp.c **** {
 266              		.loc 1 161 0
 267              		.cfi_startproc
 268              		@ args = 0, pretend = 0, frame = 8
 269              		@ frame_needed = 1, uses_anonymous_args = 0
 270 0000 80B5     		push	{r7, lr}
 271              	.LCFI6:
 272              		.cfi_def_cfa_offset 8
 273 0002 82B0     		sub	sp, sp, #8
 274              	.LCFI7:
 275              		.cfi_def_cfa_offset 16
 276 0004 00AF     		add	r7, sp, #0
 277              		.cfi_offset 14, -4
 278              		.cfi_offset 7, -8
 279              	.LCFI8:
 280              		.cfi_def_cfa_register 7
 281 0006 7860     		str	r0, [r7, #4]
 162:..//common/src/lpc17xx_ssp.c **** 	// // CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 163:..//common/src/lpc17xx_ssp.c **** 
 164:..//common/src/lpc17xx_ssp.c **** 	if (SSPx == LPC_SSP0){
 282              		.loc 1 164 0
 283 0008 7A68     		ldr	r2, [r7, #4]
 284 000a 48F20003 		movw	r3, #:lower16:1074298880
 285 000e C4F20803 		movt	r3, #:upper16:1074298880
 286 0012 9A42     		cmp	r2, r3
 287 0014 09D1     		bne	.L18
 165:..//common/src/lpc17xx_ssp.c **** 		/* Set up clock and power for SSP0 module */
 166:..//common/src/lpc17xx_ssp.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCSSP0, DISABLE);
 288              		.loc 1 166 0
 289 0016 4FF40010 		mov	r0, #2097152
 290 001a 4FF00001 		mov	r1, #0
 291 001e 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 292 0022 C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 293 0026 9847     		blx	r3
 294 0028 0FE0     		b	.L20
 295              	.L18:
 167:..//common/src/lpc17xx_ssp.c **** 	} else if (SSPx == LPC_SSP1) {
 296              		.loc 1 167 0
 297 002a 7A68     		ldr	r2, [r7, #4]
 298 002c 40F20003 		movw	r3, #:lower16:1073938432
 299 0030 C4F20303 		movt	r3, #:upper16:1073938432
 300 0034 9A42     		cmp	r2, r3
 301 0036 08D1     		bne	.L20
 168:..//common/src/lpc17xx_ssp.c **** 		/* Set up clock and power for SSP1 module */
 169:..//common/src/lpc17xx_ssp.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCSSP1, DISABLE);
 302              		.loc 1 169 0
 303 0038 4FF48060 		mov	r0, #1024
 304 003c 4FF00001 		mov	r1, #0
 305 0040 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 306 0044 C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 307 0048 9847     		blx	r3
 308              	.L20:
 170:..//common/src/lpc17xx_ssp.c **** 	}
 171:..//common/src/lpc17xx_ssp.c **** }
 309              		.loc 1 171 0
 310 004a 07F10807 		add	r7, r7, #8
 311 004e BD46     		mov	sp, r7
 312 0050 80BD     		pop	{r7, pc}
 313              		.cfi_endproc
 314              	.LFE31:
 316 0052 00BF     		.section	.text.SSP_GetDataSize,"ax",%progbits
 317              		.align	2
 318              		.global	SSP_GetDataSize
 319              		.thumb
 320              		.thumb_func
 322              	SSP_GetDataSize:
 323              	.LFB32:
 172:..//common/src/lpc17xx_ssp.c **** 
 173:..//common/src/lpc17xx_ssp.c **** /*****************************************************************************//**
 174:..//common/src/lpc17xx_ssp.c **** * @brief		Get data size bit selected
 175:..//common/src/lpc17xx_ssp.c **** * @param[in]	SSPx pointer to LPC_SSP_TypeDef structure, should be:
 176:..//common/src/lpc17xx_ssp.c **** * 				- LPC_SSP0: SSP0 peripheral
 177:..//common/src/lpc17xx_ssp.c **** * 				- LPC_SSP1: SSP1 peripheral
 178:..//common/src/lpc17xx_ssp.c **** * @return		Data size, could be:
 179:..//common/src/lpc17xx_ssp.c **** *				- SSP_DATABIT_4: 4 bit transfer
 180:..//common/src/lpc17xx_ssp.c **** *				- SSP_DATABIT_5: 5 bit transfer
 181:..//common/src/lpc17xx_ssp.c **** *				...
 182:..//common/src/lpc17xx_ssp.c **** *				- SSP_DATABIT_16: 16 bit transfer
 183:..//common/src/lpc17xx_ssp.c **** *******************************************************************************/
 184:..//common/src/lpc17xx_ssp.c **** uint8_t SSP_GetDataSize(LPC_SSP_TypeDef* SSPx)
 185:..//common/src/lpc17xx_ssp.c **** {
 324              		.loc 1 185 0
 325              		.cfi_startproc
 326              		@ args = 0, pretend = 0, frame = 8
 327              		@ frame_needed = 1, uses_anonymous_args = 0
 328              		@ link register save eliminated.
 329 0000 80B4     		push	{r7}
 330              	.LCFI9:
 331              		.cfi_def_cfa_offset 4
 332 0002 83B0     		sub	sp, sp, #12
 333              	.LCFI10:
 334              		.cfi_def_cfa_offset 16
 335 0004 00AF     		add	r7, sp, #0
 336              		.cfi_offset 7, -4
 337              	.LCFI11:
 338              		.cfi_def_cfa_register 7
 339 0006 7860     		str	r0, [r7, #4]
 186:..//common/src/lpc17xx_ssp.c **** 	// // CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 187:..//common/src/lpc17xx_ssp.c **** 	return (SSPx->CR0 & (0xF));
 340              		.loc 1 187 0
 341 0008 7B68     		ldr	r3, [r7, #4]
 342 000a 1B68     		ldr	r3, [r3, #0]
 343 000c DBB2     		uxtb	r3, r3
 344 000e 03F00F03 		and	r3, r3, #15
 188:..//common/src/lpc17xx_ssp.c **** }
 345              		.loc 1 188 0
 346 0012 1846     		mov	r0, r3
 347 0014 07F10C07 		add	r7, r7, #12
 348 0018 BD46     		mov	sp, r7
 349 001a 80BC     		pop	{r7}
 350 001c 7047     		bx	lr
 351              		.cfi_endproc
 352              	.LFE32:
 354 001e 00BF     		.section	.text.SSP_ConfigStructInit,"ax",%progbits
 355              		.align	2
 356              		.global	SSP_ConfigStructInit
 357              		.thumb
 358              		.thumb_func
 360              	SSP_ConfigStructInit:
 361              	.LFB33:
 189:..//common/src/lpc17xx_ssp.c **** 
 190:..//common/src/lpc17xx_ssp.c **** /*****************************************************************************//**
 191:..//common/src/lpc17xx_ssp.c **** * @brief		Fills each SSP_InitStruct member with its default value:
 192:..//common/src/lpc17xx_ssp.c **** * 				- CPHA = SSP_CPHA_FIRST
 193:..//common/src/lpc17xx_ssp.c **** * 				- CPOL = SSP_CPOL_HI
 194:..//common/src/lpc17xx_ssp.c **** * 				- ClockRate = 1000000
 195:..//common/src/lpc17xx_ssp.c **** * 				- Databit = SSP_DATABIT_8
 196:..//common/src/lpc17xx_ssp.c **** * 				- Mode = SSP_MASTER_MODE
 197:..//common/src/lpc17xx_ssp.c **** * 				- FrameFormat = SSP_FRAME_SSP
 198:..//common/src/lpc17xx_ssp.c **** * @param[in]	SSP_InitStruct Pointer to a SSP_CFG_Type structure
 199:..//common/src/lpc17xx_ssp.c **** *                    which will be initialized.
 200:..//common/src/lpc17xx_ssp.c **** * @return		None
 201:..//common/src/lpc17xx_ssp.c **** *******************************************************************************/
 202:..//common/src/lpc17xx_ssp.c **** void SSP_ConfigStructInit(SSP_CFG_Type *SSP_InitStruct)
 203:..//common/src/lpc17xx_ssp.c **** {
 362              		.loc 1 203 0
 363              		.cfi_startproc
 364              		@ args = 0, pretend = 0, frame = 8
 365              		@ frame_needed = 1, uses_anonymous_args = 0
 366              		@ link register save eliminated.
 367 0000 80B4     		push	{r7}
 368              	.LCFI12:
 369              		.cfi_def_cfa_offset 4
 370 0002 83B0     		sub	sp, sp, #12
 371              	.LCFI13:
 372              		.cfi_def_cfa_offset 16
 373 0004 00AF     		add	r7, sp, #0
 374              		.cfi_offset 7, -4
 375              	.LCFI14:
 376              		.cfi_def_cfa_register 7
 377 0006 7860     		str	r0, [r7, #4]
 204:..//common/src/lpc17xx_ssp.c **** 	SSP_InitStruct->CPHA = SSP_CPHA_SECOND;
 378              		.loc 1 204 0
 379 0008 7B68     		ldr	r3, [r7, #4]
 380 000a 4FF08002 		mov	r2, #128
 381 000e 5A60     		str	r2, [r3, #4]
 205:..//common/src/lpc17xx_ssp.c **** 	SSP_InitStruct->CPOL = SSP_CPOL_LO;
 382              		.loc 1 205 0
 383 0010 7B68     		ldr	r3, [r7, #4]
 384 0012 4FF04002 		mov	r2, #64
 385 0016 9A60     		str	r2, [r3, #8]
 206:..//common/src/lpc17xx_ssp.c **** 	SSP_InitStruct->ClockRate = 2000000;
 386              		.loc 1 206 0
 387 0018 7A68     		ldr	r2, [r7, #4]
 388 001a 48F28043 		movw	r3, #:lower16:2000000
 389 001e C0F21E03 		movt	r3, #:upper16:2000000
 390 0022 5361     		str	r3, [r2, #20]
 207:..//common/src/lpc17xx_ssp.c **** 	SSP_InitStruct->Databit = SSP_DATABIT_8;
 391              		.loc 1 207 0
 392 0024 7B68     		ldr	r3, [r7, #4]
 393 0026 4FF00702 		mov	r2, #7
 394 002a 1A60     		str	r2, [r3, #0]
 208:..//common/src/lpc17xx_ssp.c **** 	SSP_InitStruct->Mode = SSP_MASTER_MODE;
 395              		.loc 1 208 0
 396 002c 7B68     		ldr	r3, [r7, #4]
 397 002e 4FF00002 		mov	r2, #0
 398 0032 DA60     		str	r2, [r3, #12]
 209:..//common/src/lpc17xx_ssp.c **** 	SSP_InitStruct->FrameFormat = SSP_FRAME_SPI;
 399              		.loc 1 209 0
 400 0034 7B68     		ldr	r3, [r7, #4]
 401 0036 4FF00002 		mov	r2, #0
 402 003a 1A61     		str	r2, [r3, #16]
 210:..//common/src/lpc17xx_ssp.c **** }
 403              		.loc 1 210 0
 404 003c 07F10C07 		add	r7, r7, #12
 405 0040 BD46     		mov	sp, r7
 406 0042 80BC     		pop	{r7}
 407 0044 7047     		bx	lr
 408              		.cfi_endproc
 409              	.LFE33:
 411 0046 00BF     		.section	.text.SSP_Cmd,"ax",%progbits
 412              		.align	2
 413              		.global	SSP_Cmd
 414              		.thumb
 415              		.thumb_func
 417              	SSP_Cmd:
 418              	.LFB34:
 211:..//common/src/lpc17xx_ssp.c **** 
 212:..//common/src/lpc17xx_ssp.c **** 
 213:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 214:..//common/src/lpc17xx_ssp.c ****  * @brief		Enable or disable SSP peripheral's operation
 215:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral, should be:
 216:..//common/src/lpc17xx_ssp.c ****  * 				- LPC_SSP0: SSP0 peripheral
 217:..//common/src/lpc17xx_ssp.c ****  * 				- LPC_SSP1: SSP1 peripheral
 218:..//common/src/lpc17xx_ssp.c ****  * @param[in]	NewState New State of SSPx peripheral's operation
 219:..//common/src/lpc17xx_ssp.c ****  * @return 		none
 220:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 221:..//common/src/lpc17xx_ssp.c **** void SSP_Cmd(LPC_SSP_TypeDef* SSPx, FunctionalState NewState)
 222:..//common/src/lpc17xx_ssp.c **** {
 419              		.loc 1 222 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 0000 80B4     		push	{r7}
 425              	.LCFI15:
 426              		.cfi_def_cfa_offset 4
 427 0002 83B0     		sub	sp, sp, #12
 428              	.LCFI16:
 429              		.cfi_def_cfa_offset 16
 430 0004 00AF     		add	r7, sp, #0
 431              		.cfi_offset 7, -4
 432              	.LCFI17:
 433              		.cfi_def_cfa_register 7
 434 0006 7860     		str	r0, [r7, #4]
 435 0008 0B46     		mov	r3, r1
 436 000a FB70     		strb	r3, [r7, #3]
 223:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 224:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_FUNCTIONALSTATE(NewState));
 225:..//common/src/lpc17xx_ssp.c **** 
 226:..//common/src/lpc17xx_ssp.c **** 	if (NewState == ENABLE)
 437              		.loc 1 226 0
 438 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 439 000e 012B     		cmp	r3, #1
 440 0010 06D1     		bne	.L26
 227:..//common/src/lpc17xx_ssp.c **** 	{
 228:..//common/src/lpc17xx_ssp.c **** 		SSPx->CR1 |= SSP_CR1_SSP_EN;
 441              		.loc 1 228 0
 442 0012 7B68     		ldr	r3, [r7, #4]
 443 0014 5B68     		ldr	r3, [r3, #4]
 444 0016 43F00202 		orr	r2, r3, #2
 445 001a 7B68     		ldr	r3, [r7, #4]
 446 001c 5A60     		str	r2, [r3, #4]
 447 001e 05E0     		b	.L28
 448              	.L26:
 229:..//common/src/lpc17xx_ssp.c **** 	}
 230:..//common/src/lpc17xx_ssp.c **** 	else
 231:..//common/src/lpc17xx_ssp.c **** 	{
 232:..//common/src/lpc17xx_ssp.c **** 		SSPx->CR1 &= (~SSP_CR1_SSP_EN) & SSP_CR1_BITMASK;
 449              		.loc 1 232 0
 450 0020 7B68     		ldr	r3, [r7, #4]
 451 0022 5B68     		ldr	r3, [r3, #4]
 452 0024 03F00D02 		and	r2, r3, #13
 453 0028 7B68     		ldr	r3, [r7, #4]
 454 002a 5A60     		str	r2, [r3, #4]
 455              	.L28:
 233:..//common/src/lpc17xx_ssp.c **** 	}
 234:..//common/src/lpc17xx_ssp.c **** }
 456              		.loc 1 234 0
 457 002c 07F10C07 		add	r7, r7, #12
 458 0030 BD46     		mov	sp, r7
 459 0032 80BC     		pop	{r7}
 460 0034 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE34:
 464 0036 00BF     		.section	.text.SSP_LoopBackCmd,"ax",%progbits
 465              		.align	2
 466              		.global	SSP_LoopBackCmd
 467              		.thumb
 468              		.thumb_func
 470              	SSP_LoopBackCmd:
 471              	.LFB35:
 235:..//common/src/lpc17xx_ssp.c **** 
 236:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 237:..//common/src/lpc17xx_ssp.c ****  * @brief		Enable or disable Loop Back mode function in SSP peripheral
 238:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 239:..//common/src/lpc17xx_ssp.c ****  *  					- LPC_SSP0: SSP0 peripheral
 240:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 241:..//common/src/lpc17xx_ssp.c ****  * @param[in]	NewState	New State of Loop Back mode, should be:
 242:..//common/src/lpc17xx_ssp.c ****  * 							- ENABLE: Enable this function
 243:..//common/src/lpc17xx_ssp.c ****  * 							- DISABLE: Disable this function
 244:..//common/src/lpc17xx_ssp.c ****  * @return 		None
 245:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 246:..//common/src/lpc17xx_ssp.c **** void SSP_LoopBackCmd(LPC_SSP_TypeDef* SSPx, FunctionalState NewState)
 247:..//common/src/lpc17xx_ssp.c **** {
 472              		.loc 1 247 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 8
 475              		@ frame_needed = 1, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477 0000 80B4     		push	{r7}
 478              	.LCFI18:
 479              		.cfi_def_cfa_offset 4
 480 0002 83B0     		sub	sp, sp, #12
 481              	.LCFI19:
 482              		.cfi_def_cfa_offset 16
 483 0004 00AF     		add	r7, sp, #0
 484              		.cfi_offset 7, -4
 485              	.LCFI20:
 486              		.cfi_def_cfa_register 7
 487 0006 7860     		str	r0, [r7, #4]
 488 0008 0B46     		mov	r3, r1
 489 000a FB70     		strb	r3, [r7, #3]
 248:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 249:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_FUNCTIONALSTATE(NewState));
 250:..//common/src/lpc17xx_ssp.c **** 
 251:..//common/src/lpc17xx_ssp.c **** 	if (NewState == ENABLE)
 490              		.loc 1 251 0
 491 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 492 000e 012B     		cmp	r3, #1
 493 0010 06D1     		bne	.L30
 252:..//common/src/lpc17xx_ssp.c **** 	{
 253:..//common/src/lpc17xx_ssp.c **** 		SSPx->CR1 |= SSP_CR1_LBM_EN;
 494              		.loc 1 253 0
 495 0012 7B68     		ldr	r3, [r7, #4]
 496 0014 5B68     		ldr	r3, [r3, #4]
 497 0016 43F00102 		orr	r2, r3, #1
 498 001a 7B68     		ldr	r3, [r7, #4]
 499 001c 5A60     		str	r2, [r3, #4]
 500 001e 05E0     		b	.L32
 501              	.L30:
 254:..//common/src/lpc17xx_ssp.c **** 	}
 255:..//common/src/lpc17xx_ssp.c **** 	else
 256:..//common/src/lpc17xx_ssp.c **** 	{
 257:..//common/src/lpc17xx_ssp.c **** 		SSPx->CR1 &= (~SSP_CR1_LBM_EN) & SSP_CR1_BITMASK;
 502              		.loc 1 257 0
 503 0020 7B68     		ldr	r3, [r7, #4]
 504 0022 5B68     		ldr	r3, [r3, #4]
 505 0024 03F00E02 		and	r2, r3, #14
 506 0028 7B68     		ldr	r3, [r7, #4]
 507 002a 5A60     		str	r2, [r3, #4]
 508              	.L32:
 258:..//common/src/lpc17xx_ssp.c **** 	}
 259:..//common/src/lpc17xx_ssp.c **** }
 509              		.loc 1 259 0
 510 002c 07F10C07 		add	r7, r7, #12
 511 0030 BD46     		mov	sp, r7
 512 0032 80BC     		pop	{r7}
 513 0034 7047     		bx	lr
 514              		.cfi_endproc
 515              	.LFE35:
 517 0036 00BF     		.section	.text.SSP_SlaveOutputCmd,"ax",%progbits
 518              		.align	2
 519              		.global	SSP_SlaveOutputCmd
 520              		.thumb
 521              		.thumb_func
 523              	SSP_SlaveOutputCmd:
 524              	.LFB36:
 260:..//common/src/lpc17xx_ssp.c **** 
 261:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 262:..//common/src/lpc17xx_ssp.c ****  * @brief		Enable or disable Slave Output function in SSP peripheral
 263:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 264:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP0: SSP0 peripheral
 265:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 266:..//common/src/lpc17xx_ssp.c ****  * @param[in]	NewState	New State of Slave Output function, should be:
 267:..//common/src/lpc17xx_ssp.c ****  * 							- ENABLE: Slave Output in normal operation
 268:..//common/src/lpc17xx_ssp.c ****  * 							- DISABLE: Slave Output is disabled. This blocks
 269:..//common/src/lpc17xx_ssp.c ****  * 							SSP controller from driving the transmit data
 270:..//common/src/lpc17xx_ssp.c ****  * 							line (MISO)
 271:..//common/src/lpc17xx_ssp.c ****  * Note: 		This function is available when SSP peripheral in Slave mode
 272:..//common/src/lpc17xx_ssp.c ****  * @return 		None
 273:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 274:..//common/src/lpc17xx_ssp.c **** void SSP_SlaveOutputCmd(LPC_SSP_TypeDef* SSPx, FunctionalState NewState)
 275:..//common/src/lpc17xx_ssp.c **** {
 525              		.loc 1 275 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 8
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530 0000 80B4     		push	{r7}
 531              	.LCFI21:
 532              		.cfi_def_cfa_offset 4
 533 0002 83B0     		sub	sp, sp, #12
 534              	.LCFI22:
 535              		.cfi_def_cfa_offset 16
 536 0004 00AF     		add	r7, sp, #0
 537              		.cfi_offset 7, -4
 538              	.LCFI23:
 539              		.cfi_def_cfa_register 7
 540 0006 7860     		str	r0, [r7, #4]
 541 0008 0B46     		mov	r3, r1
 542 000a FB70     		strb	r3, [r7, #3]
 276:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 277:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_FUNCTIONALSTATE(NewState));
 278:..//common/src/lpc17xx_ssp.c **** 
 279:..//common/src/lpc17xx_ssp.c **** 	if (NewState == ENABLE)
 543              		.loc 1 279 0
 544 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 545 000e 012B     		cmp	r3, #1
 546 0010 06D1     		bne	.L34
 280:..//common/src/lpc17xx_ssp.c **** 	{
 281:..//common/src/lpc17xx_ssp.c **** 		SSPx->CR1 &= (~SSP_CR1_SO_DISABLE) & SSP_CR1_BITMASK;
 547              		.loc 1 281 0
 548 0012 7B68     		ldr	r3, [r7, #4]
 549 0014 5B68     		ldr	r3, [r3, #4]
 550 0016 03F00702 		and	r2, r3, #7
 551 001a 7B68     		ldr	r3, [r7, #4]
 552 001c 5A60     		str	r2, [r3, #4]
 553 001e 05E0     		b	.L36
 554              	.L34:
 282:..//common/src/lpc17xx_ssp.c **** 	}
 283:..//common/src/lpc17xx_ssp.c **** 	else
 284:..//common/src/lpc17xx_ssp.c **** 	{
 285:..//common/src/lpc17xx_ssp.c **** 		SSPx->CR1 |= SSP_CR1_SO_DISABLE;
 555              		.loc 1 285 0
 556 0020 7B68     		ldr	r3, [r7, #4]
 557 0022 5B68     		ldr	r3, [r3, #4]
 558 0024 43F00802 		orr	r2, r3, #8
 559 0028 7B68     		ldr	r3, [r7, #4]
 560 002a 5A60     		str	r2, [r3, #4]
 561              	.L36:
 286:..//common/src/lpc17xx_ssp.c **** 	}
 287:..//common/src/lpc17xx_ssp.c **** }
 562              		.loc 1 287 0
 563 002c 07F10C07 		add	r7, r7, #12
 564 0030 BD46     		mov	sp, r7
 565 0032 80BC     		pop	{r7}
 566 0034 7047     		bx	lr
 567              		.cfi_endproc
 568              	.LFE36:
 570 0036 00BF     		.section	.text.SSP_SendData,"ax",%progbits
 571              		.align	2
 572              		.global	SSP_SendData
 573              		.thumb
 574              		.thumb_func
 576              	SSP_SendData:
 577              	.LFB37:
 288:..//common/src/lpc17xx_ssp.c **** 
 289:..//common/src/lpc17xx_ssp.c **** 
 290:..//common/src/lpc17xx_ssp.c **** 
 291:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 292:..//common/src/lpc17xx_ssp.c ****  * @brief		Transmit a single data through SSPx peripheral
 293:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 294:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP0: SSP0 peripheral
 295:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 296:..//common/src/lpc17xx_ssp.c ****  * @param[in]	Data	Data to transmit (must be 16 or 8-bit long,
 297:..//common/src/lpc17xx_ssp.c ****  * 						this depend on SSP data bit number configured)
 298:..//common/src/lpc17xx_ssp.c ****  * @return 		none
 299:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 300:..//common/src/lpc17xx_ssp.c **** void SSP_SendData(LPC_SSP_TypeDef* SSPx, uint16_t Data)
 301:..//common/src/lpc17xx_ssp.c **** {
 578              		.loc 1 301 0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 8
 581              		@ frame_needed = 1, uses_anonymous_args = 0
 582              		@ link register save eliminated.
 583 0000 80B4     		push	{r7}
 584              	.LCFI24:
 585              		.cfi_def_cfa_offset 4
 586 0002 83B0     		sub	sp, sp, #12
 587              	.LCFI25:
 588              		.cfi_def_cfa_offset 16
 589 0004 00AF     		add	r7, sp, #0
 590              		.cfi_offset 7, -4
 591              	.LCFI26:
 592              		.cfi_def_cfa_register 7
 593 0006 7860     		str	r0, [r7, #4]
 594 0008 0B46     		mov	r3, r1
 595 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 302:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 303:..//common/src/lpc17xx_ssp.c **** 
 304:..//common/src/lpc17xx_ssp.c **** 	SSPx->DR = SSP_DR_BITMASK(Data);
 596              		.loc 1 304 0
 597 000c 7A88     		ldrh	r2, [r7, #2]
 598 000e 7B68     		ldr	r3, [r7, #4]
 599 0010 9A60     		str	r2, [r3, #8]
 305:..//common/src/lpc17xx_ssp.c **** }
 600              		.loc 1 305 0
 601 0012 07F10C07 		add	r7, r7, #12
 602 0016 BD46     		mov	sp, r7
 603 0018 80BC     		pop	{r7}
 604 001a 7047     		bx	lr
 605              		.cfi_endproc
 606              	.LFE37:
 608              		.section	.text.SSP_ReceiveData,"ax",%progbits
 609              		.align	2
 610              		.global	SSP_ReceiveData
 611              		.thumb
 612              		.thumb_func
 614              	SSP_ReceiveData:
 615              	.LFB38:
 306:..//common/src/lpc17xx_ssp.c **** 
 307:..//common/src/lpc17xx_ssp.c **** 
 308:..//common/src/lpc17xx_ssp.c **** 
 309:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 310:..//common/src/lpc17xx_ssp.c ****  * @brief		Receive a single data from SSPx peripheral
 311:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be
 312:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP0: SSP0 peripheral
 313:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 314:..//common/src/lpc17xx_ssp.c ****  * @return 		Data received (16-bit long)
 315:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 316:..//common/src/lpc17xx_ssp.c **** uint16_t SSP_ReceiveData(LPC_SSP_TypeDef* SSPx)
 317:..//common/src/lpc17xx_ssp.c **** {
 616              		.loc 1 317 0
 617              		.cfi_startproc
 618              		@ args = 0, pretend = 0, frame = 8
 619              		@ frame_needed = 1, uses_anonymous_args = 0
 620              		@ link register save eliminated.
 621 0000 80B4     		push	{r7}
 622              	.LCFI27:
 623              		.cfi_def_cfa_offset 4
 624 0002 83B0     		sub	sp, sp, #12
 625              	.LCFI28:
 626              		.cfi_def_cfa_offset 16
 627 0004 00AF     		add	r7, sp, #0
 628              		.cfi_offset 7, -4
 629              	.LCFI29:
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 318:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 319:..//common/src/lpc17xx_ssp.c **** 
 320:..//common/src/lpc17xx_ssp.c **** 	return ((uint16_t) (SSP_DR_BITMASK(SSPx->DR)));
 632              		.loc 1 320 0
 633 0008 7B68     		ldr	r3, [r7, #4]
 634 000a 9B68     		ldr	r3, [r3, #8]
 635 000c 9BB2     		uxth	r3, r3
 321:..//common/src/lpc17xx_ssp.c **** }
 636              		.loc 1 321 0
 637 000e 1846     		mov	r0, r3
 638 0010 07F10C07 		add	r7, r7, #12
 639 0014 BD46     		mov	sp, r7
 640 0016 80BC     		pop	{r7}
 641 0018 7047     		bx	lr
 642              		.cfi_endproc
 643              	.LFE38:
 645 001a 00BF     		.section	.text.SSP_ReadWrite,"ax",%progbits
 646              		.align	2
 647              		.global	SSP_ReadWrite
 648              		.thumb
 649              		.thumb_func
 651              	SSP_ReadWrite:
 652              	.LFB39:
 322:..//common/src/lpc17xx_ssp.c **** 
 323:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 324:..//common/src/lpc17xx_ssp.c ****  * @brief 		SSP Read write data function
 325:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx 	Pointer to SSP peripheral, should be
 326:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP0: SSP0 peripheral
 327:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 328:..//common/src/lpc17xx_ssp.c ****  * @param[in]	dataCfg	Pointer to a SSP_DATA_SETUP_Type structure that
 329:..//common/src/lpc17xx_ssp.c ****  * 						contains specified information about transmit
 330:..//common/src/lpc17xx_ssp.c ****  * 						data configuration.
 331:..//common/src/lpc17xx_ssp.c ****  * @param[in]	xfType	Transfer type, should be:
 332:..//common/src/lpc17xx_ssp.c ****  * 						- SSP_TRANSFER_POLLING: Polling mode
 333:..//common/src/lpc17xx_ssp.c ****  * 						- SSP_TRANSFER_INTERRUPT: Interrupt mode
 334:..//common/src/lpc17xx_ssp.c ****  * @return 		Actual Data length has been transferred in polling mode.
 335:..//common/src/lpc17xx_ssp.c ****  * 				In interrupt mode, always return (0)
 336:..//common/src/lpc17xx_ssp.c ****  * 				Return (-1) if error.
 337:..//common/src/lpc17xx_ssp.c ****  * Note: This function can be used in both master and slave mode.
 338:..//common/src/lpc17xx_ssp.c ****  ***********************************************************************/
 339:..//common/src/lpc17xx_ssp.c **** int32_t SSP_ReadWrite (LPC_SSP_TypeDef *SSPx, SSP_DATA_SETUP_Type *dataCfg, \
 340:..//common/src/lpc17xx_ssp.c **** 						SSP_TRANSFER_Type xfType)
 341:..//common/src/lpc17xx_ssp.c **** {
 653              		.loc 1 341 0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 48
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657 0000 80B5     		push	{r7, lr}
 658              	.LCFI30:
 659              		.cfi_def_cfa_offset 8
 660 0002 8CB0     		sub	sp, sp, #48
 661              	.LCFI31:
 662              		.cfi_def_cfa_offset 56
 663 0004 00AF     		add	r7, sp, #0
 664              		.cfi_offset 14, -4
 665              		.cfi_offset 7, -8
 666              	.LCFI32:
 667              		.cfi_def_cfa_register 7
 668 0006 F860     		str	r0, [r7, #12]
 669 0008 B960     		str	r1, [r7, #8]
 670 000a 1346     		mov	r3, r2
 671 000c FB71     		strb	r3, [r7, #7]
 342:..//common/src/lpc17xx_ssp.c **** 	uint8_t *rdata8;
 343:..//common/src/lpc17xx_ssp.c ****     uint8_t *wdata8;
 344:..//common/src/lpc17xx_ssp.c **** 	uint16_t *rdata16;
 345:..//common/src/lpc17xx_ssp.c ****     uint16_t *wdata16;
 346:..//common/src/lpc17xx_ssp.c ****     uint32_t stat;
 347:..//common/src/lpc17xx_ssp.c ****     uint32_t tmp;
 348:..//common/src/lpc17xx_ssp.c ****     int32_t dataword;
 349:..//common/src/lpc17xx_ssp.c **** 
 350:..//common/src/lpc17xx_ssp.c ****     dataCfg->rx_cnt = 0;
 672              		.loc 1 350 0
 673 000e BB68     		ldr	r3, [r7, #8]
 674 0010 4FF00002 		mov	r2, #0
 675 0014 DA60     		str	r2, [r3, #12]
 351:..//common/src/lpc17xx_ssp.c ****     dataCfg->tx_cnt = 0;
 676              		.loc 1 351 0
 677 0016 BB68     		ldr	r3, [r7, #8]
 678 0018 4FF00002 		mov	r2, #0
 679 001c 5A60     		str	r2, [r3, #4]
 352:..//common/src/lpc17xx_ssp.c ****     dataCfg->status = 0;
 680              		.loc 1 352 0
 681 001e BB68     		ldr	r3, [r7, #8]
 682 0020 4FF00002 		mov	r2, #0
 683 0024 5A61     		str	r2, [r3, #20]
 353:..//common/src/lpc17xx_ssp.c **** 
 354:..//common/src/lpc17xx_ssp.c **** 
 355:..//common/src/lpc17xx_ssp.c **** 	/* Clear all remaining data in RX FIFO */
 356:..//common/src/lpc17xx_ssp.c **** 	while (SSPx->SR & SSP_SR_RNE){
 684              		.loc 1 356 0
 685 0026 07E0     		b	.L42
 686              	.L43:
 357:..//common/src/lpc17xx_ssp.c **** 		tmp = (uint32_t) SSP_ReceiveData(SSPx);
 687              		.loc 1 357 0
 688 0028 F868     		ldr	r0, [r7, #12]
 689 002a 40F20003 		movw	r3, #:lower16:SSP_ReceiveData
 690 002e C0F20003 		movt	r3, #:upper16:SSP_ReceiveData
 691 0032 9847     		blx	r3
 692 0034 0346     		mov	r3, r0
 693 0036 BB62     		str	r3, [r7, #40]
 694              	.L42:
 695              		.loc 1 356 0
 696 0038 FB68     		ldr	r3, [r7, #12]
 697 003a DB68     		ldr	r3, [r3, #12]
 698 003c 03F00403 		and	r3, r3, #4
 699 0040 002B     		cmp	r3, #0
 700 0042 F1D1     		bne	.L43
 358:..//common/src/lpc17xx_ssp.c **** 	}
 359:..//common/src/lpc17xx_ssp.c **** 
 360:..//common/src/lpc17xx_ssp.c **** 	// Clear status
 361:..//common/src/lpc17xx_ssp.c **** 	SSPx->ICR = SSP_ICR_BITMASK;
 701              		.loc 1 361 0
 702 0044 FB68     		ldr	r3, [r7, #12]
 703 0046 4FF00302 		mov	r2, #3
 704 004a 1A62     		str	r2, [r3, #32]
 362:..//common/src/lpc17xx_ssp.c **** 	if(SSP_GetDataSize(SSPx)>8)
 705              		.loc 1 362 0
 706 004c F868     		ldr	r0, [r7, #12]
 707 004e 40F20003 		movw	r3, #:lower16:SSP_GetDataSize
 708 0052 C0F20003 		movt	r3, #:upper16:SSP_GetDataSize
 709 0056 9847     		blx	r3
 710 0058 0346     		mov	r3, r0
 711 005a 082B     		cmp	r3, #8
 712 005c 03D9     		bls	.L44
 363:..//common/src/lpc17xx_ssp.c **** 		dataword = 1;
 713              		.loc 1 363 0
 714 005e 4FF00103 		mov	r3, #1
 715 0062 FB62     		str	r3, [r7, #44]
 716 0064 02E0     		b	.L45
 717              	.L44:
 364:..//common/src/lpc17xx_ssp.c **** 	else dataword = 0;
 718              		.loc 1 364 0
 719 0066 4FF00003 		mov	r3, #0
 720 006a FB62     		str	r3, [r7, #44]
 721              	.L45:
 365:..//common/src/lpc17xx_ssp.c **** 
 366:..//common/src/lpc17xx_ssp.c **** 	// Polling mode ----------------------------------------------------------------------
 367:..//common/src/lpc17xx_ssp.c **** 	if (xfType == SSP_TRANSFER_POLLING){
 722              		.loc 1 367 0
 723 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 724 006e 002B     		cmp	r3, #0
 725 0070 40F0DE80 		bne	.L46
 368:..//common/src/lpc17xx_ssp.c **** 		if (dataword == 0){
 726              		.loc 1 368 0
 727 0074 FB6A     		ldr	r3, [r7, #44]
 728 0076 002B     		cmp	r3, #0
 729 0078 06D1     		bne	.L47
 369:..//common/src/lpc17xx_ssp.c **** 			rdata8 = (uint8_t *)dataCfg->rx_data;
 730              		.loc 1 369 0
 731 007a BB68     		ldr	r3, [r7, #8]
 732 007c 9B68     		ldr	r3, [r3, #8]
 733 007e 7B61     		str	r3, [r7, #20]
 370:..//common/src/lpc17xx_ssp.c **** 			wdata8 = (uint8_t *)dataCfg->tx_data;
 734              		.loc 1 370 0
 735 0080 BB68     		ldr	r3, [r7, #8]
 736 0082 1B68     		ldr	r3, [r3, #0]
 737 0084 BB61     		str	r3, [r7, #24]
 371:..//common/src/lpc17xx_ssp.c **** 		} else {
 372:..//common/src/lpc17xx_ssp.c **** 			rdata16 = (uint16_t *)dataCfg->rx_data;
 373:..//common/src/lpc17xx_ssp.c **** 			wdata16 = (uint16_t *)dataCfg->tx_data;
 374:..//common/src/lpc17xx_ssp.c **** 		}
 375:..//common/src/lpc17xx_ssp.c **** 		while ((dataCfg->tx_cnt != dataCfg->length) || (dataCfg->rx_cnt != dataCfg->length)){
 738              		.loc 1 375 0
 739 0086 B0E0     		b	.L49
 740              	.L47:
 741              		.loc 1 372 0
 742 0088 BB68     		ldr	r3, [r7, #8]
 743 008a 9B68     		ldr	r3, [r3, #8]
 744 008c FB61     		str	r3, [r7, #28]
 745              		.loc 1 373 0
 746 008e BB68     		ldr	r3, [r7, #8]
 747 0090 1B68     		ldr	r3, [r3, #0]
 748 0092 3B62     		str	r3, [r7, #32]
 749              		.loc 1 375 0
 750 0094 A9E0     		b	.L49
 751              	.L62:
 376:..//common/src/lpc17xx_ssp.c **** 			if ((SSPx->SR & SSP_SR_TNF) && (dataCfg->tx_cnt != dataCfg->length)){
 752              		.loc 1 376 0
 753 0096 FB68     		ldr	r3, [r7, #12]
 754 0098 DB68     		ldr	r3, [r3, #12]
 755 009a 03F00203 		and	r3, r3, #2
 756 009e 002B     		cmp	r3, #0
 757 00a0 54D0     		beq	.L50
 758 00a2 BB68     		ldr	r3, [r7, #8]
 759 00a4 5A68     		ldr	r2, [r3, #4]
 760 00a6 BB68     		ldr	r3, [r7, #8]
 761 00a8 1B69     		ldr	r3, [r3, #16]
 762 00aa 9A42     		cmp	r2, r3
 763 00ac 4ED0     		beq	.L50
 377:..//common/src/lpc17xx_ssp.c **** 				// Write data to buffer
 378:..//common/src/lpc17xx_ssp.c **** 				if(dataCfg->tx_data == NULL){
 764              		.loc 1 378 0
 765 00ae BB68     		ldr	r3, [r7, #8]
 766 00b0 1B68     		ldr	r3, [r3, #0]
 767 00b2 002B     		cmp	r3, #0
 768 00b4 20D1     		bne	.L51
 379:..//common/src/lpc17xx_ssp.c **** 					if (dataword == 0){
 769              		.loc 1 379 0
 770 00b6 FB6A     		ldr	r3, [r7, #44]
 771 00b8 002B     		cmp	r3, #0
 772 00ba 0ED1     		bne	.L52
 380:..//common/src/lpc17xx_ssp.c **** 						SSP_SendData(SSPx, 0xFF);
 773              		.loc 1 380 0
 774 00bc F868     		ldr	r0, [r7, #12]
 775 00be 4FF0FF01 		mov	r1, #255
 776 00c2 40F20003 		movw	r3, #:lower16:SSP_SendData
 777 00c6 C0F20003 		movt	r3, #:upper16:SSP_SendData
 778 00ca 9847     		blx	r3
 381:..//common/src/lpc17xx_ssp.c **** 						dataCfg->tx_cnt++;
 779              		.loc 1 381 0
 780 00cc BB68     		ldr	r3, [r7, #8]
 781 00ce 5B68     		ldr	r3, [r3, #4]
 782 00d0 03F10102 		add	r2, r3, #1
 783 00d4 BB68     		ldr	r3, [r7, #8]
 784 00d6 5A60     		str	r2, [r3, #4]
 382:..//common/src/lpc17xx_ssp.c **** 					} else {
 383:..//common/src/lpc17xx_ssp.c **** 						SSP_SendData(SSPx, 0xFFFF);
 384:..//common/src/lpc17xx_ssp.c **** 						dataCfg->tx_cnt += 2;
 785              		.loc 1 384 0
 786 00d8 38E0     		b	.L50
 787              	.L52:
 788              		.loc 1 383 0
 789 00da F868     		ldr	r0, [r7, #12]
 790 00dc 4FF6FF71 		movw	r1, #65535
 791 00e0 40F20003 		movw	r3, #:lower16:SSP_SendData
 792 00e4 C0F20003 		movt	r3, #:upper16:SSP_SendData
 793 00e8 9847     		blx	r3
 794              		.loc 1 384 0
 795 00ea BB68     		ldr	r3, [r7, #8]
 796 00ec 5B68     		ldr	r3, [r3, #4]
 797 00ee 03F10202 		add	r2, r3, #2
 798 00f2 BB68     		ldr	r3, [r7, #8]
 799 00f4 5A60     		str	r2, [r3, #4]
 800 00f6 29E0     		b	.L50
 801              	.L51:
 385:..//common/src/lpc17xx_ssp.c **** 					}
 386:..//common/src/lpc17xx_ssp.c **** 				} else {
 387:..//common/src/lpc17xx_ssp.c **** 					if (dataword == 0){
 802              		.loc 1 387 0
 803 00f8 FB6A     		ldr	r3, [r7, #44]
 804 00fa 002B     		cmp	r3, #0
 805 00fc 13D1     		bne	.L54
 388:..//common/src/lpc17xx_ssp.c **** 						SSP_SendData(SSPx, *wdata8);
 806              		.loc 1 388 0
 807 00fe BB69     		ldr	r3, [r7, #24]
 808 0100 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 809 0102 F868     		ldr	r0, [r7, #12]
 810 0104 1946     		mov	r1, r3
 811 0106 40F20003 		movw	r3, #:lower16:SSP_SendData
 812 010a C0F20003 		movt	r3, #:upper16:SSP_SendData
 813 010e 9847     		blx	r3
 389:..//common/src/lpc17xx_ssp.c **** 						wdata8++;
 814              		.loc 1 389 0
 815 0110 BB69     		ldr	r3, [r7, #24]
 816 0112 03F10103 		add	r3, r3, #1
 817 0116 BB61     		str	r3, [r7, #24]
 390:..//common/src/lpc17xx_ssp.c **** 						dataCfg->tx_cnt++;
 818              		.loc 1 390 0
 819 0118 BB68     		ldr	r3, [r7, #8]
 820 011a 5B68     		ldr	r3, [r3, #4]
 821 011c 03F10102 		add	r2, r3, #1
 822 0120 BB68     		ldr	r3, [r7, #8]
 823 0122 5A60     		str	r2, [r3, #4]
 824 0124 12E0     		b	.L50
 825              	.L54:
 391:..//common/src/lpc17xx_ssp.c **** 					} else {
 392:..//common/src/lpc17xx_ssp.c **** 						SSP_SendData(SSPx, *wdata16);
 826              		.loc 1 392 0
 827 0126 3B6A     		ldr	r3, [r7, #32]
 828 0128 1B88     		ldrh	r3, [r3, #0]
 829 012a F868     		ldr	r0, [r7, #12]
 830 012c 1946     		mov	r1, r3
 831 012e 40F20003 		movw	r3, #:lower16:SSP_SendData
 832 0132 C0F20003 		movt	r3, #:upper16:SSP_SendData
 833 0136 9847     		blx	r3
 393:..//common/src/lpc17xx_ssp.c **** 						wdata16++;
 834              		.loc 1 393 0
 835 0138 3B6A     		ldr	r3, [r7, #32]
 836 013a 03F10203 		add	r3, r3, #2
 837 013e 3B62     		str	r3, [r7, #32]
 394:..//common/src/lpc17xx_ssp.c **** 						dataCfg->tx_cnt += 2;
 838              		.loc 1 394 0
 839 0140 BB68     		ldr	r3, [r7, #8]
 840 0142 5B68     		ldr	r3, [r3, #4]
 841 0144 03F10202 		add	r2, r3, #2
 842 0148 BB68     		ldr	r3, [r7, #8]
 843 014a 5A60     		str	r2, [r3, #4]
 844              	.L50:
 395:..//common/src/lpc17xx_ssp.c **** 					}
 396:..//common/src/lpc17xx_ssp.c **** 				}
 397:..//common/src/lpc17xx_ssp.c **** 			}
 398:..//common/src/lpc17xx_ssp.c **** 
 399:..//common/src/lpc17xx_ssp.c **** 			// Check overrun error
 400:..//common/src/lpc17xx_ssp.c **** 			if ((stat = SSPx->RIS) & SSP_RIS_ROR){
 845              		.loc 1 400 0
 846 014c FB68     		ldr	r3, [r7, #12]
 847 014e 9B69     		ldr	r3, [r3, #24]
 848 0150 7B62     		str	r3, [r7, #36]
 849 0152 7B6A     		ldr	r3, [r7, #36]
 850 0154 03F00103 		and	r3, r3, #1
 851 0158 DBB2     		uxtb	r3, r3
 852 015a 002B     		cmp	r3, #0
 853 015c 38D0     		beq	.L84
 401:..//common/src/lpc17xx_ssp.c **** 				// save status and return
 402:..//common/src/lpc17xx_ssp.c **** 				dataCfg->status = stat | SSP_STAT_ERROR;
 854              		.loc 1 402 0
 855 015e 7B6A     		ldr	r3, [r7, #36]
 856 0160 43F40072 		orr	r2, r3, #512
 857 0164 BB68     		ldr	r3, [r7, #8]
 858 0166 5A61     		str	r2, [r3, #20]
 403:..//common/src/lpc17xx_ssp.c **** 				return (-1);
 859              		.loc 1 403 0
 860 0168 4FF0FF33 		mov	r3, #-1
 861 016c 2EE1     		b	.L56
 862              	.L61:
 404:..//common/src/lpc17xx_ssp.c **** 			}
 405:..//common/src/lpc17xx_ssp.c **** 
 406:..//common/src/lpc17xx_ssp.c **** 			// Check for any data available in RX FIFO
 407:..//common/src/lpc17xx_ssp.c **** 			while ((SSPx->SR & SSP_SR_RNE) && (dataCfg->rx_cnt != dataCfg->length)){
 408:..//common/src/lpc17xx_ssp.c **** 				// Read data from SSP data
 409:..//common/src/lpc17xx_ssp.c **** 				tmp = SSP_ReceiveData(SSPx);
 863              		.loc 1 409 0
 864 016e F868     		ldr	r0, [r7, #12]
 865 0170 40F20003 		movw	r3, #:lower16:SSP_ReceiveData
 866 0174 C0F20003 		movt	r3, #:upper16:SSP_ReceiveData
 867 0178 9847     		blx	r3
 868 017a 0346     		mov	r3, r0
 869 017c BB62     		str	r3, [r7, #40]
 410:..//common/src/lpc17xx_ssp.c **** 
 411:..//common/src/lpc17xx_ssp.c **** 				// Store data to destination
 412:..//common/src/lpc17xx_ssp.c **** 				if (dataCfg->rx_data != NULL)
 870              		.loc 1 412 0
 871 017e BB68     		ldr	r3, [r7, #8]
 872 0180 9B68     		ldr	r3, [r3, #8]
 873 0182 002B     		cmp	r3, #0
 874 0184 13D0     		beq	.L58
 413:..//common/src/lpc17xx_ssp.c **** 				{
 414:..//common/src/lpc17xx_ssp.c **** 					if (dataword == 0){
 875              		.loc 1 414 0
 876 0186 FB6A     		ldr	r3, [r7, #44]
 877 0188 002B     		cmp	r3, #0
 878 018a 08D1     		bne	.L59
 415:..//common/src/lpc17xx_ssp.c **** 						*(rdata8) = (uint8_t) tmp;
 879              		.loc 1 415 0
 880 018c BB6A     		ldr	r3, [r7, #40]
 881 018e DAB2     		uxtb	r2, r3
 882 0190 7B69     		ldr	r3, [r7, #20]
 883 0192 1A70     		strb	r2, [r3, #0]
 416:..//common/src/lpc17xx_ssp.c **** 						rdata8++;
 884              		.loc 1 416 0
 885 0194 7B69     		ldr	r3, [r7, #20]
 886 0196 03F10103 		add	r3, r3, #1
 887 019a 7B61     		str	r3, [r7, #20]
 888 019c 07E0     		b	.L58
 889              	.L59:
 417:..//common/src/lpc17xx_ssp.c **** 					} else {
 418:..//common/src/lpc17xx_ssp.c **** 						*(rdata16) = (uint16_t) tmp;
 890              		.loc 1 418 0
 891 019e BB6A     		ldr	r3, [r7, #40]
 892 01a0 9AB2     		uxth	r2, r3
 893 01a2 FB69     		ldr	r3, [r7, #28]
 894 01a4 1A80     		strh	r2, [r3, #0]	@ movhi
 419:..//common/src/lpc17xx_ssp.c **** 						rdata16++;
 895              		.loc 1 419 0
 896 01a6 FB69     		ldr	r3, [r7, #28]
 897 01a8 03F10203 		add	r3, r3, #2
 898 01ac FB61     		str	r3, [r7, #28]
 899              	.L58:
 420:..//common/src/lpc17xx_ssp.c **** 					}
 421:..//common/src/lpc17xx_ssp.c **** 				}
 422:..//common/src/lpc17xx_ssp.c **** 				// Increase counter
 423:..//common/src/lpc17xx_ssp.c **** 				if (dataword == 0){
 900              		.loc 1 423 0
 901 01ae FB6A     		ldr	r3, [r7, #44]
 902 01b0 002B     		cmp	r3, #0
 903 01b2 06D1     		bne	.L60
 424:..//common/src/lpc17xx_ssp.c **** 					dataCfg->rx_cnt++;
 904              		.loc 1 424 0
 905 01b4 BB68     		ldr	r3, [r7, #8]
 906 01b6 DB68     		ldr	r3, [r3, #12]
 907 01b8 03F10102 		add	r2, r3, #1
 908 01bc BB68     		ldr	r3, [r7, #8]
 909 01be DA60     		str	r2, [r3, #12]
 910 01c0 07E0     		b	.L57
 911              	.L60:
 425:..//common/src/lpc17xx_ssp.c **** 				} else {
 426:..//common/src/lpc17xx_ssp.c **** 					dataCfg->rx_cnt += 2;
 912              		.loc 1 426 0
 913 01c2 BB68     		ldr	r3, [r7, #8]
 914 01c4 DB68     		ldr	r3, [r3, #12]
 915 01c6 03F10202 		add	r2, r3, #2
 916 01ca BB68     		ldr	r3, [r7, #8]
 917 01cc DA60     		str	r2, [r3, #12]
 918 01ce 00E0     		b	.L57
 919              	.L84:
 920              		.loc 1 407 0
 921 01d0 00BF     		nop
 922              	.L57:
 923 01d2 FB68     		ldr	r3, [r7, #12]
 924 01d4 DB68     		ldr	r3, [r3, #12]
 925 01d6 03F00403 		and	r3, r3, #4
 926 01da 002B     		cmp	r3, #0
 927 01dc 05D0     		beq	.L49
 928 01de BB68     		ldr	r3, [r7, #8]
 929 01e0 DA68     		ldr	r2, [r3, #12]
 930 01e2 BB68     		ldr	r3, [r7, #8]
 931 01e4 1B69     		ldr	r3, [r3, #16]
 932 01e6 9A42     		cmp	r2, r3
 933 01e8 C1D1     		bne	.L61
 934              	.L49:
 935              		.loc 1 375 0
 936 01ea BB68     		ldr	r3, [r7, #8]
 937 01ec 5A68     		ldr	r2, [r3, #4]
 938 01ee BB68     		ldr	r3, [r7, #8]
 939 01f0 1B69     		ldr	r3, [r3, #16]
 940 01f2 9A42     		cmp	r2, r3
 941 01f4 7FF44FAF 		bne	.L62
 942 01f8 BB68     		ldr	r3, [r7, #8]
 943 01fa DA68     		ldr	r2, [r3, #12]
 944 01fc BB68     		ldr	r3, [r7, #8]
 945 01fe 1B69     		ldr	r3, [r3, #16]
 946 0200 9A42     		cmp	r2, r3
 947 0202 7FF448AF 		bne	.L62
 427:..//common/src/lpc17xx_ssp.c **** 				}
 428:..//common/src/lpc17xx_ssp.c **** 			}
 429:..//common/src/lpc17xx_ssp.c **** 		}
 430:..//common/src/lpc17xx_ssp.c **** 
 431:..//common/src/lpc17xx_ssp.c **** 		// save status
 432:..//common/src/lpc17xx_ssp.c **** 		dataCfg->status = SSP_STAT_DONE;
 948              		.loc 1 432 0
 949 0206 BB68     		ldr	r3, [r7, #8]
 950 0208 4FF48072 		mov	r2, #256
 951 020c 5A61     		str	r2, [r3, #20]
 433:..//common/src/lpc17xx_ssp.c **** 
 434:..//common/src/lpc17xx_ssp.c **** 		if (dataCfg->tx_data != NULL){
 952              		.loc 1 434 0
 953 020e BB68     		ldr	r3, [r7, #8]
 954 0210 1B68     		ldr	r3, [r3, #0]
 955 0212 002B     		cmp	r3, #0
 956 0214 02D0     		beq	.L63
 435:..//common/src/lpc17xx_ssp.c **** 			return dataCfg->tx_cnt;
 957              		.loc 1 435 0
 958 0216 BB68     		ldr	r3, [r7, #8]
 959 0218 5B68     		ldr	r3, [r3, #4]
 960 021a D7E0     		b	.L56
 961              	.L63:
 436:..//common/src/lpc17xx_ssp.c **** 		} else if (dataCfg->rx_data != NULL){
 962              		.loc 1 436 0
 963 021c BB68     		ldr	r3, [r7, #8]
 964 021e 9B68     		ldr	r3, [r3, #8]
 965 0220 002B     		cmp	r3, #0
 966 0222 02D0     		beq	.L64
 437:..//common/src/lpc17xx_ssp.c **** 			return dataCfg->rx_cnt;
 967              		.loc 1 437 0
 968 0224 BB68     		ldr	r3, [r7, #8]
 969 0226 DB68     		ldr	r3, [r3, #12]
 970 0228 D0E0     		b	.L56
 971              	.L64:
 438:..//common/src/lpc17xx_ssp.c **** 		} else {
 439:..//common/src/lpc17xx_ssp.c **** 			return (0);
 972              		.loc 1 439 0
 973 022a 4FF00003 		mov	r3, #0
 974 022e CDE0     		b	.L56
 975              	.L46:
 440:..//common/src/lpc17xx_ssp.c **** 		}
 441:..//common/src/lpc17xx_ssp.c **** 	}
 442:..//common/src/lpc17xx_ssp.c **** 
 443:..//common/src/lpc17xx_ssp.c **** 	// Interrupt mode ----------------------------------------------------------------------
 444:..//common/src/lpc17xx_ssp.c **** 	else if (xfType == SSP_TRANSFER_INTERRUPT){
 976              		.loc 1 444 0
 977 0230 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 978 0232 012B     		cmp	r3, #1
 979 0234 40F0C880 		bne	.L65
 445:..//common/src/lpc17xx_ssp.c **** 
 446:..//common/src/lpc17xx_ssp.c **** 		while ((SSPx->SR & SSP_SR_TNF) && (dataCfg->tx_cnt != dataCfg->length)){
 980              		.loc 1 446 0
 981 0238 A1E0     		b	.L66
 982              	.L79:
 447:..//common/src/lpc17xx_ssp.c **** 			// Write data to buffer
 448:..//common/src/lpc17xx_ssp.c **** 			if(dataCfg->tx_data == NULL){
 983              		.loc 1 448 0
 984 023a BB68     		ldr	r3, [r7, #8]
 985 023c 1B68     		ldr	r3, [r3, #0]
 986 023e 002B     		cmp	r3, #0
 987 0240 20D1     		bne	.L67
 449:..//common/src/lpc17xx_ssp.c **** 				if (dataword == 0){
 988              		.loc 1 449 0
 989 0242 FB6A     		ldr	r3, [r7, #44]
 990 0244 002B     		cmp	r3, #0
 991 0246 0ED1     		bne	.L68
 450:..//common/src/lpc17xx_ssp.c **** 					SSP_SendData(SSPx, 0xFF);
 992              		.loc 1 450 0
 993 0248 F868     		ldr	r0, [r7, #12]
 994 024a 4FF0FF01 		mov	r1, #255
 995 024e 40F20003 		movw	r3, #:lower16:SSP_SendData
 996 0252 C0F20003 		movt	r3, #:upper16:SSP_SendData
 997 0256 9847     		blx	r3
 451:..//common/src/lpc17xx_ssp.c **** 					dataCfg->tx_cnt++;
 998              		.loc 1 451 0
 999 0258 BB68     		ldr	r3, [r7, #8]
 1000 025a 5B68     		ldr	r3, [r3, #4]
 1001 025c 03F10102 		add	r2, r3, #1
 1002 0260 BB68     		ldr	r3, [r7, #8]
 1003 0262 5A60     		str	r2, [r3, #4]
 452:..//common/src/lpc17xx_ssp.c **** 				} else {
 453:..//common/src/lpc17xx_ssp.c **** 					SSP_SendData(SSPx, 0xFFFF);
 454:..//common/src/lpc17xx_ssp.c **** 					dataCfg->tx_cnt += 2;
 1004              		.loc 1 454 0
 1005 0264 3AE0     		b	.L70
 1006              	.L68:
 1007              		.loc 1 453 0
 1008 0266 F868     		ldr	r0, [r7, #12]
 1009 0268 4FF6FF71 		movw	r1, #65535
 1010 026c 40F20003 		movw	r3, #:lower16:SSP_SendData
 1011 0270 C0F20003 		movt	r3, #:upper16:SSP_SendData
 1012 0274 9847     		blx	r3
 1013              		.loc 1 454 0
 1014 0276 BB68     		ldr	r3, [r7, #8]
 1015 0278 5B68     		ldr	r3, [r3, #4]
 1016 027a 03F10202 		add	r2, r3, #2
 1017 027e BB68     		ldr	r3, [r7, #8]
 1018 0280 5A60     		str	r2, [r3, #4]
 1019 0282 2BE0     		b	.L70
 1020              	.L67:
 455:..//common/src/lpc17xx_ssp.c **** 				}
 456:..//common/src/lpc17xx_ssp.c **** 			} else {
 457:..//common/src/lpc17xx_ssp.c **** 				if (dataword == 0){
 1021              		.loc 1 457 0
 1022 0284 FB6A     		ldr	r3, [r7, #44]
 1023 0286 002B     		cmp	r3, #0
 1024 0288 14D1     		bne	.L71
 458:..//common/src/lpc17xx_ssp.c **** 					SSP_SendData(SSPx, (*(uint8_t *)((uint32_t)dataCfg->tx_data + dataCfg->tx_cnt)));
 1025              		.loc 1 458 0
 1026 028a BB68     		ldr	r3, [r7, #8]
 1027 028c 1B68     		ldr	r3, [r3, #0]
 1028 028e 1A46     		mov	r2, r3
 1029 0290 BB68     		ldr	r3, [r7, #8]
 1030 0292 5B68     		ldr	r3, [r3, #4]
 1031 0294 1344     		add	r3, r2, r3
 1032 0296 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1033 0298 F868     		ldr	r0, [r7, #12]
 1034 029a 1946     		mov	r1, r3
 1035 029c 40F20003 		movw	r3, #:lower16:SSP_SendData
 1036 02a0 C0F20003 		movt	r3, #:upper16:SSP_SendData
 1037 02a4 9847     		blx	r3
 459:..//common/src/lpc17xx_ssp.c **** 					dataCfg->tx_cnt++;
 1038              		.loc 1 459 0
 1039 02a6 BB68     		ldr	r3, [r7, #8]
 1040 02a8 5B68     		ldr	r3, [r3, #4]
 1041 02aa 03F10102 		add	r2, r3, #1
 1042 02ae BB68     		ldr	r3, [r7, #8]
 1043 02b0 5A60     		str	r2, [r3, #4]
 1044 02b2 13E0     		b	.L70
 1045              	.L71:
 460:..//common/src/lpc17xx_ssp.c **** 				} else {
 461:..//common/src/lpc17xx_ssp.c **** 					SSP_SendData(SSPx, (*(uint16_t *)((uint32_t)dataCfg->tx_data + dataCfg->tx_cnt)));
 1046              		.loc 1 461 0
 1047 02b4 BB68     		ldr	r3, [r7, #8]
 1048 02b6 1B68     		ldr	r3, [r3, #0]
 1049 02b8 1A46     		mov	r2, r3
 1050 02ba BB68     		ldr	r3, [r7, #8]
 1051 02bc 5B68     		ldr	r3, [r3, #4]
 1052 02be 1344     		add	r3, r2, r3
 1053 02c0 1B88     		ldrh	r3, [r3, #0]
 1054 02c2 F868     		ldr	r0, [r7, #12]
 1055 02c4 1946     		mov	r1, r3
 1056 02c6 40F20003 		movw	r3, #:lower16:SSP_SendData
 1057 02ca C0F20003 		movt	r3, #:upper16:SSP_SendData
 1058 02ce 9847     		blx	r3
 462:..//common/src/lpc17xx_ssp.c **** 					dataCfg->tx_cnt += 2;
 1059              		.loc 1 462 0
 1060 02d0 BB68     		ldr	r3, [r7, #8]
 1061 02d2 5B68     		ldr	r3, [r3, #4]
 1062 02d4 03F10202 		add	r2, r3, #2
 1063 02d8 BB68     		ldr	r3, [r7, #8]
 1064 02da 5A60     		str	r2, [r3, #4]
 1065              	.L70:
 463:..//common/src/lpc17xx_ssp.c **** 				}
 464:..//common/src/lpc17xx_ssp.c **** 			}
 465:..//common/src/lpc17xx_ssp.c **** 
 466:..//common/src/lpc17xx_ssp.c **** 			// Check error
 467:..//common/src/lpc17xx_ssp.c **** 			if ((stat = SSPx->RIS) & SSP_RIS_ROR){
 1066              		.loc 1 467 0
 1067 02dc FB68     		ldr	r3, [r7, #12]
 1068 02de 9B69     		ldr	r3, [r3, #24]
 1069 02e0 7B62     		str	r3, [r7, #36]
 1070 02e2 7B6A     		ldr	r3, [r7, #36]
 1071 02e4 03F00103 		and	r3, r3, #1
 1072 02e8 DBB2     		uxtb	r3, r3
 1073 02ea 002B     		cmp	r3, #0
 1074 02ec 3AD0     		beq	.L85
 468:..//common/src/lpc17xx_ssp.c **** 				// save status and return
 469:..//common/src/lpc17xx_ssp.c **** 				dataCfg->status = stat | SSP_STAT_ERROR;
 1075              		.loc 1 469 0
 1076 02ee 7B6A     		ldr	r3, [r7, #36]
 1077 02f0 43F40072 		orr	r2, r3, #512
 1078 02f4 BB68     		ldr	r3, [r7, #8]
 1079 02f6 5A61     		str	r2, [r3, #20]
 470:..//common/src/lpc17xx_ssp.c **** 				return (-1);
 1080              		.loc 1 470 0
 1081 02f8 4FF0FF33 		mov	r3, #-1
 1082 02fc 66E0     		b	.L56
 1083              	.L77:
 471:..//common/src/lpc17xx_ssp.c **** 			}
 472:..//common/src/lpc17xx_ssp.c **** 
 473:..//common/src/lpc17xx_ssp.c **** 			// Check for any data available in RX FIFO
 474:..//common/src/lpc17xx_ssp.c **** 			while ((SSPx->SR & SSP_SR_RNE) && (dataCfg->rx_cnt != dataCfg->length)){
 475:..//common/src/lpc17xx_ssp.c **** 				// Read data from SSP data
 476:..//common/src/lpc17xx_ssp.c **** 				tmp = SSP_ReceiveData(SSPx);
 1084              		.loc 1 476 0
 1085 02fe F868     		ldr	r0, [r7, #12]
 1086 0300 40F20003 		movw	r3, #:lower16:SSP_ReceiveData
 1087 0304 C0F20003 		movt	r3, #:upper16:SSP_ReceiveData
 1088 0308 9847     		blx	r3
 1089 030a 0346     		mov	r3, r0
 1090 030c BB62     		str	r3, [r7, #40]
 477:..//common/src/lpc17xx_ssp.c **** 
 478:..//common/src/lpc17xx_ssp.c **** 				// Store data to destination
 479:..//common/src/lpc17xx_ssp.c **** 				if (dataCfg->rx_data != NULL)
 1091              		.loc 1 479 0
 1092 030e BB68     		ldr	r3, [r7, #8]
 1093 0310 9B68     		ldr	r3, [r3, #8]
 1094 0312 002B     		cmp	r3, #0
 1095 0314 15D0     		beq	.L74
 480:..//common/src/lpc17xx_ssp.c **** 				{
 481:..//common/src/lpc17xx_ssp.c **** 					if (dataword == 0){
 1096              		.loc 1 481 0
 1097 0316 FB6A     		ldr	r3, [r7, #44]
 1098 0318 002B     		cmp	r3, #0
 1099 031a 09D1     		bne	.L75
 482:..//common/src/lpc17xx_ssp.c **** 						*(uint8_t *)((uint32_t)dataCfg->rx_data + dataCfg->rx_cnt) = (uint8_t) tmp;
 1100              		.loc 1 482 0
 1101 031c BB68     		ldr	r3, [r7, #8]
 1102 031e 9B68     		ldr	r3, [r3, #8]
 1103 0320 1A46     		mov	r2, r3
 1104 0322 BB68     		ldr	r3, [r7, #8]
 1105 0324 DB68     		ldr	r3, [r3, #12]
 1106 0326 1344     		add	r3, r2, r3
 1107 0328 BA6A     		ldr	r2, [r7, #40]
 1108 032a D2B2     		uxtb	r2, r2
 1109 032c 1A70     		strb	r2, [r3, #0]
 1110 032e 08E0     		b	.L74
 1111              	.L75:
 483:..//common/src/lpc17xx_ssp.c **** 					} else {
 484:..//common/src/lpc17xx_ssp.c **** 						*(uint16_t *)((uint32_t)dataCfg->rx_data + dataCfg->rx_cnt) = (uint16_t) tmp;
 1112              		.loc 1 484 0
 1113 0330 BB68     		ldr	r3, [r7, #8]
 1114 0332 9B68     		ldr	r3, [r3, #8]
 1115 0334 1A46     		mov	r2, r3
 1116 0336 BB68     		ldr	r3, [r7, #8]
 1117 0338 DB68     		ldr	r3, [r3, #12]
 1118 033a 1344     		add	r3, r2, r3
 1119 033c BA6A     		ldr	r2, [r7, #40]
 1120 033e 92B2     		uxth	r2, r2
 1121 0340 1A80     		strh	r2, [r3, #0]	@ movhi
 1122              	.L74:
 485:..//common/src/lpc17xx_ssp.c **** 					}
 486:..//common/src/lpc17xx_ssp.c **** 				}
 487:..//common/src/lpc17xx_ssp.c **** 				// Increase counter
 488:..//common/src/lpc17xx_ssp.c **** 				if (dataword == 0){
 1123              		.loc 1 488 0
 1124 0342 FB6A     		ldr	r3, [r7, #44]
 1125 0344 002B     		cmp	r3, #0
 1126 0346 06D1     		bne	.L76
 489:..//common/src/lpc17xx_ssp.c **** 					dataCfg->rx_cnt++;
 1127              		.loc 1 489 0
 1128 0348 BB68     		ldr	r3, [r7, #8]
 1129 034a DB68     		ldr	r3, [r3, #12]
 1130 034c 03F10102 		add	r2, r3, #1
 1131 0350 BB68     		ldr	r3, [r7, #8]
 1132 0352 DA60     		str	r2, [r3, #12]
 1133 0354 07E0     		b	.L73
 1134              	.L76:
 490:..//common/src/lpc17xx_ssp.c **** 				} else {
 491:..//common/src/lpc17xx_ssp.c **** 					dataCfg->rx_cnt += 2;
 1135              		.loc 1 491 0
 1136 0356 BB68     		ldr	r3, [r7, #8]
 1137 0358 DB68     		ldr	r3, [r3, #12]
 1138 035a 03F10202 		add	r2, r3, #2
 1139 035e BB68     		ldr	r3, [r7, #8]
 1140 0360 DA60     		str	r2, [r3, #12]
 1141 0362 00E0     		b	.L73
 1142              	.L85:
 1143              		.loc 1 474 0
 1144 0364 00BF     		nop
 1145              	.L73:
 1146 0366 FB68     		ldr	r3, [r7, #12]
 1147 0368 DB68     		ldr	r3, [r3, #12]
 1148 036a 03F00403 		and	r3, r3, #4
 1149 036e 002B     		cmp	r3, #0
 1150 0370 05D0     		beq	.L66
 1151 0372 BB68     		ldr	r3, [r7, #8]
 1152 0374 DA68     		ldr	r2, [r3, #12]
 1153 0376 BB68     		ldr	r3, [r7, #8]
 1154 0378 1B69     		ldr	r3, [r3, #16]
 1155 037a 9A42     		cmp	r2, r3
 1156 037c BFD1     		bne	.L77
 1157              	.L66:
 1158              		.loc 1 446 0
 1159 037e FB68     		ldr	r3, [r7, #12]
 1160 0380 DB68     		ldr	r3, [r3, #12]
 1161 0382 03F00203 		and	r3, r3, #2
 1162 0386 002B     		cmp	r3, #0
 1163 0388 06D0     		beq	.L78
 1164 038a BB68     		ldr	r3, [r7, #8]
 1165 038c 5A68     		ldr	r2, [r3, #4]
 1166 038e BB68     		ldr	r3, [r7, #8]
 1167 0390 1B69     		ldr	r3, [r3, #16]
 1168 0392 9A42     		cmp	r2, r3
 1169 0394 7FF451AF 		bne	.L79
 1170              	.L78:
 492:..//common/src/lpc17xx_ssp.c **** 				}
 493:..//common/src/lpc17xx_ssp.c **** 			}
 494:..//common/src/lpc17xx_ssp.c **** 		}
 495:..//common/src/lpc17xx_ssp.c **** 
 496:..//common/src/lpc17xx_ssp.c **** 		// If there more data to sent or receive
 497:..//common/src/lpc17xx_ssp.c **** 		if ((dataCfg->rx_cnt != dataCfg->length) || (dataCfg->tx_cnt != dataCfg->length)){
 1171              		.loc 1 497 0
 1172 0398 BB68     		ldr	r3, [r7, #8]
 1173 039a DA68     		ldr	r2, [r3, #12]
 1174 039c BB68     		ldr	r3, [r7, #8]
 1175 039e 1B69     		ldr	r3, [r3, #16]
 1176 03a0 9A42     		cmp	r2, r3
 1177 03a2 05D1     		bne	.L80
 1178 03a4 BB68     		ldr	r3, [r7, #8]
 1179 03a6 5A68     		ldr	r2, [r3, #4]
 1180 03a8 BB68     		ldr	r3, [r7, #8]
 1181 03aa 1B69     		ldr	r3, [r3, #16]
 1182 03ac 9A42     		cmp	r2, r3
 1183 03ae 04D0     		beq	.L81
 1184              	.L80:
 498:..//common/src/lpc17xx_ssp.c **** 			// Enable all interrupt
 499:..//common/src/lpc17xx_ssp.c **** 			SSPx->IMSC = SSP_IMSC_BITMASK;
 1185              		.loc 1 499 0
 1186 03b0 FB68     		ldr	r3, [r7, #12]
 1187 03b2 4FF00F02 		mov	r2, #15
 1188 03b6 5A61     		str	r2, [r3, #20]
 1189              		.loc 1 497 0
 1190 03b8 03E0     		b	.L82
 1191              	.L81:
 500:..//common/src/lpc17xx_ssp.c **** 		} else {
 501:..//common/src/lpc17xx_ssp.c **** 			// Save status
 502:..//common/src/lpc17xx_ssp.c **** 			dataCfg->status = SSP_STAT_DONE;
 1192              		.loc 1 502 0
 1193 03ba BB68     		ldr	r3, [r7, #8]
 1194 03bc 4FF48072 		mov	r2, #256
 1195 03c0 5A61     		str	r2, [r3, #20]
 1196              	.L82:
 503:..//common/src/lpc17xx_ssp.c **** 		}
 504:..//common/src/lpc17xx_ssp.c **** 		return (0);
 1197              		.loc 1 504 0
 1198 03c2 4FF00003 		mov	r3, #0
 1199 03c6 01E0     		b	.L56
 1200              	.L65:
 505:..//common/src/lpc17xx_ssp.c **** 	}
 506:..//common/src/lpc17xx_ssp.c **** 
 507:..//common/src/lpc17xx_ssp.c **** 	return (-1);
 1201              		.loc 1 507 0
 1202 03c8 4FF0FF33 		mov	r3, #-1
 1203              	.L56:
 508:..//common/src/lpc17xx_ssp.c **** }
 1204              		.loc 1 508 0
 1205 03cc 1846     		mov	r0, r3
 1206 03ce 07F13007 		add	r7, r7, #48
 1207 03d2 BD46     		mov	sp, r7
 1208 03d4 80BD     		pop	{r7, pc}
 1209              		.cfi_endproc
 1210              	.LFE39:
 1212 03d6 00BF     		.section	.text.SSP_GetStatus,"ax",%progbits
 1213              		.align	2
 1214              		.global	SSP_GetStatus
 1215              		.thumb
 1216              		.thumb_func
 1218              	SSP_GetStatus:
 1219              	.LFB40:
 509:..//common/src/lpc17xx_ssp.c **** 
 510:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 511:..//common/src/lpc17xx_ssp.c ****  * @brief		Checks whether the specified SSP status flag is set or not
 512:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 513:..//common/src/lpc17xx_ssp.c ****  * 		 				- LPC_SSP0: SSP0 peripheral
 514:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 515:..//common/src/lpc17xx_ssp.c ****  * @param[in]	FlagType	Type of flag to check status, should be one
 516:..//common/src/lpc17xx_ssp.c ****  * 							of following:
 517:..//common/src/lpc17xx_ssp.c ****  *							- SSP_STAT_TXFIFO_EMPTY: TX FIFO is empty
 518:..//common/src/lpc17xx_ssp.c ****  *							- SSP_STAT_TXFIFO_NOTFULL: TX FIFO is not full
 519:..//common/src/lpc17xx_ssp.c ****  *							- SSP_STAT_RXFIFO_NOTEMPTY: RX FIFO is not empty
 520:..//common/src/lpc17xx_ssp.c ****  *							- SSP_STAT_RXFIFO_FULL: RX FIFO is full
 521:..//common/src/lpc17xx_ssp.c ****  *							- SSP_STAT_BUSY: SSP peripheral is busy
 522:..//common/src/lpc17xx_ssp.c ****  * @return		New State of specified SSP status flag
 523:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 524:..//common/src/lpc17xx_ssp.c **** FlagStatus SSP_GetStatus(LPC_SSP_TypeDef* SSPx, uint32_t FlagType)
 525:..//common/src/lpc17xx_ssp.c **** {
 1220              		.loc 1 525 0
 1221              		.cfi_startproc
 1222              		@ args = 0, pretend = 0, frame = 8
 1223              		@ frame_needed = 1, uses_anonymous_args = 0
 1224              		@ link register save eliminated.
 1225 0000 80B4     		push	{r7}
 1226              	.LCFI33:
 1227              		.cfi_def_cfa_offset 4
 1228 0002 83B0     		sub	sp, sp, #12
 1229              	.LCFI34:
 1230              		.cfi_def_cfa_offset 16
 1231 0004 00AF     		add	r7, sp, #0
 1232              		.cfi_offset 7, -4
 1233              	.LCFI35:
 1234              		.cfi_def_cfa_register 7
 1235 0006 7860     		str	r0, [r7, #4]
 1236 0008 3960     		str	r1, [r7, #0]
 526:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 527:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSP_STAT(FlagType));
 528:..//common/src/lpc17xx_ssp.c **** 
 529:..//common/src/lpc17xx_ssp.c **** 	return ((SSPx->SR & FlagType) ? SET : RESET);
 1237              		.loc 1 529 0
 1238 000a 7B68     		ldr	r3, [r7, #4]
 1239 000c DA68     		ldr	r2, [r3, #12]
 1240 000e 3B68     		ldr	r3, [r7, #0]
 1241 0010 02EA0303 		and	r3, r2, r3
 1242 0014 002B     		cmp	r3, #0
 1243 0016 0CBF     		ite	eq
 1244 0018 0023     		moveq	r3, #0
 1245 001a 0123     		movne	r3, #1
 530:..//common/src/lpc17xx_ssp.c **** }
 1246              		.loc 1 530 0
 1247 001c 1846     		mov	r0, r3
 1248 001e 07F10C07 		add	r7, r7, #12
 1249 0022 BD46     		mov	sp, r7
 1250 0024 80BC     		pop	{r7}
 1251 0026 7047     		bx	lr
 1252              		.cfi_endproc
 1253              	.LFE40:
 1255              		.section	.text.SSP_IntConfig,"ax",%progbits
 1256              		.align	2
 1257              		.global	SSP_IntConfig
 1258              		.thumb
 1259              		.thumb_func
 1261              	SSP_IntConfig:
 1262              	.LFB41:
 531:..//common/src/lpc17xx_ssp.c **** 
 532:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 533:..//common/src/lpc17xx_ssp.c ****  * @brief		Enable or disable specified interrupt type in SSP peripheral
 534:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 535:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP0: SSP0 peripheral
 536:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 537:..//common/src/lpc17xx_ssp.c ****  * @param[in]	IntType	Interrupt type in SSP peripheral, should be:
 538:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTCFG_ROR: Receive Overrun interrupt
 539:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTCFG_RT: Receive Time out interrupt
 540:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTCFG_RX: RX FIFO is at least half full interrupt
 541:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTCFG_TX: TX FIFO is at least half empty interrupt
 542:..//common/src/lpc17xx_ssp.c ****  * @param[in]	NewState New State of specified interrupt type, should be:
 543:..//common/src/lpc17xx_ssp.c ****  * 				- ENABLE: Enable this interrupt type
 544:..//common/src/lpc17xx_ssp.c ****  * 				- DISABLE: Disable this interrupt type
 545:..//common/src/lpc17xx_ssp.c ****  * @return		None
 546:..//common/src/lpc17xx_ssp.c ****  * Note: We can enable/disable multi-interrupt type by OR multi value
 547:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 548:..//common/src/lpc17xx_ssp.c **** void SSP_IntConfig(LPC_SSP_TypeDef *SSPx, uint32_t IntType, FunctionalState NewState)
 549:..//common/src/lpc17xx_ssp.c **** {
 1263              		.loc 1 549 0
 1264              		.cfi_startproc
 1265              		@ args = 0, pretend = 0, frame = 16
 1266              		@ frame_needed = 1, uses_anonymous_args = 0
 1267              		@ link register save eliminated.
 1268 0000 80B4     		push	{r7}
 1269              	.LCFI36:
 1270              		.cfi_def_cfa_offset 4
 1271 0002 85B0     		sub	sp, sp, #20
 1272              	.LCFI37:
 1273              		.cfi_def_cfa_offset 24
 1274 0004 00AF     		add	r7, sp, #0
 1275              		.cfi_offset 7, -4
 1276              	.LCFI38:
 1277              		.cfi_def_cfa_register 7
 1278 0006 F860     		str	r0, [r7, #12]
 1279 0008 B960     		str	r1, [r7, #8]
 1280 000a 1346     		mov	r3, r2
 1281 000c FB71     		strb	r3, [r7, #7]
 550:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 551:..//common/src/lpc17xx_ssp.c **** 
 552:..//common/src/lpc17xx_ssp.c **** 	if (NewState == ENABLE)
 1282              		.loc 1 552 0
 1283 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1284 0010 012B     		cmp	r3, #1
 1285 0012 07D1     		bne	.L89
 553:..//common/src/lpc17xx_ssp.c **** 	{
 554:..//common/src/lpc17xx_ssp.c **** 		SSPx->IMSC |= IntType;
 1286              		.loc 1 554 0
 1287 0014 FB68     		ldr	r3, [r7, #12]
 1288 0016 5A69     		ldr	r2, [r3, #20]
 1289 0018 BB68     		ldr	r3, [r7, #8]
 1290 001a 42EA0302 		orr	r2, r2, r3
 1291 001e FB68     		ldr	r3, [r7, #12]
 1292 0020 5A61     		str	r2, [r3, #20]
 1293 0022 0AE0     		b	.L91
 1294              	.L89:
 555:..//common/src/lpc17xx_ssp.c **** 	}
 556:..//common/src/lpc17xx_ssp.c **** 	else
 557:..//common/src/lpc17xx_ssp.c **** 	{
 558:..//common/src/lpc17xx_ssp.c **** 		SSPx->IMSC &= (~IntType) & SSP_IMSC_BITMASK;
 1295              		.loc 1 558 0
 1296 0024 FB68     		ldr	r3, [r7, #12]
 1297 0026 5A69     		ldr	r2, [r3, #20]
 1298 0028 BB68     		ldr	r3, [r7, #8]
 1299 002a 6FEA0303 		mvn	r3, r3
 1300 002e 02EA0303 		and	r3, r2, r3
 1301 0032 03F00F02 		and	r2, r3, #15
 1302 0036 FB68     		ldr	r3, [r7, #12]
 1303 0038 5A61     		str	r2, [r3, #20]
 1304              	.L91:
 559:..//common/src/lpc17xx_ssp.c **** 	}
 560:..//common/src/lpc17xx_ssp.c **** }
 1305              		.loc 1 560 0
 1306 003a 07F11407 		add	r7, r7, #20
 1307 003e BD46     		mov	sp, r7
 1308 0040 80BC     		pop	{r7}
 1309 0042 7047     		bx	lr
 1310              		.cfi_endproc
 1311              	.LFE41:
 1313              		.section	.text.SSP_GetRawIntStatus,"ax",%progbits
 1314              		.align	2
 1315              		.global	SSP_GetRawIntStatus
 1316              		.thumb
 1317              		.thumb_func
 1319              	SSP_GetRawIntStatus:
 1320              	.LFB42:
 561:..//common/src/lpc17xx_ssp.c **** 
 562:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 563:..//common/src/lpc17xx_ssp.c ****  * @brief	Check whether the specified Raw interrupt status flag is
 564:..//common/src/lpc17xx_ssp.c ****  * 			set or not
 565:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 566:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP0: SSP0 peripheral
 567:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 568:..//common/src/lpc17xx_ssp.c ****  * @param[in]	RawIntType	Raw Interrupt Type, should be:
 569:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTSTAT_RAW_ROR: Receive Overrun interrupt
 570:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTSTAT_RAW_RT: Receive Time out interrupt
 571:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTSTAT_RAW_RX: RX FIFO is at least half full interrupt
 572:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTSTAT_RAW_TX: TX FIFO is at least half empty interrupt
 573:..//common/src/lpc17xx_ssp.c ****  * @return	New State of specified Raw interrupt status flag in SSP peripheral
 574:..//common/src/lpc17xx_ssp.c ****  * Note: Enabling/Disabling specified interrupt in SSP peripheral does not
 575:..//common/src/lpc17xx_ssp.c ****  * 		effect to Raw Interrupt Status flag.
 576:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 577:..//common/src/lpc17xx_ssp.c **** IntStatus SSP_GetRawIntStatus(LPC_SSP_TypeDef *SSPx, uint32_t RawIntType)
 578:..//common/src/lpc17xx_ssp.c **** {
 1321              		.loc 1 578 0
 1322              		.cfi_startproc
 1323              		@ args = 0, pretend = 0, frame = 8
 1324              		@ frame_needed = 1, uses_anonymous_args = 0
 1325              		@ link register save eliminated.
 1326 0000 80B4     		push	{r7}
 1327              	.LCFI39:
 1328              		.cfi_def_cfa_offset 4
 1329 0002 83B0     		sub	sp, sp, #12
 1330              	.LCFI40:
 1331              		.cfi_def_cfa_offset 16
 1332 0004 00AF     		add	r7, sp, #0
 1333              		.cfi_offset 7, -4
 1334              	.LCFI41:
 1335              		.cfi_def_cfa_register 7
 1336 0006 7860     		str	r0, [r7, #4]
 1337 0008 3960     		str	r1, [r7, #0]
 579:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 580:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSP_INTSTAT_RAW(RawIntType));
 581:..//common/src/lpc17xx_ssp.c **** 
 582:..//common/src/lpc17xx_ssp.c **** 	return ((SSPx->RIS & RawIntType) ? SET : RESET);
 1338              		.loc 1 582 0
 1339 000a 7B68     		ldr	r3, [r7, #4]
 1340 000c 9A69     		ldr	r2, [r3, #24]
 1341 000e 3B68     		ldr	r3, [r7, #0]
 1342 0010 02EA0303 		and	r3, r2, r3
 1343 0014 002B     		cmp	r3, #0
 1344 0016 0CBF     		ite	eq
 1345 0018 0023     		moveq	r3, #0
 1346 001a 0123     		movne	r3, #1
 583:..//common/src/lpc17xx_ssp.c **** }
 1347              		.loc 1 583 0
 1348 001c 1846     		mov	r0, r3
 1349 001e 07F10C07 		add	r7, r7, #12
 1350 0022 BD46     		mov	sp, r7
 1351 0024 80BC     		pop	{r7}
 1352 0026 7047     		bx	lr
 1353              		.cfi_endproc
 1354              	.LFE42:
 1356              		.section	.text.SSP_GetRawIntStatusReg,"ax",%progbits
 1357              		.align	2
 1358              		.global	SSP_GetRawIntStatusReg
 1359              		.thumb
 1360              		.thumb_func
 1362              	SSP_GetRawIntStatusReg:
 1363              	.LFB43:
 584:..//common/src/lpc17xx_ssp.c **** 
 585:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 586:..//common/src/lpc17xx_ssp.c ****  * @brief		Get Raw Interrupt Status register
 587:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 588:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP0: SSP0 peripheral
 589:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 590:..//common/src/lpc17xx_ssp.c ****  * @return		Raw Interrupt Status (RIS) register value
 591:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 592:..//common/src/lpc17xx_ssp.c **** uint32_t SSP_GetRawIntStatusReg(LPC_SSP_TypeDef *SSPx)
 593:..//common/src/lpc17xx_ssp.c **** {
 1364              		.loc 1 593 0
 1365              		.cfi_startproc
 1366              		@ args = 0, pretend = 0, frame = 8
 1367              		@ frame_needed = 1, uses_anonymous_args = 0
 1368              		@ link register save eliminated.
 1369 0000 80B4     		push	{r7}
 1370              	.LCFI42:
 1371              		.cfi_def_cfa_offset 4
 1372 0002 83B0     		sub	sp, sp, #12
 1373              	.LCFI43:
 1374              		.cfi_def_cfa_offset 16
 1375 0004 00AF     		add	r7, sp, #0
 1376              		.cfi_offset 7, -4
 1377              	.LCFI44:
 1378              		.cfi_def_cfa_register 7
 1379 0006 7860     		str	r0, [r7, #4]
 594:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 595:..//common/src/lpc17xx_ssp.c **** 	return (SSPx->RIS);
 1380              		.loc 1 595 0
 1381 0008 7B68     		ldr	r3, [r7, #4]
 1382 000a 9B69     		ldr	r3, [r3, #24]
 596:..//common/src/lpc17xx_ssp.c **** }
 1383              		.loc 1 596 0
 1384 000c 1846     		mov	r0, r3
 1385 000e 07F10C07 		add	r7, r7, #12
 1386 0012 BD46     		mov	sp, r7
 1387 0014 80BC     		pop	{r7}
 1388 0016 7047     		bx	lr
 1389              		.cfi_endproc
 1390              	.LFE43:
 1392              		.section	.text.SSP_GetIntStatus,"ax",%progbits
 1393              		.align	2
 1394              		.global	SSP_GetIntStatus
 1395              		.thumb
 1396              		.thumb_func
 1398              	SSP_GetIntStatus:
 1399              	.LFB44:
 597:..//common/src/lpc17xx_ssp.c **** 
 598:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 599:..//common/src/lpc17xx_ssp.c ****  * @brief	Check whether the specified interrupt status flag is
 600:..//common/src/lpc17xx_ssp.c ****  * 			set or not
 601:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 602:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP0: SSP0 peripheral
 603:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 604:..//common/src/lpc17xx_ssp.c ****  * @param[in]	IntType	Raw Interrupt Type, should be:
 605:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTSTAT_ROR: Receive Overrun interrupt
 606:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTSTAT_RT: Receive Time out interrupt
 607:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTSTAT_RX: RX FIFO is at least half full interrupt
 608:..//common/src/lpc17xx_ssp.c ****  * 				- SSP_INTSTAT_TX: TX FIFO is at least half empty interrupt
 609:..//common/src/lpc17xx_ssp.c ****  * @return	New State of specified interrupt status flag in SSP peripheral
 610:..//common/src/lpc17xx_ssp.c ****  * Note: Enabling/Disabling specified interrupt in SSP peripheral effects
 611:..//common/src/lpc17xx_ssp.c ****  * 			to Interrupt Status flag.
 612:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 613:..//common/src/lpc17xx_ssp.c **** IntStatus SSP_GetIntStatus (LPC_SSP_TypeDef *SSPx, uint32_t IntType)
 614:..//common/src/lpc17xx_ssp.c **** {
 1400              		.loc 1 614 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 8
 1403              		@ frame_needed = 1, uses_anonymous_args = 0
 1404              		@ link register save eliminated.
 1405 0000 80B4     		push	{r7}
 1406              	.LCFI45:
 1407              		.cfi_def_cfa_offset 4
 1408 0002 83B0     		sub	sp, sp, #12
 1409              	.LCFI46:
 1410              		.cfi_def_cfa_offset 16
 1411 0004 00AF     		add	r7, sp, #0
 1412              		.cfi_offset 7, -4
 1413              	.LCFI47:
 1414              		.cfi_def_cfa_register 7
 1415 0006 7860     		str	r0, [r7, #4]
 1416 0008 3960     		str	r1, [r7, #0]
 615:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 616:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSP_INTSTAT(IntType));
 617:..//common/src/lpc17xx_ssp.c **** 
 618:..//common/src/lpc17xx_ssp.c **** 	return ((SSPx->MIS & IntType) ? SET :RESET);
 1417              		.loc 1 618 0
 1418 000a 7B68     		ldr	r3, [r7, #4]
 1419 000c DA69     		ldr	r2, [r3, #28]
 1420 000e 3B68     		ldr	r3, [r7, #0]
 1421 0010 02EA0303 		and	r3, r2, r3
 1422 0014 002B     		cmp	r3, #0
 1423 0016 0CBF     		ite	eq
 1424 0018 0023     		moveq	r3, #0
 1425 001a 0123     		movne	r3, #1
 619:..//common/src/lpc17xx_ssp.c **** }
 1426              		.loc 1 619 0
 1427 001c 1846     		mov	r0, r3
 1428 001e 07F10C07 		add	r7, r7, #12
 1429 0022 BD46     		mov	sp, r7
 1430 0024 80BC     		pop	{r7}
 1431 0026 7047     		bx	lr
 1432              		.cfi_endproc
 1433              	.LFE44:
 1435              		.section	.text.SSP_ClearIntPending,"ax",%progbits
 1436              		.align	2
 1437              		.global	SSP_ClearIntPending
 1438              		.thumb
 1439              		.thumb_func
 1441              	SSP_ClearIntPending:
 1442              	.LFB45:
 620:..//common/src/lpc17xx_ssp.c **** 
 621:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 622:..//common/src/lpc17xx_ssp.c ****  * @brief				Clear specified interrupt pending in SSP peripheral
 623:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 624:..//common/src/lpc17xx_ssp.c ****  *  					- LPC_SSP0: SSP0 peripheral
 625:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 626:..//common/src/lpc17xx_ssp.c ****  * @param[in]	IntType	Interrupt pending to clear, should be:
 627:..//common/src/lpc17xx_ssp.c ****  * 						- SSP_INTCLR_ROR: clears the "frame was received when
 628:..//common/src/lpc17xx_ssp.c ****  * 						RxFIFO was full" interrupt.
 629:..//common/src/lpc17xx_ssp.c ****  * 						- SSP_INTCLR_RT: clears the "Rx FIFO was not empty and
 630:..//common/src/lpc17xx_ssp.c ****  * 						has not been read for a timeout period" interrupt.
 631:..//common/src/lpc17xx_ssp.c ****  * @return		None
 632:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 633:..//common/src/lpc17xx_ssp.c **** void SSP_ClearIntPending(LPC_SSP_TypeDef *SSPx, uint32_t IntType)
 634:..//common/src/lpc17xx_ssp.c **** {
 1443              		.loc 1 634 0
 1444              		.cfi_startproc
 1445              		@ args = 0, pretend = 0, frame = 8
 1446              		@ frame_needed = 1, uses_anonymous_args = 0
 1447              		@ link register save eliminated.
 1448 0000 80B4     		push	{r7}
 1449              	.LCFI48:
 1450              		.cfi_def_cfa_offset 4
 1451 0002 83B0     		sub	sp, sp, #12
 1452              	.LCFI49:
 1453              		.cfi_def_cfa_offset 16
 1454 0004 00AF     		add	r7, sp, #0
 1455              		.cfi_offset 7, -4
 1456              	.LCFI50:
 1457              		.cfi_def_cfa_register 7
 1458 0006 7860     		str	r0, [r7, #4]
 1459 0008 3960     		str	r1, [r7, #0]
 635:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 636:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSP_INTCLR(IntType));
 637:..//common/src/lpc17xx_ssp.c **** 
 638:..//common/src/lpc17xx_ssp.c **** 	SSPx->ICR = IntType;
 1460              		.loc 1 638 0
 1461 000a 7B68     		ldr	r3, [r7, #4]
 1462 000c 3A68     		ldr	r2, [r7, #0]
 1463 000e 1A62     		str	r2, [r3, #32]
 639:..//common/src/lpc17xx_ssp.c **** }
 1464              		.loc 1 639 0
 1465 0010 07F10C07 		add	r7, r7, #12
 1466 0014 BD46     		mov	sp, r7
 1467 0016 80BC     		pop	{r7}
 1468 0018 7047     		bx	lr
 1469              		.cfi_endproc
 1470              	.LFE45:
 1472 001a 00BF     		.section	.text.SSP_DMACmd,"ax",%progbits
 1473              		.align	2
 1474              		.global	SSP_DMACmd
 1475              		.thumb
 1476              		.thumb_func
 1478              	SSP_DMACmd:
 1479              	.LFB46:
 640:..//common/src/lpc17xx_ssp.c **** 
 641:..//common/src/lpc17xx_ssp.c **** /*********************************************************************//**
 642:..//common/src/lpc17xx_ssp.c ****  * @brief				Enable/Disable DMA function for SSP peripheral
 643:..//common/src/lpc17xx_ssp.c ****  * @param[in]	SSPx	SSP peripheral selected, should be:
 644:..//common/src/lpc17xx_ssp.c ****  *  					- LPC_SSP0: SSP0 peripheral
 645:..//common/src/lpc17xx_ssp.c ****  * 						- LPC_SSP1: SSP1 peripheral
 646:..//common/src/lpc17xx_ssp.c ****  * @param[in]	DMAMode	Type of DMA, should be:
 647:..//common/src/lpc17xx_ssp.c ****  * 						- SSP_DMA_TX: DMA for the transmit FIFO
 648:..//common/src/lpc17xx_ssp.c ****  * 						- SSP_DMA_RX: DMA for the Receive FIFO
 649:..//common/src/lpc17xx_ssp.c ****  * @param[in]	NewState	New State of DMA function on SSP peripheral,
 650:..//common/src/lpc17xx_ssp.c ****  * 						should be:
 651:..//common/src/lpc17xx_ssp.c ****  * 						- ENALBE: Enable this function
 652:..//common/src/lpc17xx_ssp.c ****  * 						- DISABLE: Disable this function
 653:..//common/src/lpc17xx_ssp.c ****  * @return		None
 654:..//common/src/lpc17xx_ssp.c ****  **********************************************************************/
 655:..//common/src/lpc17xx_ssp.c **** void SSP_DMACmd(LPC_SSP_TypeDef *SSPx, uint32_t DMAMode, FunctionalState NewState)
 656:..//common/src/lpc17xx_ssp.c **** {
 1480              		.loc 1 656 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 16
 1483              		@ frame_needed = 1, uses_anonymous_args = 0
 1484              		@ link register save eliminated.
 1485 0000 80B4     		push	{r7}
 1486              	.LCFI51:
 1487              		.cfi_def_cfa_offset 4
 1488 0002 85B0     		sub	sp, sp, #20
 1489              	.LCFI52:
 1490              		.cfi_def_cfa_offset 24
 1491 0004 00AF     		add	r7, sp, #0
 1492              		.cfi_offset 7, -4
 1493              	.LCFI53:
 1494              		.cfi_def_cfa_register 7
 1495 0006 F860     		str	r0, [r7, #12]
 1496 0008 B960     		str	r1, [r7, #8]
 1497 000a 1346     		mov	r3, r2
 1498 000c FB71     		strb	r3, [r7, #7]
 657:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSPx(SSPx));
 658:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_SSP_DMA(DMAMode));
 659:..//common/src/lpc17xx_ssp.c **** 	// CHECK_PARAM(PARAM_SSPx(SSPx));(PARAM_FUNCTIONALSTATE(NewState));
 660:..//common/src/lpc17xx_ssp.c **** 
 661:..//common/src/lpc17xx_ssp.c **** 	if (NewState == ENABLE)
 1499              		.loc 1 661 0
 1500 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1501 0010 012B     		cmp	r3, #1
 1502 0012 07D1     		bne	.L101
 662:..//common/src/lpc17xx_ssp.c **** 	{
 663:..//common/src/lpc17xx_ssp.c **** 		SSPx->DMACR |= DMAMode;
 1503              		.loc 1 663 0
 1504 0014 FB68     		ldr	r3, [r7, #12]
 1505 0016 5A6A     		ldr	r2, [r3, #36]
 1506 0018 BB68     		ldr	r3, [r7, #8]
 1507 001a 42EA0302 		orr	r2, r2, r3
 1508 001e FB68     		ldr	r3, [r7, #12]
 1509 0020 5A62     		str	r2, [r3, #36]
 1510 0022 0AE0     		b	.L103
 1511              	.L101:
 664:..//common/src/lpc17xx_ssp.c **** 	}
 665:..//common/src/lpc17xx_ssp.c **** 	else
 666:..//common/src/lpc17xx_ssp.c **** 	{
 667:..//common/src/lpc17xx_ssp.c **** 		SSPx->DMACR &= (~DMAMode) & SSP_DMA_BITMASK;
 1512              		.loc 1 667 0
 1513 0024 FB68     		ldr	r3, [r7, #12]
 1514 0026 5A6A     		ldr	r2, [r3, #36]
 1515 0028 BB68     		ldr	r3, [r7, #8]
 1516 002a 6FEA0303 		mvn	r3, r3
 1517 002e 02EA0303 		and	r3, r2, r3
 1518 0032 03F00302 		and	r2, r3, #3
 1519 0036 FB68     		ldr	r3, [r7, #12]
 1520 0038 5A62     		str	r2, [r3, #36]
 1521              	.L103:
 668:..//common/src/lpc17xx_ssp.c **** 	}
 669:..//common/src/lpc17xx_ssp.c **** }
 1522              		.loc 1 669 0
 1523 003a 07F11407 		add	r7, r7, #20
 1524 003e BD46     		mov	sp, r7
 1525 0040 80BC     		pop	{r7}
 1526 0042 7047     		bx	lr
 1527              		.cfi_endproc
 1528              	.LFE46:
 1530              		.text
 1531              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 lpc17xx_ssp.c
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:24     .text.setSSPclock:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:28     .text.setSSPclock:00000000 setSSPclock
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:157    .text.SSP_Init:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:162    .text.SSP_Init:00000000 SSP_Init
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:259    .text.SSP_DeInit:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:264    .text.SSP_DeInit:00000000 SSP_DeInit
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:317    .text.SSP_GetDataSize:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:322    .text.SSP_GetDataSize:00000000 SSP_GetDataSize
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:355    .text.SSP_ConfigStructInit:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:360    .text.SSP_ConfigStructInit:00000000 SSP_ConfigStructInit
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:412    .text.SSP_Cmd:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:417    .text.SSP_Cmd:00000000 SSP_Cmd
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:465    .text.SSP_LoopBackCmd:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:470    .text.SSP_LoopBackCmd:00000000 SSP_LoopBackCmd
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:518    .text.SSP_SlaveOutputCmd:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:523    .text.SSP_SlaveOutputCmd:00000000 SSP_SlaveOutputCmd
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:571    .text.SSP_SendData:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:576    .text.SSP_SendData:00000000 SSP_SendData
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:609    .text.SSP_ReceiveData:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:614    .text.SSP_ReceiveData:00000000 SSP_ReceiveData
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:646    .text.SSP_ReadWrite:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:651    .text.SSP_ReadWrite:00000000 SSP_ReadWrite
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1213   .text.SSP_GetStatus:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1218   .text.SSP_GetStatus:00000000 SSP_GetStatus
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1256   .text.SSP_IntConfig:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1261   .text.SSP_IntConfig:00000000 SSP_IntConfig
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1314   .text.SSP_GetRawIntStatus:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1319   .text.SSP_GetRawIntStatus:00000000 SSP_GetRawIntStatus
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1357   .text.SSP_GetRawIntStatusReg:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1362   .text.SSP_GetRawIntStatusReg:00000000 SSP_GetRawIntStatusReg
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1393   .text.SSP_GetIntStatus:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1398   .text.SSP_GetIntStatus:00000000 SSP_GetIntStatus
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1436   .text.SSP_ClearIntPending:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1441   .text.SSP_ClearIntPending:00000000 SSP_ClearIntPending
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1473   .text.SSP_DMACmd:00000000 $t
C:\Users\ACURAP~1\AppData\Local\Temp\ccjRJqlu.s:1478   .text.SSP_DMACmd:00000000 SSP_DMACmd
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CLKPWR_GetPCLK
CLKPWR_ConfigPPWR
