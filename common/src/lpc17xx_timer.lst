   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"lpc17xx_timer.c"
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.getPClock,"ax",%progbits
  24              		.align	2
  25              		.thumb
  26              		.thumb_func
  28              	getPClock:
  29              	.LFB29:
  30              		.file 1 "..//common/src/lpc17xx_timer.c"
   1:..//common/src/lpc17xx_timer.c **** /***********************************************************************//**
   2:..//common/src/lpc17xx_timer.c ****  * @file		lpc17xx_timer.c
   3:..//common/src/lpc17xx_timer.c ****  * @brief		Contains all functions support for Timer firmware library on LPC17xx
   4:..//common/src/lpc17xx_timer.c ****  * @version		3.0
   5:..//common/src/lpc17xx_timer.c ****  * @date		18. June. 2010
   6:..//common/src/lpc17xx_timer.c ****  * @author		NXP MCU SW Application Team
   7:..//common/src/lpc17xx_timer.c ****  **************************************************************************
   8:..//common/src/lpc17xx_timer.c ****  * Software that is described herein is for illustrative purposes only
   9:..//common/src/lpc17xx_timer.c ****  * which provides customers with programming information regarding the
  10:..//common/src/lpc17xx_timer.c ****  * products. This software is supplied "AS IS" without any warranties.
  11:..//common/src/lpc17xx_timer.c ****  * NXP Semiconductors assumes no responsibility or liability for the
  12:..//common/src/lpc17xx_timer.c ****  * use of the software, conveys no license or title under any patent,
  13:..//common/src/lpc17xx_timer.c ****  * copyright, or mask work right to the product. NXP Semiconductors
  14:..//common/src/lpc17xx_timer.c ****  * reserves the right to make changes in the software without
  15:..//common/src/lpc17xx_timer.c ****  * notification. NXP Semiconductors also make no representation or
  16:..//common/src/lpc17xx_timer.c ****  * warranty that such application will be suitable for the specified
  17:..//common/src/lpc17xx_timer.c ****  * use without further testing or modification.
  18:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
  19:..//common/src/lpc17xx_timer.c **** 
  20:..//common/src/lpc17xx_timer.c **** /* Peripheral group ----------------------------------------------------------- */
  21:..//common/src/lpc17xx_timer.c **** /** @addtogroup TIM
  22:..//common/src/lpc17xx_timer.c ****  * @{
  23:..//common/src/lpc17xx_timer.c ****  */
  24:..//common/src/lpc17xx_timer.c **** 
  25:..//common/src/lpc17xx_timer.c **** /* Includes ------------------------------------------------------------------- */
  26:..//common/src/lpc17xx_timer.c **** #include "lpc17xx_timer.h"
  27:..//common/src/lpc17xx_timer.c **** #include "lpc17xx_clkpwr.h"
  28:..//common/src/lpc17xx_timer.c **** #include "lpc17xx_pinsel.h"
  29:..//common/src/lpc17xx_timer.c **** 
  30:..//common/src/lpc17xx_timer.c **** /* If this source file built with example, the LPC17xx FW library configuration
  31:..//common/src/lpc17xx_timer.c ****  * file in each example directory ("lpc17xx_libcfg.h") must be included,
  32:..//common/src/lpc17xx_timer.c ****  * otherwise the default FW library configuration file must be included instead
  33:..//common/src/lpc17xx_timer.c ****  */
  34:..//common/src/lpc17xx_timer.c **** #ifdef __BUILD_WITH_EXAMPLE__
  35:..//common/src/lpc17xx_timer.c **** #include "lpc17xx_libcfg.h"
  36:..//common/src/lpc17xx_timer.c **** #else
  37:..//common/src/lpc17xx_timer.c **** #include "lpc17xx_libcfg_default.h"
  38:..//common/src/lpc17xx_timer.c **** #endif /* __BUILD_WITH_EXAMPLE__ */
  39:..//common/src/lpc17xx_timer.c **** 
  40:..//common/src/lpc17xx_timer.c **** #ifdef _TIM
  41:..//common/src/lpc17xx_timer.c **** 
  42:..//common/src/lpc17xx_timer.c **** /* Private Functions ---------------------------------------------------------- */
  43:..//common/src/lpc17xx_timer.c **** 
  44:..//common/src/lpc17xx_timer.c **** static uint32_t getPClock (uint32_t timernum);
  45:..//common/src/lpc17xx_timer.c **** static uint32_t converUSecToVal (uint32_t timernum, uint32_t usec);
  46:..//common/src/lpc17xx_timer.c **** static uint32_t converPtrToTimeNum (LPC_TIM_TypeDef *TIMx);
  47:..//common/src/lpc17xx_timer.c **** 
  48:..//common/src/lpc17xx_timer.c **** 
  49:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
  50:..//common/src/lpc17xx_timer.c ****  * @brief 		Get peripheral clock of each timer controller
  51:..//common/src/lpc17xx_timer.c ****  * @param[in]	timernum Timer number
  52:..//common/src/lpc17xx_timer.c ****  * @return 		Peripheral clock of timer
  53:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
  54:..//common/src/lpc17xx_timer.c **** static uint32_t getPClock (uint32_t timernum)
  55:..//common/src/lpc17xx_timer.c **** {
  31              		.loc 1 55 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 16
  34              		@ frame_needed = 1, uses_anonymous_args = 0
  35 0000 80B5     		push	{r7, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              		.cfi_offset 14, -4
  43              		.cfi_offset 7, -8
  44              	.LCFI2:
  45              		.cfi_def_cfa_register 7
  46 0006 7860     		str	r0, [r7, #4]
  56:..//common/src/lpc17xx_timer.c **** 	uint32_t clkdlycnt;
  57:..//common/src/lpc17xx_timer.c **** 	switch (timernum)
  47              		.loc 1 57 0
  48 0008 7B68     		ldr	r3, [r7, #4]
  49 000a 032B     		cmp	r3, #3
  50 000c 31D8     		bhi	.L2
  51 000e 01A2     		adr	r2, .L7
  52 0010 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  53              		.align	2
  54              	.L7:
  55 0014 25000000 		.word	.L3+1
  56 0018 39000000 		.word	.L4+1
  57 001c 4D000000 		.word	.L5+1
  58 0020 61000000 		.word	.L6+1
  59              	.L3:
  58:..//common/src/lpc17xx_timer.c **** 	{
  59:..//common/src/lpc17xx_timer.c **** 	case 0:
  60:..//common/src/lpc17xx_timer.c **** 		clkdlycnt = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_TIMER0);
  60              		.loc 1 60 0
  61 0024 4FF00200 		mov	r0, #2
  62 0028 40F20003 		movw	r3, #:lower16:CLKPWR_GetPCLK
  63 002c C0F20003 		movt	r3, #:upper16:CLKPWR_GetPCLK
  64 0030 9847     		blx	r3
  65 0032 0346     		mov	r3, r0
  66 0034 FB60     		str	r3, [r7, #12]
  61:..//common/src/lpc17xx_timer.c **** 		break;
  67              		.loc 1 61 0
  68 0036 1CE0     		b	.L2
  69              	.L4:
  62:..//common/src/lpc17xx_timer.c **** 
  63:..//common/src/lpc17xx_timer.c **** 	case 1:
  64:..//common/src/lpc17xx_timer.c **** 		clkdlycnt = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_TIMER1);
  70              		.loc 1 64 0
  71 0038 4FF00400 		mov	r0, #4
  72 003c 40F20003 		movw	r3, #:lower16:CLKPWR_GetPCLK
  73 0040 C0F20003 		movt	r3, #:upper16:CLKPWR_GetPCLK
  74 0044 9847     		blx	r3
  75 0046 0346     		mov	r3, r0
  76 0048 FB60     		str	r3, [r7, #12]
  65:..//common/src/lpc17xx_timer.c **** 		break;
  77              		.loc 1 65 0
  78 004a 12E0     		b	.L2
  79              	.L5:
  66:..//common/src/lpc17xx_timer.c **** 
  67:..//common/src/lpc17xx_timer.c **** 	case 2:
  68:..//common/src/lpc17xx_timer.c **** 		clkdlycnt = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_TIMER2);
  80              		.loc 1 68 0
  81 004c 4FF02C00 		mov	r0, #44
  82 0050 40F20003 		movw	r3, #:lower16:CLKPWR_GetPCLK
  83 0054 C0F20003 		movt	r3, #:upper16:CLKPWR_GetPCLK
  84 0058 9847     		blx	r3
  85 005a 0346     		mov	r3, r0
  86 005c FB60     		str	r3, [r7, #12]
  69:..//common/src/lpc17xx_timer.c **** 		break;
  87              		.loc 1 69 0
  88 005e 08E0     		b	.L2
  89              	.L6:
  70:..//common/src/lpc17xx_timer.c **** 
  71:..//common/src/lpc17xx_timer.c **** 	case 3:
  72:..//common/src/lpc17xx_timer.c **** 		clkdlycnt = CLKPWR_GetPCLK (CLKPWR_PCLKSEL_TIMER3);
  90              		.loc 1 72 0
  91 0060 4FF02E00 		mov	r0, #46
  92 0064 40F20003 		movw	r3, #:lower16:CLKPWR_GetPCLK
  93 0068 C0F20003 		movt	r3, #:upper16:CLKPWR_GetPCLK
  94 006c 9847     		blx	r3
  95 006e 0346     		mov	r3, r0
  96 0070 FB60     		str	r3, [r7, #12]
  97              	.L2:
  73:..//common/src/lpc17xx_timer.c **** 		break;
  74:..//common/src/lpc17xx_timer.c **** 	}
  75:..//common/src/lpc17xx_timer.c **** 	return clkdlycnt;
  98              		.loc 1 75 0
  99 0072 FB68     		ldr	r3, [r7, #12]
  76:..//common/src/lpc17xx_timer.c **** }
 100              		.loc 1 76 0
 101 0074 1846     		mov	r0, r3
 102 0076 07F11007 		add	r7, r7, #16
 103 007a BD46     		mov	sp, r7
 104 007c 80BD     		pop	{r7, pc}
 105              		.cfi_endproc
 106              	.LFE29:
 108              		.global	__aeabi_uldivmod
 109 007e 00BF     		.section	.text.converUSecToVal,"ax",%progbits
 110              		.align	2
 111              		.thumb
 112              		.thumb_func
 114              	converUSecToVal:
 115              	.LFB30:
  77:..//common/src/lpc17xx_timer.c **** 
  78:..//common/src/lpc17xx_timer.c **** 
  79:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
  80:..//common/src/lpc17xx_timer.c ****  * @brief 		Convert a time to a timer count value
  81:..//common/src/lpc17xx_timer.c ****  * @param[in]	timernum Timer number
  82:..//common/src/lpc17xx_timer.c ****  * @param[in]	usec Time in microseconds
  83:..//common/src/lpc17xx_timer.c ****  * @return 		The number of required clock ticks to give the time delay
  84:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
  85:..//common/src/lpc17xx_timer.c **** uint32_t converUSecToVal (uint32_t timernum, uint32_t usec)
  86:..//common/src/lpc17xx_timer.c **** {
 116              		.loc 1 86 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 16
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120 0000 80B5     		push	{r7, lr}
 121              	.LCFI3:
 122              		.cfi_def_cfa_offset 8
 123 0002 84B0     		sub	sp, sp, #16
 124              	.LCFI4:
 125              		.cfi_def_cfa_offset 24
 126 0004 00AF     		add	r7, sp, #0
 127              		.cfi_offset 14, -4
 128              		.cfi_offset 7, -8
 129              	.LCFI5:
 130              		.cfi_def_cfa_register 7
 131 0006 7860     		str	r0, [r7, #4]
 132 0008 3960     		str	r1, [r7, #0]
  87:..//common/src/lpc17xx_timer.c **** 	uint64_t clkdlycnt;
  88:..//common/src/lpc17xx_timer.c **** 
  89:..//common/src/lpc17xx_timer.c **** 	// Get Pclock of timer
  90:..//common/src/lpc17xx_timer.c **** 	clkdlycnt = (uint64_t) getPClock(timernum);
 133              		.loc 1 90 0
 134 000a 7868     		ldr	r0, [r7, #4]
 135 000c 40F20003 		movw	r3, #:lower16:getPClock
 136 0010 C0F20003 		movt	r3, #:upper16:getPClock
 137 0014 9847     		blx	r3
 138 0016 0346     		mov	r3, r0
 139 0018 1A46     		mov	r2, r3
 140 001a 4FF00003 		mov	r3, #0
 141 001e C7E90223 		strd	r2, [r7, #8]
  91:..//common/src/lpc17xx_timer.c **** 
  92:..//common/src/lpc17xx_timer.c **** 	clkdlycnt = (clkdlycnt * usec) / 1000000;
 142              		.loc 1 92 0
 143 0022 3B68     		ldr	r3, [r7, #0]
 144 0024 1A46     		mov	r2, r3
 145 0026 4FF00003 		mov	r3, #0
 146 002a B968     		ldr	r1, [r7, #8]
 147 002c 03FB01F1 		mul	r1, r3, r1
 148 0030 F868     		ldr	r0, [r7, #12]
 149 0032 02FB00F0 		mul	r0, r2, r0
 150 0036 0144     		add	r1, r1, r0
 151 0038 B868     		ldr	r0, [r7, #8]
 152 003a A0FB0223 		umull	r2, r3, r0, r2
 153 003e 1944     		add	r1, r1, r3
 154 0040 0B46     		mov	r3, r1
 155 0042 40F2000C 		movw	ip, #:lower16:__aeabi_uldivmod
 156 0046 C0F2000C 		movt	ip, #:upper16:__aeabi_uldivmod
 157 004a 1046     		mov	r0, r2
 158 004c 1946     		mov	r1, r3
 159 004e 4FF47422 		mov	r2, #999424
 160 0052 02F51072 		add	r2, r2, #576
 161 0056 4FF00003 		mov	r3, #0
 162 005a E047     		blx	ip
 163 005c 0246     		mov	r2, r0
 164 005e 0B46     		mov	r3, r1
 165 0060 C7E90223 		strd	r2, [r7, #8]
  93:..//common/src/lpc17xx_timer.c **** 	return (uint32_t) clkdlycnt;
 166              		.loc 1 93 0
 167 0064 BB68     		ldr	r3, [r7, #8]
  94:..//common/src/lpc17xx_timer.c **** }
 168              		.loc 1 94 0
 169 0066 1846     		mov	r0, r3
 170 0068 07F11007 		add	r7, r7, #16
 171 006c BD46     		mov	sp, r7
 172 006e 80BD     		pop	{r7, pc}
 173              		.cfi_endproc
 174              	.LFE30:
 176              		.section	.text.converPtrToTimeNum,"ax",%progbits
 177              		.align	2
 178              		.thumb
 179              		.thumb_func
 181              	converPtrToTimeNum:
 182              	.LFB31:
  95:..//common/src/lpc17xx_timer.c **** 
  96:..//common/src/lpc17xx_timer.c **** 
  97:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
  98:..//common/src/lpc17xx_timer.c ****  * @brief 		Convert a timer register pointer to a timer number
  99:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Pointer to LPC_TIM_TypeDef, should be:
 100:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM0: TIMER0 peripheral
 101:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 102:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 103:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 104:..//common/src/lpc17xx_timer.c ****  * @return 		The timer number (0 to 3) or -1 if register pointer is bad
 105:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 106:..//common/src/lpc17xx_timer.c **** uint32_t converPtrToTimeNum (LPC_TIM_TypeDef *TIMx)
 107:..//common/src/lpc17xx_timer.c **** {
 183              		.loc 1 107 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 16
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 188 0000 80B4     		push	{r7}
 189              	.LCFI6:
 190              		.cfi_def_cfa_offset 4
 191 0002 85B0     		sub	sp, sp, #20
 192              	.LCFI7:
 193              		.cfi_def_cfa_offset 24
 194 0004 00AF     		add	r7, sp, #0
 195              		.cfi_offset 7, -4
 196              	.LCFI8:
 197              		.cfi_def_cfa_register 7
 198 0006 7860     		str	r0, [r7, #4]
 108:..//common/src/lpc17xx_timer.c **** 	//LIB_MCU_BUG uint32_t tnum = -1;
 109:..//common/src/lpc17xx_timer.c **** 	uint32_t tnum = (uint32_t)-1;
 199              		.loc 1 109 0
 200 0008 4FF0FF33 		mov	r3, #-1
 201 000c FB60     		str	r3, [r7, #12]
 110:..//common/src/lpc17xx_timer.c **** 
 111:..//common/src/lpc17xx_timer.c **** 	if (TIMx == LPC_TIM0)
 202              		.loc 1 111 0
 203 000e 7A68     		ldr	r2, [r7, #4]
 204 0010 44F20003 		movw	r3, #:lower16:1073758208
 205 0014 C4F20003 		movt	r3, #:upper16:1073758208
 206 0018 9A42     		cmp	r2, r3
 207 001a 03D1     		bne	.L12
 112:..//common/src/lpc17xx_timer.c **** 	{
 113:..//common/src/lpc17xx_timer.c **** 		tnum = 0;
 208              		.loc 1 113 0
 209 001c 4FF00003 		mov	r3, #0
 210 0020 FB60     		str	r3, [r7, #12]
 211 0022 1FE0     		b	.L13
 212              	.L12:
 114:..//common/src/lpc17xx_timer.c **** 	}
 115:..//common/src/lpc17xx_timer.c **** 	else if (TIMx == LPC_TIM1)
 213              		.loc 1 115 0
 214 0024 7A68     		ldr	r2, [r7, #4]
 215 0026 48F20003 		movw	r3, #:lower16:1073774592
 216 002a C4F20003 		movt	r3, #:upper16:1073774592
 217 002e 9A42     		cmp	r2, r3
 218 0030 03D1     		bne	.L14
 116:..//common/src/lpc17xx_timer.c **** 	{
 117:..//common/src/lpc17xx_timer.c **** 		tnum = 1;
 219              		.loc 1 117 0
 220 0032 4FF00103 		mov	r3, #1
 221 0036 FB60     		str	r3, [r7, #12]
 222 0038 14E0     		b	.L13
 223              	.L14:
 118:..//common/src/lpc17xx_timer.c **** 	}
 119:..//common/src/lpc17xx_timer.c **** 	else if (TIMx == LPC_TIM2)
 224              		.loc 1 119 0
 225 003a 7A68     		ldr	r2, [r7, #4]
 226 003c 40F20003 		movw	r3, #:lower16:1074331648
 227 0040 C4F20903 		movt	r3, #:upper16:1074331648
 228 0044 9A42     		cmp	r2, r3
 229 0046 03D1     		bne	.L15
 120:..//common/src/lpc17xx_timer.c **** 	{
 121:..//common/src/lpc17xx_timer.c **** 		tnum = 2;
 230              		.loc 1 121 0
 231 0048 4FF00203 		mov	r3, #2
 232 004c FB60     		str	r3, [r7, #12]
 233 004e 09E0     		b	.L13
 234              	.L15:
 122:..//common/src/lpc17xx_timer.c **** 	}
 123:..//common/src/lpc17xx_timer.c **** 	else if (TIMx == LPC_TIM3)
 235              		.loc 1 123 0
 236 0050 7A68     		ldr	r2, [r7, #4]
 237 0052 44F20003 		movw	r3, #:lower16:1074348032
 238 0056 C4F20903 		movt	r3, #:upper16:1074348032
 239 005a 9A42     		cmp	r2, r3
 240 005c 02D1     		bne	.L13
 124:..//common/src/lpc17xx_timer.c **** 	{
 125:..//common/src/lpc17xx_timer.c **** 		tnum = 3;
 241              		.loc 1 125 0
 242 005e 4FF00303 		mov	r3, #3
 243 0062 FB60     		str	r3, [r7, #12]
 244              	.L13:
 126:..//common/src/lpc17xx_timer.c **** 	}
 127:..//common/src/lpc17xx_timer.c **** 
 128:..//common/src/lpc17xx_timer.c **** 	return tnum;
 245              		.loc 1 128 0
 246 0064 FB68     		ldr	r3, [r7, #12]
 129:..//common/src/lpc17xx_timer.c **** }
 247              		.loc 1 129 0
 248 0066 1846     		mov	r0, r3
 249 0068 07F11407 		add	r7, r7, #20
 250 006c BD46     		mov	sp, r7
 251 006e 80BC     		pop	{r7}
 252 0070 7047     		bx	lr
 253              		.cfi_endproc
 254              	.LFE31:
 256 0072 00BF     		.section	.text.TIM_GetIntStatus,"ax",%progbits
 257              		.align	2
 258              		.global	TIM_GetIntStatus
 259              		.thumb
 260              		.thumb_func
 262              	TIM_GetIntStatus:
 263              	.LFB32:
 130:..//common/src/lpc17xx_timer.c **** 
 131:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 132:..//common/src/lpc17xx_timer.c ****  * @brief 		Convert a timer register pointer to a timer number
 133:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Pointer to LPC_TIM_TypeDef, should be:
 134:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM0: TIMER0 peripheral
 135:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 136:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 137:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 138:..//common/src/lpc17xx_timer.c ****  * @return 		The timer number (0 to 3) or -1 if register pointer is bad
 139:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 140:..//common/src/lpc17xx_timer.c **** /* uint32_t converPtrToTimeNum (LPC_TIM_TypeDef *TIMx)
 141:..//common/src/lpc17xx_timer.c **** {
 142:..//common/src/lpc17xx_timer.c **** 	uint32_t tnum = -1;
 143:..//common/src/lpc17xx_timer.c **** 
 144:..//common/src/lpc17xx_timer.c **** 	if (TIMx == LPC_TIM0)
 145:..//common/src/lpc17xx_timer.c **** 	{
 146:..//common/src/lpc17xx_timer.c **** 		tnum = 0;
 147:..//common/src/lpc17xx_timer.c **** 	}
 148:..//common/src/lpc17xx_timer.c **** 	else if (TIMx == LPC_TIM1)
 149:..//common/src/lpc17xx_timer.c **** 	{
 150:..//common/src/lpc17xx_timer.c **** 		tnum = 1;
 151:..//common/src/lpc17xx_timer.c **** 	}
 152:..//common/src/lpc17xx_timer.c **** 	else if (TIMx == LPC_TIM2)
 153:..//common/src/lpc17xx_timer.c **** 	{
 154:..//common/src/lpc17xx_timer.c **** 		tnum = 2;
 155:..//common/src/lpc17xx_timer.c **** 	}
 156:..//common/src/lpc17xx_timer.c **** 	else if (TIMx == LPC_TIM3)
 157:..//common/src/lpc17xx_timer.c **** 	{
 158:..//common/src/lpc17xx_timer.c **** 		tnum = 3;
 159:..//common/src/lpc17xx_timer.c **** 	}
 160:..//common/src/lpc17xx_timer.c **** 
 161:..//common/src/lpc17xx_timer.c **** 	return tnum;
 162:..//common/src/lpc17xx_timer.c **** } */
 163:..//common/src/lpc17xx_timer.c **** 
 164:..//common/src/lpc17xx_timer.c **** /* End of Private Functions ---------------------------------------------------- */
 165:..//common/src/lpc17xx_timer.c **** 
 166:..//common/src/lpc17xx_timer.c **** 
 167:..//common/src/lpc17xx_timer.c **** /* Public Functions ----------------------------------------------------------- */
 168:..//common/src/lpc17xx_timer.c **** /** @addtogroup TIM_Public_Functions
 169:..//common/src/lpc17xx_timer.c ****  * @{
 170:..//common/src/lpc17xx_timer.c ****  */
 171:..//common/src/lpc17xx_timer.c **** 
 172:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 173:..//common/src/lpc17xx_timer.c ****  * @brief 		Get Interrupt Status
 174:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Timer selection, should be:
 175:..//common/src/lpc17xx_timer.c ****  *   			- LPC_TIM0: TIMER0 peripheral
 176:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 177:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 178:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 179:..//common/src/lpc17xx_timer.c ****  * @param[in]	IntFlag: interrupt type, should be:
 180:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR0_INT: Interrupt for Match channel 0
 181:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR1_INT: Interrupt for Match channel 1
 182:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR2_INT: Interrupt for Match channel 2
 183:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR3_INT: Interrupt for Match channel 3
 184:..//common/src/lpc17xx_timer.c ****  * 				- TIM_CR0_INT: Interrupt for Capture channel 0
 185:..//common/src/lpc17xx_timer.c ****  * 				- TIM_CR1_INT: Interrupt for Capture channel 1
 186:..//common/src/lpc17xx_timer.c ****  * @return 		FlagStatus
 187:..//common/src/lpc17xx_timer.c ****  * 				- SET : interrupt
 188:..//common/src/lpc17xx_timer.c ****  * 				- RESET : no interrupt
 189:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 190:..//common/src/lpc17xx_timer.c **** FlagStatus TIM_GetIntStatus(LPC_TIM_TypeDef *TIMx, TIM_INT_TYPE IntFlag)
 191:..//common/src/lpc17xx_timer.c **** {
 264              		.loc 1 191 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 16
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269 0000 80B4     		push	{r7}
 270              	.LCFI9:
 271              		.cfi_def_cfa_offset 4
 272 0002 85B0     		sub	sp, sp, #20
 273              	.LCFI10:
 274              		.cfi_def_cfa_offset 24
 275 0004 00AF     		add	r7, sp, #0
 276              		.cfi_offset 7, -4
 277              	.LCFI11:
 278              		.cfi_def_cfa_register 7
 279 0006 7860     		str	r0, [r7, #4]
 280 0008 0B46     		mov	r3, r1
 281 000a FB70     		strb	r3, [r7, #3]
 192:..//common/src/lpc17xx_timer.c **** 	uint8_t temp;
 193:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 194:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIM_INT_TYPE(IntFlag));
 195:..//common/src/lpc17xx_timer.c **** 	temp = (TIMx->IR)& TIM_IR_CLR(IntFlag);
 282              		.loc 1 195 0
 283 000c 7B68     		ldr	r3, [r7, #4]
 284 000e 1B68     		ldr	r3, [r3, #0]
 285 0010 DAB2     		uxtb	r2, r3
 286 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 287 0014 4FF00101 		mov	r1, #1
 288 0018 01FA03F3 		lsl	r3, r1, r3
 289 001c DBB2     		uxtb	r3, r3
 290 001e 02EA0303 		and	r3, r2, r3
 291 0022 FB73     		strb	r3, [r7, #15]
 196:..//common/src/lpc17xx_timer.c **** 	if (temp)
 292              		.loc 1 196 0
 293 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 294 0026 002B     		cmp	r3, #0
 295 0028 02D0     		beq	.L18
 197:..//common/src/lpc17xx_timer.c **** 		return SET;
 296              		.loc 1 197 0
 297 002a 4FF00103 		mov	r3, #1
 298 002e 01E0     		b	.L19
 299              	.L18:
 198:..//common/src/lpc17xx_timer.c **** 
 199:..//common/src/lpc17xx_timer.c **** 	return RESET;
 300              		.loc 1 199 0
 301 0030 4FF00003 		mov	r3, #0
 302              	.L19:
 200:..//common/src/lpc17xx_timer.c **** 
 201:..//common/src/lpc17xx_timer.c **** }
 303              		.loc 1 201 0
 304 0034 1846     		mov	r0, r3
 305 0036 07F11407 		add	r7, r7, #20
 306 003a BD46     		mov	sp, r7
 307 003c 80BC     		pop	{r7}
 308 003e 7047     		bx	lr
 309              		.cfi_endproc
 310              	.LFE32:
 312              		.section	.text.TIM_GetIntCaptureStatus,"ax",%progbits
 313              		.align	2
 314              		.global	TIM_GetIntCaptureStatus
 315              		.thumb
 316              		.thumb_func
 318              	TIM_GetIntCaptureStatus:
 319              	.LFB33:
 202:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 203:..//common/src/lpc17xx_timer.c ****  * @brief 		Get Capture Interrupt Status
 204:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Timer selection, should be:
 205:..//common/src/lpc17xx_timer.c ****  *  	   		- LPC_TIM0: TIMER0 peripheral
 206:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 207:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 208:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 209:..//common/src/lpc17xx_timer.c ****  * @param[in]	IntFlag: interrupt type, should be:
 210:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR0_INT: Interrupt for Match channel 0
 211:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR1_INT: Interrupt for Match channel 1
 212:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR2_INT: Interrupt for Match channel 2
 213:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR3_INT: Interrupt for Match channel 3
 214:..//common/src/lpc17xx_timer.c ****  * 				- TIM_CR0_INT: Interrupt for Capture channel 0
 215:..//common/src/lpc17xx_timer.c ****  * 				- TIM_CR1_INT: Interrupt for Capture channel 1
 216:..//common/src/lpc17xx_timer.c ****  * @return 		FlagStatus
 217:..//common/src/lpc17xx_timer.c ****  * 				- SET : interrupt
 218:..//common/src/lpc17xx_timer.c ****  * 				- RESET : no interrupt
 219:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 220:..//common/src/lpc17xx_timer.c **** FlagStatus TIM_GetIntCaptureStatus(LPC_TIM_TypeDef *TIMx, TIM_INT_TYPE IntFlag)
 221:..//common/src/lpc17xx_timer.c **** {
 320              		.loc 1 221 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 16
 323              		@ frame_needed = 1, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325 0000 80B4     		push	{r7}
 326              	.LCFI12:
 327              		.cfi_def_cfa_offset 4
 328 0002 85B0     		sub	sp, sp, #20
 329              	.LCFI13:
 330              		.cfi_def_cfa_offset 24
 331 0004 00AF     		add	r7, sp, #0
 332              		.cfi_offset 7, -4
 333              	.LCFI14:
 334              		.cfi_def_cfa_register 7
 335 0006 7860     		str	r0, [r7, #4]
 336 0008 0B46     		mov	r3, r1
 337 000a FB70     		strb	r3, [r7, #3]
 222:..//common/src/lpc17xx_timer.c **** 	uint8_t temp;
 223:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 224:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIM_INT_TYPE(IntFlag));
 225:..//common/src/lpc17xx_timer.c **** 	temp = (TIMx->IR) & (1<<(4+IntFlag));
 338              		.loc 1 225 0
 339 000c 7B68     		ldr	r3, [r7, #4]
 340 000e 1B68     		ldr	r3, [r3, #0]
 341 0010 DAB2     		uxtb	r2, r3
 342 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 343 0014 03F10403 		add	r3, r3, #4
 344 0018 4FF00101 		mov	r1, #1
 345 001c 01FA03F3 		lsl	r3, r1, r3
 346 0020 DBB2     		uxtb	r3, r3
 347 0022 02EA0303 		and	r3, r2, r3
 348 0026 FB73     		strb	r3, [r7, #15]
 226:..//common/src/lpc17xx_timer.c **** 	if(temp)
 349              		.loc 1 226 0
 350 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 351 002a 002B     		cmp	r3, #0
 352 002c 02D0     		beq	.L22
 227:..//common/src/lpc17xx_timer.c **** 		return SET;
 353              		.loc 1 227 0
 354 002e 4FF00103 		mov	r3, #1
 355 0032 01E0     		b	.L23
 356              	.L22:
 228:..//common/src/lpc17xx_timer.c **** 	return RESET;
 357              		.loc 1 228 0
 358 0034 4FF00003 		mov	r3, #0
 359              	.L23:
 229:..//common/src/lpc17xx_timer.c **** }
 360              		.loc 1 229 0
 361 0038 1846     		mov	r0, r3
 362 003a 07F11407 		add	r7, r7, #20
 363 003e BD46     		mov	sp, r7
 364 0040 80BC     		pop	{r7}
 365 0042 7047     		bx	lr
 366              		.cfi_endproc
 367              	.LFE33:
 369              		.section	.text.TIM_ClearIntPending,"ax",%progbits
 370              		.align	2
 371              		.global	TIM_ClearIntPending
 372              		.thumb
 373              		.thumb_func
 375              	TIM_ClearIntPending:
 376              	.LFB34:
 230:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 231:..//common/src/lpc17xx_timer.c ****  * @brief 		Clear Interrupt pending
 232:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Timer selection, should be:
 233:..//common/src/lpc17xx_timer.c ****  *    			- LPC_TIM0: TIMER0 peripheral
 234:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 235:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 236:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 237:..//common/src/lpc17xx_timer.c ****  * @param[in]	IntFlag: interrupt type, should be:
 238:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR0_INT: Interrupt for Match channel 0
 239:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR1_INT: Interrupt for Match channel 1
 240:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR2_INT: Interrupt for Match channel 2
 241:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR3_INT: Interrupt for Match channel 3
 242:..//common/src/lpc17xx_timer.c ****  * 				- TIM_CR0_INT: Interrupt for Capture channel 0
 243:..//common/src/lpc17xx_timer.c ****  * 				- TIM_CR1_INT: Interrupt for Capture channel 1
 244:..//common/src/lpc17xx_timer.c ****  * @return 		None
 245:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 246:..//common/src/lpc17xx_timer.c **** void TIM_ClearIntPending(LPC_TIM_TypeDef *TIMx, TIM_INT_TYPE IntFlag)
 247:..//common/src/lpc17xx_timer.c **** {
 377              		.loc 1 247 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 8
 380              		@ frame_needed = 1, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 382 0000 80B4     		push	{r7}
 383              	.LCFI15:
 384              		.cfi_def_cfa_offset 4
 385 0002 83B0     		sub	sp, sp, #12
 386              	.LCFI16:
 387              		.cfi_def_cfa_offset 16
 388 0004 00AF     		add	r7, sp, #0
 389              		.cfi_offset 7, -4
 390              	.LCFI17:
 391              		.cfi_def_cfa_register 7
 392 0006 7860     		str	r0, [r7, #4]
 393 0008 0B46     		mov	r3, r1
 394 000a FB70     		strb	r3, [r7, #3]
 248:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 249:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIM_INT_TYPE(IntFlag));
 250:..//common/src/lpc17xx_timer.c **** 	TIMx->IR |= TIM_IR_CLR(IntFlag);
 395              		.loc 1 250 0
 396 000c 7B68     		ldr	r3, [r7, #4]
 397 000e 1A68     		ldr	r2, [r3, #0]
 398 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 399 0012 4FF00101 		mov	r1, #1
 400 0016 01FA03F3 		lsl	r3, r1, r3
 401 001a 42EA0302 		orr	r2, r2, r3
 402 001e 7B68     		ldr	r3, [r7, #4]
 403 0020 1A60     		str	r2, [r3, #0]
 251:..//common/src/lpc17xx_timer.c **** }
 404              		.loc 1 251 0
 405 0022 07F10C07 		add	r7, r7, #12
 406 0026 BD46     		mov	sp, r7
 407 0028 80BC     		pop	{r7}
 408 002a 7047     		bx	lr
 409              		.cfi_endproc
 410              	.LFE34:
 412              		.section	.text.TIM_ClearIntCapturePending,"ax",%progbits
 413              		.align	2
 414              		.global	TIM_ClearIntCapturePending
 415              		.thumb
 416              		.thumb_func
 418              	TIM_ClearIntCapturePending:
 419              	.LFB35:
 252:..//common/src/lpc17xx_timer.c **** 
 253:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 254:..//common/src/lpc17xx_timer.c ****  * @brief 		Clear Capture Interrupt pending
 255:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Timer selection, should be
 256:..//common/src/lpc17xx_timer.c ****  *    			- LPC_TIM0: TIMER0 peripheral
 257:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 258:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 259:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 260:..//common/src/lpc17xx_timer.c ****  * @param[in]	IntFlag interrupt type, should be:
 261:..//common/src/lpc17xx_timer.c ****  *				- TIM_MR0_INT: Interrupt for Match channel 0
 262:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR1_INT: Interrupt for Match channel 1
 263:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR2_INT: Interrupt for Match channel 2
 264:..//common/src/lpc17xx_timer.c ****  * 				- TIM_MR3_INT: Interrupt for Match channel 3
 265:..//common/src/lpc17xx_timer.c ****  * 				- TIM_CR0_INT: Interrupt for Capture channel 0
 266:..//common/src/lpc17xx_timer.c ****  * 				- TIM_CR1_INT: Interrupt for Capture channel 1
 267:..//common/src/lpc17xx_timer.c ****  * @return 		None
 268:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 269:..//common/src/lpc17xx_timer.c **** void TIM_ClearIntCapturePending(LPC_TIM_TypeDef *TIMx, TIM_INT_TYPE IntFlag)
 270:..//common/src/lpc17xx_timer.c **** {
 420              		.loc 1 270 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 8
 423              		@ frame_needed = 1, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425 0000 80B4     		push	{r7}
 426              	.LCFI18:
 427              		.cfi_def_cfa_offset 4
 428 0002 83B0     		sub	sp, sp, #12
 429              	.LCFI19:
 430              		.cfi_def_cfa_offset 16
 431 0004 00AF     		add	r7, sp, #0
 432              		.cfi_offset 7, -4
 433              	.LCFI20:
 434              		.cfi_def_cfa_register 7
 435 0006 7860     		str	r0, [r7, #4]
 436 0008 0B46     		mov	r3, r1
 437 000a FB70     		strb	r3, [r7, #3]
 271:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 272:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIM_INT_TYPE(IntFlag));
 273:..//common/src/lpc17xx_timer.c **** 	TIMx->IR |= (1<<(4+IntFlag));
 438              		.loc 1 273 0
 439 000c 7B68     		ldr	r3, [r7, #4]
 440 000e 1A68     		ldr	r2, [r3, #0]
 441 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 442 0012 03F10403 		add	r3, r3, #4
 443 0016 4FF00101 		mov	r1, #1
 444 001a 01FA03F3 		lsl	r3, r1, r3
 445 001e 42EA0302 		orr	r2, r2, r3
 446 0022 7B68     		ldr	r3, [r7, #4]
 447 0024 1A60     		str	r2, [r3, #0]
 274:..//common/src/lpc17xx_timer.c **** }
 448              		.loc 1 274 0
 449 0026 07F10C07 		add	r7, r7, #12
 450 002a BD46     		mov	sp, r7
 451 002c 80BC     		pop	{r7}
 452 002e 7047     		bx	lr
 453              		.cfi_endproc
 454              	.LFE35:
 456              		.section	.text.TIM_ConfigStructInit,"ax",%progbits
 457              		.align	2
 458              		.global	TIM_ConfigStructInit
 459              		.thumb
 460              		.thumb_func
 462              	TIM_ConfigStructInit:
 463              	.LFB36:
 275:..//common/src/lpc17xx_timer.c **** 
 276:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 277:..//common/src/lpc17xx_timer.c ****  * @brief 		Configuration for Timer at initial time
 278:..//common/src/lpc17xx_timer.c ****  * @param[in] 	TimerCounterMode timer counter mode, should be:
 279:..//common/src/lpc17xx_timer.c ****  * 				- TIM_TIMER_MODE: Timer mode
 280:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_RISING_MODE: Counter rising mode
 281:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_FALLING_MODE: Counter falling mode
 282:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_ANY_MODE:Counter on both edges
 283:..//common/src/lpc17xx_timer.c ****  * @param[in] 	TIM_ConfigStruct pointer to TIM_TIMERCFG_Type or
 284:..//common/src/lpc17xx_timer.c ****  * 				TIM_COUNTERCFG_Type
 285:..//common/src/lpc17xx_timer.c ****  * @return 		None
 286:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 287:..//common/src/lpc17xx_timer.c **** void TIM_ConfigStructInit(TIM_MODE_OPT TimerCounterMode, void *TIM_ConfigStruct)
 288:..//common/src/lpc17xx_timer.c **** {
 464              		.loc 1 288 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 16
 467              		@ frame_needed = 1, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 469 0000 80B4     		push	{r7}
 470              	.LCFI21:
 471              		.cfi_def_cfa_offset 4
 472 0002 85B0     		sub	sp, sp, #20
 473              	.LCFI22:
 474              		.cfi_def_cfa_offset 24
 475 0004 00AF     		add	r7, sp, #0
 476              		.cfi_offset 7, -4
 477              	.LCFI23:
 478              		.cfi_def_cfa_register 7
 479 0006 0346     		mov	r3, r0
 480 0008 3960     		str	r1, [r7, #0]
 481 000a FB71     		strb	r3, [r7, #7]
 289:..//common/src/lpc17xx_timer.c **** 	if (TimerCounterMode == TIM_TIMER_MODE )
 482              		.loc 1 289 0
 483 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 484 000e 002B     		cmp	r3, #0
 485 0010 0AD1     		bne	.L30
 486              	.LBB2:
 290:..//common/src/lpc17xx_timer.c **** 	{
 291:..//common/src/lpc17xx_timer.c **** 		TIM_TIMERCFG_Type * pTimeCfg = (TIM_TIMERCFG_Type *)TIM_ConfigStruct;
 487              		.loc 1 291 0
 488 0012 3B68     		ldr	r3, [r7, #0]
 489 0014 BB60     		str	r3, [r7, #8]
 292:..//common/src/lpc17xx_timer.c **** 		pTimeCfg->PrescaleOption = TIM_PRESCALE_USVAL;
 490              		.loc 1 292 0
 491 0016 BB68     		ldr	r3, [r7, #8]
 492 0018 4FF00102 		mov	r2, #1
 493 001c 1A70     		strb	r2, [r3, #0]
 293:..//common/src/lpc17xx_timer.c **** 		pTimeCfg->PrescaleValue = 1;
 494              		.loc 1 293 0
 495 001e BB68     		ldr	r3, [r7, #8]
 496 0020 4FF00102 		mov	r2, #1
 497 0024 5A60     		str	r2, [r3, #4]
 498 0026 05E0     		b	.L32
 499              	.L30:
 500              	.LBE2:
 501              	.LBB3:
 294:..//common/src/lpc17xx_timer.c **** 	}
 295:..//common/src/lpc17xx_timer.c **** 	else
 296:..//common/src/lpc17xx_timer.c **** 	{
 297:..//common/src/lpc17xx_timer.c **** 		TIM_COUNTERCFG_Type * pCounterCfg = (TIM_COUNTERCFG_Type *)TIM_ConfigStruct;
 502              		.loc 1 297 0
 503 0028 3B68     		ldr	r3, [r7, #0]
 504 002a FB60     		str	r3, [r7, #12]
 298:..//common/src/lpc17xx_timer.c **** 		pCounterCfg->CountInputSelect = TIM_COUNTER_INCAP0;
 505              		.loc 1 298 0
 506 002c FB68     		ldr	r3, [r7, #12]
 507 002e 4FF00002 		mov	r2, #0
 508 0032 5A70     		strb	r2, [r3, #1]
 509              	.L32:
 510              	.LBE3:
 299:..//common/src/lpc17xx_timer.c **** 	}
 300:..//common/src/lpc17xx_timer.c **** }
 511              		.loc 1 300 0
 512 0034 07F11407 		add	r7, r7, #20
 513 0038 BD46     		mov	sp, r7
 514 003a 80BC     		pop	{r7}
 515 003c 7047     		bx	lr
 516              		.cfi_endproc
 517              	.LFE36:
 519 003e 00BF     		.section	.text.TIM_Init,"ax",%progbits
 520              		.align	2
 521              		.global	TIM_Init
 522              		.thumb
 523              		.thumb_func
 525              	TIM_Init:
 526              	.LFB37:
 301:..//common/src/lpc17xx_timer.c **** 
 302:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 303:..//common/src/lpc17xx_timer.c ****  * @brief 		Initial Timer/Counter device
 304:..//common/src/lpc17xx_timer.c ****  * 				 	Set Clock frequency for Timer
 305:..//common/src/lpc17xx_timer.c ****  * 					Set initial configuration for Timer
 306:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx  Timer selection, should be:
 307:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM0: TIMER0 peripheral
 308:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 309:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 310:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 311:..//common/src/lpc17xx_timer.c ****  * @param[in]	TimerCounterMode Timer counter mode, should be:
 312:..//common/src/lpc17xx_timer.c ****  * 				- TIM_TIMER_MODE: Timer mode
 313:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_RISING_MODE: Counter rising mode
 314:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_FALLING_MODE: Counter falling mode
 315:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_ANY_MODE:Counter on both edges
 316:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIM_ConfigStruct pointer to TIM_TIMERCFG_Type
 317:..//common/src/lpc17xx_timer.c ****  * 				that contains the configuration information for the
 318:..//common/src/lpc17xx_timer.c ****  *                    specified Timer peripheral.
 319:..//common/src/lpc17xx_timer.c ****  * @return 		None
 320:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 321:..//common/src/lpc17xx_timer.c **** void TIM_Init(LPC_TIM_TypeDef *TIMx, TIM_MODE_OPT TimerCounterMode, void *TIM_ConfigStruct)
 322:..//common/src/lpc17xx_timer.c **** {
 527              		.loc 1 322 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 24
 530              		@ frame_needed = 1, uses_anonymous_args = 0
 531 0000 80B5     		push	{r7, lr}
 532              	.LCFI24:
 533              		.cfi_def_cfa_offset 8
 534 0002 86B0     		sub	sp, sp, #24
 535              	.LCFI25:
 536              		.cfi_def_cfa_offset 32
 537 0004 00AF     		add	r7, sp, #0
 538              		.cfi_offset 14, -4
 539              		.cfi_offset 7, -8
 540              	.LCFI26:
 541              		.cfi_def_cfa_register 7
 542 0006 F860     		str	r0, [r7, #12]
 543 0008 0B46     		mov	r3, r1
 544 000a 7A60     		str	r2, [r7, #4]
 545 000c FB72     		strb	r3, [r7, #11]
 323:..//common/src/lpc17xx_timer.c **** 	TIM_TIMERCFG_Type *pTimeCfg;
 324:..//common/src/lpc17xx_timer.c **** 	TIM_COUNTERCFG_Type *pCounterCfg;
 325:..//common/src/lpc17xx_timer.c **** 
 326:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 327:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIM_MODE_OPT(TimerCounterMode));
 328:..//common/src/lpc17xx_timer.c **** 
 329:..//common/src/lpc17xx_timer.c **** 	//set power
 330:..//common/src/lpc17xx_timer.c **** 
 331:..//common/src/lpc17xx_timer.c **** 	if (TIMx== LPC_TIM0)
 546              		.loc 1 331 0
 547 000e FA68     		ldr	r2, [r7, #12]
 548 0010 44F20003 		movw	r3, #:lower16:1073758208
 549 0014 C4F20003 		movt	r3, #:upper16:1073758208
 550 0018 9A42     		cmp	r2, r3
 551 001a 12D1     		bne	.L34
 332:..//common/src/lpc17xx_timer.c **** 	{
 333:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM0, ENABLE);
 552              		.loc 1 333 0
 553 001c 4FF00200 		mov	r0, #2
 554 0020 4FF00101 		mov	r1, #1
 555 0024 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 556 0028 C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 557 002c 9847     		blx	r3
 334:..//common/src/lpc17xx_timer.c **** 		//PCLK_Timer0 = CCLK/1
 335:..//common/src/lpc17xx_timer.c **** 		CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_TIMER0, CLKPWR_PCLKSEL_CCLK_DIV_1);
 558              		.loc 1 335 0
 559 002e 4FF00200 		mov	r0, #2
 560 0032 4FF00101 		mov	r1, #1
 561 0036 40F20003 		movw	r3, #:lower16:CLKPWR_SetPCLKDiv
 562 003a C0F20003 		movt	r3, #:upper16:CLKPWR_SetPCLKDiv
 563 003e 9847     		blx	r3
 564 0040 4CE0     		b	.L35
 565              	.L34:
 336:..//common/src/lpc17xx_timer.c **** 	}
 337:..//common/src/lpc17xx_timer.c **** 	else if (TIMx== LPC_TIM1)
 566              		.loc 1 337 0
 567 0042 FA68     		ldr	r2, [r7, #12]
 568 0044 48F20003 		movw	r3, #:lower16:1073774592
 569 0048 C4F20003 		movt	r3, #:upper16:1073774592
 570 004c 9A42     		cmp	r2, r3
 571 004e 12D1     		bne	.L36
 338:..//common/src/lpc17xx_timer.c **** 	{
 339:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM1, ENABLE);
 572              		.loc 1 339 0
 573 0050 4FF00400 		mov	r0, #4
 574 0054 4FF00101 		mov	r1, #1
 575 0058 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 576 005c C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 577 0060 9847     		blx	r3
 340:..//common/src/lpc17xx_timer.c **** 		//PCLK_Timer1 = CCLK/1
 341:..//common/src/lpc17xx_timer.c **** 		CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_TIMER1, CLKPWR_PCLKSEL_CCLK_DIV_1);
 578              		.loc 1 341 0
 579 0062 4FF00400 		mov	r0, #4
 580 0066 4FF00101 		mov	r1, #1
 581 006a 40F20003 		movw	r3, #:lower16:CLKPWR_SetPCLKDiv
 582 006e C0F20003 		movt	r3, #:upper16:CLKPWR_SetPCLKDiv
 583 0072 9847     		blx	r3
 584 0074 32E0     		b	.L35
 585              	.L36:
 342:..//common/src/lpc17xx_timer.c **** 	}
 343:..//common/src/lpc17xx_timer.c **** 
 344:..//common/src/lpc17xx_timer.c **** 	else if (TIMx== LPC_TIM2)
 586              		.loc 1 344 0
 587 0076 FA68     		ldr	r2, [r7, #12]
 588 0078 40F20003 		movw	r3, #:lower16:1074331648
 589 007c C4F20903 		movt	r3, #:upper16:1074331648
 590 0080 9A42     		cmp	r2, r3
 591 0082 12D1     		bne	.L37
 345:..//common/src/lpc17xx_timer.c **** 	{
 346:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM2, ENABLE);
 592              		.loc 1 346 0
 593 0084 4FF48000 		mov	r0, #4194304
 594 0088 4FF00101 		mov	r1, #1
 595 008c 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 596 0090 C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 597 0094 9847     		blx	r3
 347:..//common/src/lpc17xx_timer.c **** 		//PCLK_Timer2= CCLK/1
 348:..//common/src/lpc17xx_timer.c **** 		CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_TIMER2, CLKPWR_PCLKSEL_CCLK_DIV_1);
 598              		.loc 1 348 0
 599 0096 4FF02C00 		mov	r0, #44
 600 009a 4FF00101 		mov	r1, #1
 601 009e 40F20003 		movw	r3, #:lower16:CLKPWR_SetPCLKDiv
 602 00a2 C0F20003 		movt	r3, #:upper16:CLKPWR_SetPCLKDiv
 603 00a6 9847     		blx	r3
 604 00a8 18E0     		b	.L35
 605              	.L37:
 349:..//common/src/lpc17xx_timer.c **** 	}
 350:..//common/src/lpc17xx_timer.c **** 	else if (TIMx== LPC_TIM3)
 606              		.loc 1 350 0
 607 00aa FA68     		ldr	r2, [r7, #12]
 608 00ac 44F20003 		movw	r3, #:lower16:1074348032
 609 00b0 C4F20903 		movt	r3, #:upper16:1074348032
 610 00b4 9A42     		cmp	r2, r3
 611 00b6 11D1     		bne	.L35
 351:..//common/src/lpc17xx_timer.c **** 	{
 352:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM3, ENABLE);
 612              		.loc 1 352 0
 613 00b8 4FF40000 		mov	r0, #8388608
 614 00bc 4FF00101 		mov	r1, #1
 615 00c0 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 616 00c4 C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 617 00c8 9847     		blx	r3
 353:..//common/src/lpc17xx_timer.c **** 		//PCLK_Timer3= CCLK/1
 354:..//common/src/lpc17xx_timer.c **** 		CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_TIMER3, CLKPWR_PCLKSEL_CCLK_DIV_1);
 618              		.loc 1 354 0
 619 00ca 4FF02E00 		mov	r0, #46
 620 00ce 4FF00101 		mov	r1, #1
 621 00d2 40F20003 		movw	r3, #:lower16:CLKPWR_SetPCLKDiv
 622 00d6 C0F20003 		movt	r3, #:upper16:CLKPWR_SetPCLKDiv
 623 00da 9847     		blx	r3
 624              	.L35:
 355:..//common/src/lpc17xx_timer.c **** 	}
 356:..//common/src/lpc17xx_timer.c **** 
 357:..//common/src/lpc17xx_timer.c **** 	//LIB_MCU_BUG TIMx->CCR &= ~TIM_CTCR_MODE_MASK;
 358:..//common/src/lpc17xx_timer.c **** 	//LIB_MCU_BUG TIMx->CCR |= TIM_TIMER_MODE;
 359:..//common/src/lpc17xx_timer.c **** 
 360:..//common/src/lpc17xx_timer.c **** 	// TIMx->CTCR &= ~TIM_CTCR_MODE_MASK;
 361:..//common/src/lpc17xx_timer.c **** 	// TIMx->CTCR |= TimerCounterMode;
 362:..//common/src/lpc17xx_timer.c **** 
 363:..//common/src/lpc17xx_timer.c **** 	TIMx->TC =0;
 625              		.loc 1 363 0
 626 00dc FB68     		ldr	r3, [r7, #12]
 627 00de 4FF00002 		mov	r2, #0
 628 00e2 9A60     		str	r2, [r3, #8]
 364:..//common/src/lpc17xx_timer.c **** 	TIMx->PC =0;
 629              		.loc 1 364 0
 630 00e4 FB68     		ldr	r3, [r7, #12]
 631 00e6 4FF00002 		mov	r2, #0
 632 00ea 1A61     		str	r2, [r3, #16]
 365:..//common/src/lpc17xx_timer.c **** 	TIMx->PR =0;
 633              		.loc 1 365 0
 634 00ec FB68     		ldr	r3, [r7, #12]
 635 00ee 4FF00002 		mov	r2, #0
 636 00f2 DA60     		str	r2, [r3, #12]
 366:..//common/src/lpc17xx_timer.c **** 	TIMx->TCR |= (1<<1); //Reset Counter
 637              		.loc 1 366 0
 638 00f4 FB68     		ldr	r3, [r7, #12]
 639 00f6 5B68     		ldr	r3, [r3, #4]
 640 00f8 43F00202 		orr	r2, r3, #2
 641 00fc FB68     		ldr	r3, [r7, #12]
 642 00fe 5A60     		str	r2, [r3, #4]
 367:..//common/src/lpc17xx_timer.c **** 	TIMx->TCR &= ~(1<<1); //release reset
 643              		.loc 1 367 0
 644 0100 FB68     		ldr	r3, [r7, #12]
 645 0102 5B68     		ldr	r3, [r3, #4]
 646 0104 23F00202 		bic	r2, r3, #2
 647 0108 FB68     		ldr	r3, [r7, #12]
 648 010a 5A60     		str	r2, [r3, #4]
 368:..//common/src/lpc17xx_timer.c **** 
 369:..//common/src/lpc17xx_timer.c **** 	if (TimerCounterMode == TIM_TIMER_MODE )
 649              		.loc 1 369 0
 650 010c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 651 010e 002B     		cmp	r3, #0
 652 0110 22D1     		bne	.L38
 370:..//common/src/lpc17xx_timer.c **** 	{
 371:..//common/src/lpc17xx_timer.c **** 		pTimeCfg = (TIM_TIMERCFG_Type *)TIM_ConfigStruct;
 653              		.loc 1 371 0
 654 0112 7B68     		ldr	r3, [r7, #4]
 655 0114 3B61     		str	r3, [r7, #16]
 372:..//common/src/lpc17xx_timer.c **** 		if (pTimeCfg->PrescaleOption  == TIM_PRESCALE_TICKVAL)
 656              		.loc 1 372 0
 657 0116 3B69     		ldr	r3, [r7, #16]
 658 0118 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 659 011a 002B     		cmp	r3, #0
 660 011c 06D1     		bne	.L39
 373:..//common/src/lpc17xx_timer.c **** 		{
 374:..//common/src/lpc17xx_timer.c **** 			TIMx->PR   = pTimeCfg->PrescaleValue -1  ;
 661              		.loc 1 374 0
 662 011e 3B69     		ldr	r3, [r7, #16]
 663 0120 5B68     		ldr	r3, [r3, #4]
 664 0122 03F1FF32 		add	r2, r3, #-1
 665 0126 FB68     		ldr	r3, [r7, #12]
 666 0128 DA60     		str	r2, [r3, #12]
 375:..//common/src/lpc17xx_timer.c **** 		}
 376:..//common/src/lpc17xx_timer.c **** 		else
 377:..//common/src/lpc17xx_timer.c **** 		{
 378:..//common/src/lpc17xx_timer.c **** 			TIMx->PR   = converUSecToVal (converPtrToTimeNum(TIMx),pTimeCfg->PrescaleValue)-1;
 667              		.loc 1 378 0
 668 012a 27E0     		b	.L41
 669              	.L39:
 670 012c F868     		ldr	r0, [r7, #12]
 671 012e 40F20003 		movw	r3, #:lower16:converPtrToTimeNum
 672 0132 C0F20003 		movt	r3, #:upper16:converPtrToTimeNum
 673 0136 9847     		blx	r3
 674 0138 0246     		mov	r2, r0
 675 013a 3B69     		ldr	r3, [r7, #16]
 676 013c 5B68     		ldr	r3, [r3, #4]
 677 013e 1046     		mov	r0, r2
 678 0140 1946     		mov	r1, r3
 679 0142 40F20003 		movw	r3, #:lower16:converUSecToVal
 680 0146 C0F20003 		movt	r3, #:upper16:converUSecToVal
 681 014a 9847     		blx	r3
 682 014c 0346     		mov	r3, r0
 683 014e 03F1FF32 		add	r2, r3, #-1
 684 0152 FB68     		ldr	r3, [r7, #12]
 685 0154 DA60     		str	r2, [r3, #12]
 686 0156 11E0     		b	.L41
 687              	.L38:
 379:..//common/src/lpc17xx_timer.c **** 		}
 380:..//common/src/lpc17xx_timer.c **** 	}
 381:..//common/src/lpc17xx_timer.c **** 	else
 382:..//common/src/lpc17xx_timer.c **** 	{
 383:..//common/src/lpc17xx_timer.c **** 
 384:..//common/src/lpc17xx_timer.c **** 		pCounterCfg = (TIM_COUNTERCFG_Type *)TIM_ConfigStruct;
 688              		.loc 1 384 0
 689 0158 7B68     		ldr	r3, [r7, #4]
 690 015a 7B61     		str	r3, [r7, #20]
 385:..//common/src/lpc17xx_timer.c **** 		//LIB_MCU_BUG TIMx->CCR  &= ~TIM_CTCR_INPUT_MASK;
 386:..//common/src/lpc17xx_timer.c **** 		TIMx->CTCR &= ~TIM_CTCR_INPUT_MASK;
 691              		.loc 1 386 0
 692 015c FB68     		ldr	r3, [r7, #12]
 693 015e 1B6F     		ldr	r3, [r3, #112]
 694 0160 23F00C02 		bic	r2, r3, #12
 695 0164 FB68     		ldr	r3, [r7, #12]
 696 0166 1A67     		str	r2, [r3, #112]
 387:..//common/src/lpc17xx_timer.c **** 		if (pCounterCfg->CountInputSelect == TIM_COUNTER_INCAP1)
 697              		.loc 1 387 0
 698 0168 7B69     		ldr	r3, [r7, #20]
 699 016a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 700 016c 012B     		cmp	r3, #1
 701 016e 05D1     		bne	.L41
 388:..//common/src/lpc17xx_timer.c **** 		{
 389:..//common/src/lpc17xx_timer.c **** 			//LIB_MCU_BUG TIMx->CCR |= _BIT(2);
 390:..//common/src/lpc17xx_timer.c **** 			TIMx->CTCR |= _BIT(2);
 702              		.loc 1 390 0
 703 0170 FB68     		ldr	r3, [r7, #12]
 704 0172 1B6F     		ldr	r3, [r3, #112]
 705 0174 43F00402 		orr	r2, r3, #4
 706 0178 FB68     		ldr	r3, [r7, #12]
 707 017a 1A67     		str	r2, [r3, #112]
 708              	.L41:
 391:..//common/src/lpc17xx_timer.c **** 		}
 392:..//common/src/lpc17xx_timer.c **** 	}
 393:..//common/src/lpc17xx_timer.c **** 
 394:..//common/src/lpc17xx_timer.c **** 	// Clear interrupt pending
 395:..//common/src/lpc17xx_timer.c **** 	TIMx->IR = 0xFFFFFFFF;
 709              		.loc 1 395 0
 710 017c FB68     		ldr	r3, [r7, #12]
 711 017e 4FF0FF32 		mov	r2, #-1
 712 0182 1A60     		str	r2, [r3, #0]
 396:..//common/src/lpc17xx_timer.c **** 
 397:..//common/src/lpc17xx_timer.c **** }
 713              		.loc 1 397 0
 714 0184 07F11807 		add	r7, r7, #24
 715 0188 BD46     		mov	sp, r7
 716 018a 80BD     		pop	{r7, pc}
 717              		.cfi_endproc
 718              	.LFE37:
 720              		.section	.text.TIM_DeInit,"ax",%progbits
 721              		.align	2
 722              		.global	TIM_DeInit
 723              		.thumb
 724              		.thumb_func
 726              	TIM_DeInit:
 727              	.LFB38:
 398:..//common/src/lpc17xx_timer.c **** 
 399:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 400:..//common/src/lpc17xx_timer.c ****  * @brief 		Initial Timer/Counter device
 401:..//common/src/lpc17xx_timer.c ****  * 				 	Set Clock frequency for Timer
 402:..//common/src/lpc17xx_timer.c ****  * 					Set initial configuration for Timer
 403:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx  Timer selection, should be:
 404:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM0: TIMER0 peripheral
 405:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 406:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 407:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 408:..//common/src/lpc17xx_timer.c ****  * @param[in]	TimerCounterMode Timer counter mode, should be:
 409:..//common/src/lpc17xx_timer.c ****  * 				- TIM_TIMER_MODE: Timer mode
 410:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_RISING_MODE: Counter rising mode
 411:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_FALLING_MODE: Counter falling mode
 412:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_ANY_MODE:Counter on both edges
 413:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIM_ConfigStruct pointer to TIM_TIMERCFG_Type
 414:..//common/src/lpc17xx_timer.c ****  * 				that contains the configuration information for the
 415:..//common/src/lpc17xx_timer.c ****  *                    specified Timer peripheral.
 416:..//common/src/lpc17xx_timer.c ****  * @return 		None
 417:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 418:..//common/src/lpc17xx_timer.c **** /*void TIM_Init(LPC_TIM_TypeDef *TIMx, TIM_MODE_OPT TimerCounterMode, void *TIM_ConfigStruct)
 419:..//common/src/lpc17xx_timer.c **** {
 420:..//common/src/lpc17xx_timer.c **** 	TIM_TIMERCFG_Type *pTimeCfg;
 421:..//common/src/lpc17xx_timer.c **** 	TIM_COUNTERCFG_Type *pCounterCfg;
 422:..//common/src/lpc17xx_timer.c **** 
 423:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 424:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIM_MODE_OPT(TimerCounterMode));
 425:..//common/src/lpc17xx_timer.c **** 
 426:..//common/src/lpc17xx_timer.c **** 	//set power
 427:..//common/src/lpc17xx_timer.c **** 	if (TIMx== LPC_TIM0)
 428:..//common/src/lpc17xx_timer.c **** 	{
 429:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM0, ENABLE);
 430:..//common/src/lpc17xx_timer.c **** 		CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_TIMER0, CLKPWR_PCLKSEL_CCLK_DIV_4);
 431:..//common/src/lpc17xx_timer.c **** 	}
 432:..//common/src/lpc17xx_timer.c **** 	else if (TIMx== LPC_TIM1)
 433:..//common/src/lpc17xx_timer.c **** 	{
 434:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM1, ENABLE);
 435:..//common/src/lpc17xx_timer.c **** 		CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_TIMER1, CLKPWR_PCLKSEL_CCLK_DIV_4);
 436:..//common/src/lpc17xx_timer.c **** 
 437:..//common/src/lpc17xx_timer.c **** 	}
 438:..//common/src/lpc17xx_timer.c **** 
 439:..//common/src/lpc17xx_timer.c **** 	else if (TIMx== LPC_TIM2)
 440:..//common/src/lpc17xx_timer.c **** 	{
 441:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM2, ENABLE);
 442:..//common/src/lpc17xx_timer.c **** 		CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_TIMER2, CLKPWR_PCLKSEL_CCLK_DIV_4);
 443:..//common/src/lpc17xx_timer.c **** 	}
 444:..//common/src/lpc17xx_timer.c **** 	else if (TIMx== LPC_TIM3)
 445:..//common/src/lpc17xx_timer.c **** 	{
 446:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM3, ENABLE);
 447:..//common/src/lpc17xx_timer.c **** 		CLKPWR_SetPCLKDiv (CLKPWR_PCLKSEL_TIMER3, CLKPWR_PCLKSEL_CCLK_DIV_4);
 448:..//common/src/lpc17xx_timer.c **** 
 449:..//common/src/lpc17xx_timer.c **** 	}
 450:..//common/src/lpc17xx_timer.c **** 
 451:..//common/src/lpc17xx_timer.c **** 	TIMx->CCR &= ~TIM_CTCR_MODE_MASK;
 452:..//common/src/lpc17xx_timer.c **** 	TIMx->CCR |= TIM_TIMER_MODE;
 453:..//common/src/lpc17xx_timer.c **** 
 454:..//common/src/lpc17xx_timer.c **** 	TIMx->TC =0;
 455:..//common/src/lpc17xx_timer.c **** 	TIMx->PC =0;
 456:..//common/src/lpc17xx_timer.c **** 	TIMx->PR =0;
 457:..//common/src/lpc17xx_timer.c **** 	TIMx->TCR |= (1<<1); //Reset Counter
 458:..//common/src/lpc17xx_timer.c **** 	TIMx->TCR &= ~(1<<1); //release reset
 459:..//common/src/lpc17xx_timer.c **** 	if (TimerCounterMode == TIM_TIMER_MODE )
 460:..//common/src/lpc17xx_timer.c **** 	{
 461:..//common/src/lpc17xx_timer.c **** 		pTimeCfg = (TIM_TIMERCFG_Type *)TIM_ConfigStruct;
 462:..//common/src/lpc17xx_timer.c **** 		if (pTimeCfg->PrescaleOption  == TIM_PRESCALE_TICKVAL)
 463:..//common/src/lpc17xx_timer.c **** 		{
 464:..//common/src/lpc17xx_timer.c **** 			TIMx->PR   = pTimeCfg->PrescaleValue -1  ;
 465:..//common/src/lpc17xx_timer.c **** 		}
 466:..//common/src/lpc17xx_timer.c **** 		else
 467:..//common/src/lpc17xx_timer.c **** 		{
 468:..//common/src/lpc17xx_timer.c **** 			TIMx->PR   = converUSecToVal (converPtrToTimeNum(TIMx),pTimeCfg->PrescaleValue)-1;
 469:..//common/src/lpc17xx_timer.c **** 		}
 470:..//common/src/lpc17xx_timer.c **** 	}
 471:..//common/src/lpc17xx_timer.c **** 	else
 472:..//common/src/lpc17xx_timer.c **** 	{
 473:..//common/src/lpc17xx_timer.c **** 
 474:..//common/src/lpc17xx_timer.c **** 		pCounterCfg = (TIM_COUNTERCFG_Type *)TIM_ConfigStruct;
 475:..//common/src/lpc17xx_timer.c **** 		TIMx->CCR  &= ~TIM_CTCR_INPUT_MASK;
 476:..//common/src/lpc17xx_timer.c **** 		if (pCounterCfg->CountInputSelect == TIM_COUNTER_INCAP1)
 477:..//common/src/lpc17xx_timer.c **** 			TIMx->CCR |= _BIT(2);
 478:..//common/src/lpc17xx_timer.c **** 	}
 479:..//common/src/lpc17xx_timer.c **** 
 480:..//common/src/lpc17xx_timer.c **** 	// Clear interrupt pending
 481:..//common/src/lpc17xx_timer.c **** 	TIMx->IR = 0xFFFFFFFF;
 482:..//common/src/lpc17xx_timer.c **** 
 483:..//common/src/lpc17xx_timer.c **** } */
 484:..//common/src/lpc17xx_timer.c **** 
 485:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 486:..//common/src/lpc17xx_timer.c ****  * @brief 		Close Timer/Counter device
 487:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx  Pointer to timer device, should be:
 488:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM0: TIMER0 peripheral
 489:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 490:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 491:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 492:..//common/src/lpc17xx_timer.c ****  * @return 		None
 493:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 494:..//common/src/lpc17xx_timer.c **** void TIM_DeInit (LPC_TIM_TypeDef *TIMx)
 495:..//common/src/lpc17xx_timer.c **** {
 728              		.loc 1 495 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 8
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732 0000 80B5     		push	{r7, lr}
 733              	.LCFI27:
 734              		.cfi_def_cfa_offset 8
 735 0002 82B0     		sub	sp, sp, #8
 736              	.LCFI28:
 737              		.cfi_def_cfa_offset 16
 738 0004 00AF     		add	r7, sp, #0
 739              		.cfi_offset 14, -4
 740              		.cfi_offset 7, -8
 741              	.LCFI29:
 742              		.cfi_def_cfa_register 7
 743 0006 7860     		str	r0, [r7, #4]
 496:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 497:..//common/src/lpc17xx_timer.c **** 	// Disable timer/counter
 498:..//common/src/lpc17xx_timer.c **** 	TIMx->TCR = 0x00;
 744              		.loc 1 498 0
 745 0008 7B68     		ldr	r3, [r7, #4]
 746 000a 4FF00002 		mov	r2, #0
 747 000e 5A60     		str	r2, [r3, #4]
 499:..//common/src/lpc17xx_timer.c **** 
 500:..//common/src/lpc17xx_timer.c **** 	// Disable power
 501:..//common/src/lpc17xx_timer.c **** 	if (TIMx== LPC_TIM0)
 748              		.loc 1 501 0
 749 0010 7A68     		ldr	r2, [r7, #4]
 750 0012 44F20003 		movw	r3, #:lower16:1073758208
 751 0016 C4F20003 		movt	r3, #:upper16:1073758208
 752 001a 9A42     		cmp	r2, r3
 753 001c 09D1     		bne	.L44
 502:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM0, DISABLE);
 754              		.loc 1 502 0
 755 001e 4FF00200 		mov	r0, #2
 756 0022 4FF00001 		mov	r1, #0
 757 0026 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 758 002a C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 759 002e 9847     		blx	r3
 760 0030 31E0     		b	.L48
 761              	.L44:
 503:..//common/src/lpc17xx_timer.c **** 
 504:..//common/src/lpc17xx_timer.c **** 	else if (TIMx== LPC_TIM1)
 762              		.loc 1 504 0
 763 0032 7A68     		ldr	r2, [r7, #4]
 764 0034 48F20003 		movw	r3, #:lower16:1073774592
 765 0038 C4F20003 		movt	r3, #:upper16:1073774592
 766 003c 9A42     		cmp	r2, r3
 767 003e 09D1     		bne	.L46
 505:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM1, DISABLE);
 768              		.loc 1 505 0
 769 0040 4FF00400 		mov	r0, #4
 770 0044 4FF00001 		mov	r1, #0
 771 0048 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 772 004c C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 773 0050 9847     		blx	r3
 774 0052 20E0     		b	.L48
 775              	.L46:
 506:..//common/src/lpc17xx_timer.c **** 
 507:..//common/src/lpc17xx_timer.c **** 	else if (TIMx== LPC_TIM2)
 776              		.loc 1 507 0
 777 0054 7A68     		ldr	r2, [r7, #4]
 778 0056 40F20003 		movw	r3, #:lower16:1074331648
 779 005a C4F20903 		movt	r3, #:upper16:1074331648
 780 005e 9A42     		cmp	r2, r3
 781 0060 09D1     		bne	.L47
 508:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM2, DISABLE);
 782              		.loc 1 508 0
 783 0062 4FF48000 		mov	r0, #4194304
 784 0066 4FF00001 		mov	r1, #0
 785 006a 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 786 006e C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 787 0072 9847     		blx	r3
 788 0074 0FE0     		b	.L48
 789              	.L47:
 509:..//common/src/lpc17xx_timer.c **** 
 510:..//common/src/lpc17xx_timer.c **** 	else if (TIMx== LPC_TIM3)
 790              		.loc 1 510 0
 791 0076 7A68     		ldr	r2, [r7, #4]
 792 0078 44F20003 		movw	r3, #:lower16:1074348032
 793 007c C4F20903 		movt	r3, #:upper16:1074348032
 794 0080 9A42     		cmp	r2, r3
 795 0082 08D1     		bne	.L48
 511:..//common/src/lpc17xx_timer.c **** 		CLKPWR_ConfigPPWR (CLKPWR_PCONP_PCTIM2, DISABLE);
 796              		.loc 1 511 0
 797 0084 4FF48000 		mov	r0, #4194304
 798 0088 4FF00001 		mov	r1, #0
 799 008c 40F20003 		movw	r3, #:lower16:CLKPWR_ConfigPPWR
 800 0090 C0F20003 		movt	r3, #:upper16:CLKPWR_ConfigPPWR
 801 0094 9847     		blx	r3
 802              	.L48:
 512:..//common/src/lpc17xx_timer.c **** 
 513:..//common/src/lpc17xx_timer.c **** }
 803              		.loc 1 513 0
 804 0096 07F10807 		add	r7, r7, #8
 805 009a BD46     		mov	sp, r7
 806 009c 80BD     		pop	{r7, pc}
 807              		.cfi_endproc
 808              	.LFE38:
 810 009e 00BF     		.section	.text.TIM_Cmd,"ax",%progbits
 811              		.align	2
 812              		.global	TIM_Cmd
 813              		.thumb
 814              		.thumb_func
 816              	TIM_Cmd:
 817              	.LFB39:
 514:..//common/src/lpc17xx_timer.c **** 
 515:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 516:..//common/src/lpc17xx_timer.c ****  * @brief	 	Start/Stop Timer/Counter device
 517:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Pointer to timer device, should be:
 518:..//common/src/lpc17xx_timer.c ****  *  			- LPC_TIM0: TIMER0 peripheral
 519:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 520:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 521:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 522:..//common/src/lpc17xx_timer.c ****  * @param[in]	NewState
 523:..//common/src/lpc17xx_timer.c ****  * 				-	ENABLE  : set timer enable
 524:..//common/src/lpc17xx_timer.c ****  * 				-	DISABLE : disable timer
 525:..//common/src/lpc17xx_timer.c ****  * @return 		None
 526:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 527:..//common/src/lpc17xx_timer.c **** void TIM_Cmd(LPC_TIM_TypeDef *TIMx, FunctionalState NewState)
 528:..//common/src/lpc17xx_timer.c **** {
 818              		.loc 1 528 0
 819              		.cfi_startproc
 820              		@ args = 0, pretend = 0, frame = 8
 821              		@ frame_needed = 1, uses_anonymous_args = 0
 822              		@ link register save eliminated.
 823 0000 80B4     		push	{r7}
 824              	.LCFI30:
 825              		.cfi_def_cfa_offset 4
 826 0002 83B0     		sub	sp, sp, #12
 827              	.LCFI31:
 828              		.cfi_def_cfa_offset 16
 829 0004 00AF     		add	r7, sp, #0
 830              		.cfi_offset 7, -4
 831              	.LCFI32:
 832              		.cfi_def_cfa_register 7
 833 0006 7860     		str	r0, [r7, #4]
 834 0008 0B46     		mov	r3, r1
 835 000a FB70     		strb	r3, [r7, #3]
 529:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 530:..//common/src/lpc17xx_timer.c **** 	if (NewState == ENABLE)
 836              		.loc 1 530 0
 837 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 838 000e 012B     		cmp	r3, #1
 839 0010 06D1     		bne	.L50
 531:..//common/src/lpc17xx_timer.c **** 	{
 532:..//common/src/lpc17xx_timer.c **** 		TIMx->TCR	|=  TIM_ENABLE;
 840              		.loc 1 532 0
 841 0012 7B68     		ldr	r3, [r7, #4]
 842 0014 5B68     		ldr	r3, [r3, #4]
 843 0016 43F00102 		orr	r2, r3, #1
 844 001a 7B68     		ldr	r3, [r7, #4]
 845 001c 5A60     		str	r2, [r3, #4]
 846 001e 05E0     		b	.L52
 847              	.L50:
 533:..//common/src/lpc17xx_timer.c **** 	}
 534:..//common/src/lpc17xx_timer.c **** 	else
 535:..//common/src/lpc17xx_timer.c **** 	{
 536:..//common/src/lpc17xx_timer.c **** 		TIMx->TCR &= ~TIM_ENABLE;
 848              		.loc 1 536 0
 849 0020 7B68     		ldr	r3, [r7, #4]
 850 0022 5B68     		ldr	r3, [r3, #4]
 851 0024 23F00102 		bic	r2, r3, #1
 852 0028 7B68     		ldr	r3, [r7, #4]
 853 002a 5A60     		str	r2, [r3, #4]
 854              	.L52:
 537:..//common/src/lpc17xx_timer.c **** 	}
 538:..//common/src/lpc17xx_timer.c **** }
 855              		.loc 1 538 0
 856 002c 07F10C07 		add	r7, r7, #12
 857 0030 BD46     		mov	sp, r7
 858 0032 80BC     		pop	{r7}
 859 0034 7047     		bx	lr
 860              		.cfi_endproc
 861              	.LFE39:
 863 0036 00BF     		.section	.text.TIM_ResetCounter,"ax",%progbits
 864              		.align	2
 865              		.global	TIM_ResetCounter
 866              		.thumb
 867              		.thumb_func
 869              	TIM_ResetCounter:
 870              	.LFB40:
 539:..//common/src/lpc17xx_timer.c **** 
 540:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 541:..//common/src/lpc17xx_timer.c ****  * @brief 		Reset Timer/Counter device,
 542:..//common/src/lpc17xx_timer.c ****  * 					Make TC and PC are synchronously reset on the next
 543:..//common/src/lpc17xx_timer.c ****  * 					positive edge of PCLK
 544:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Pointer to timer device, should be:
 545:..//common/src/lpc17xx_timer.c ****  *   			- LPC_TIM0: TIMER0 peripheral
 546:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 547:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 548:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 549:..//common/src/lpc17xx_timer.c ****  * @return 		None
 550:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 551:..//common/src/lpc17xx_timer.c **** void TIM_ResetCounter(LPC_TIM_TypeDef *TIMx)
 552:..//common/src/lpc17xx_timer.c **** {
 871              		.loc 1 552 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 8
 874              		@ frame_needed = 1, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 876 0000 80B4     		push	{r7}
 877              	.LCFI33:
 878              		.cfi_def_cfa_offset 4
 879 0002 83B0     		sub	sp, sp, #12
 880              	.LCFI34:
 881              		.cfi_def_cfa_offset 16
 882 0004 00AF     		add	r7, sp, #0
 883              		.cfi_offset 7, -4
 884              	.LCFI35:
 885              		.cfi_def_cfa_register 7
 886 0006 7860     		str	r0, [r7, #4]
 553:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 554:..//common/src/lpc17xx_timer.c **** 	TIMx->TCR |= TIM_RESET;
 887              		.loc 1 554 0
 888 0008 7B68     		ldr	r3, [r7, #4]
 889 000a 5B68     		ldr	r3, [r3, #4]
 890 000c 43F00202 		orr	r2, r3, #2
 891 0010 7B68     		ldr	r3, [r7, #4]
 892 0012 5A60     		str	r2, [r3, #4]
 555:..//common/src/lpc17xx_timer.c **** 	TIMx->TCR &= ~TIM_RESET;
 893              		.loc 1 555 0
 894 0014 7B68     		ldr	r3, [r7, #4]
 895 0016 5B68     		ldr	r3, [r3, #4]
 896 0018 23F00202 		bic	r2, r3, #2
 897 001c 7B68     		ldr	r3, [r7, #4]
 898 001e 5A60     		str	r2, [r3, #4]
 556:..//common/src/lpc17xx_timer.c **** }
 899              		.loc 1 556 0
 900 0020 07F10C07 		add	r7, r7, #12
 901 0024 BD46     		mov	sp, r7
 902 0026 80BC     		pop	{r7}
 903 0028 7047     		bx	lr
 904              		.cfi_endproc
 905              	.LFE40:
 907 002a 00BF     		.section	.text.TIM_ConfigMatch,"ax",%progbits
 908              		.align	2
 909              		.global	TIM_ConfigMatch
 910              		.thumb
 911              		.thumb_func
 913              	TIM_ConfigMatch:
 914              	.LFB41:
 557:..//common/src/lpc17xx_timer.c **** 
 558:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 559:..//common/src/lpc17xx_timer.c ****  * @brief 		Configuration for Match register
 560:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Pointer to timer device, should be:
 561:..//common/src/lpc17xx_timer.c ****  *   			- LPC_TIM0: TIMER0 peripheral
 562:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 563:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 564:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 565:..//common/src/lpc17xx_timer.c ****  * @param[in]   TIM_MatchConfigStruct Pointer to TIM_MATCHCFG_Type
 566:..//common/src/lpc17xx_timer.c ****  * 					- MatchChannel : choose channel 0 or 1
 567:..//common/src/lpc17xx_timer.c ****  * 					- IntOnMatch	 : if SET, interrupt will be generated when MRxx match
 568:..//common/src/lpc17xx_timer.c ****  * 									the value in TC
 569:..//common/src/lpc17xx_timer.c ****  * 					- StopOnMatch	 : if SET, TC and PC will be stopped whenM Rxx match
 570:..//common/src/lpc17xx_timer.c ****  * 									the value in TC
 571:..//common/src/lpc17xx_timer.c ****  * 					- ResetOnMatch : if SET, Reset on MR0 when MRxx match
 572:..//common/src/lpc17xx_timer.c ****  * 									the value in TC
 573:..//common/src/lpc17xx_timer.c ****  * 					-ExtMatchOutputType: Select output for external match
 574:..//common/src/lpc17xx_timer.c ****  * 						 +	 0:	Do nothing for external output pin if match
 575:..//common/src/lpc17xx_timer.c ****  *						 +   1:	Force external output pin to low if match
 576:..//common/src/lpc17xx_timer.c ****  *						 + 	 2: Force external output pin to high if match
 577:..//common/src/lpc17xx_timer.c ****  *						 + 	 3: Toggle external output pin if match
 578:..//common/src/lpc17xx_timer.c ****  *					MatchValue: Set the value to be compared with TC value
 579:..//common/src/lpc17xx_timer.c ****  * @return 		None
 580:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 581:..//common/src/lpc17xx_timer.c **** void TIM_ConfigMatch(LPC_TIM_TypeDef *TIMx, TIM_MATCHCFG_Type *TIM_MatchConfigStruct)
 582:..//common/src/lpc17xx_timer.c **** {
 915              		.loc 1 582 0
 916              		.cfi_startproc
 917              		@ args = 0, pretend = 0, frame = 8
 918              		@ frame_needed = 1, uses_anonymous_args = 0
 919              		@ link register save eliminated.
 920 0000 80B4     		push	{r7}
 921              	.LCFI36:
 922              		.cfi_def_cfa_offset 4
 923 0002 83B0     		sub	sp, sp, #12
 924              	.LCFI37:
 925              		.cfi_def_cfa_offset 16
 926 0004 00AF     		add	r7, sp, #0
 927              		.cfi_offset 7, -4
 928              	.LCFI38:
 929              		.cfi_def_cfa_register 7
 930 0006 7860     		str	r0, [r7, #4]
 931 0008 3960     		str	r1, [r7, #0]
 583:..//common/src/lpc17xx_timer.c **** 
 584:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 585:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIM_EXTMATCH_OPT(TIM_MatchConfigStruct->ExtMatchOutputType));
 586:..//common/src/lpc17xx_timer.c **** 
 587:..//common/src/lpc17xx_timer.c **** 	switch(TIM_MatchConfigStruct->MatchChannel)
 932              		.loc 1 587 0
 933 000a 3B68     		ldr	r3, [r7, #0]
 934 000c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 935 000e 032B     		cmp	r3, #3
 936 0010 1ED8     		bhi	.L56
 937 0012 01A2     		adr	r2, .L61
 938 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 939              		.align	2
 940              	.L61:
 941 0018 29000000 		.word	.L57+1
 942 001c 33000000 		.word	.L58+1
 943 0020 3D000000 		.word	.L59+1
 944 0024 47000000 		.word	.L60+1
 945              	.L57:
 588:..//common/src/lpc17xx_timer.c **** 	{
 589:..//common/src/lpc17xx_timer.c **** 	case 0:
 590:..//common/src/lpc17xx_timer.c **** 		TIMx->MR0 = TIM_MatchConfigStruct->MatchValue;
 946              		.loc 1 590 0
 947 0028 3B68     		ldr	r3, [r7, #0]
 948 002a 9A68     		ldr	r2, [r3, #8]
 949 002c 7B68     		ldr	r3, [r7, #4]
 950 002e 9A61     		str	r2, [r3, #24]
 591:..//common/src/lpc17xx_timer.c **** 		break;
 951              		.loc 1 591 0
 952 0030 0FE0     		b	.L62
 953              	.L58:
 592:..//common/src/lpc17xx_timer.c **** 	case 1:
 593:..//common/src/lpc17xx_timer.c **** 		TIMx->MR1 = TIM_MatchConfigStruct->MatchValue;
 954              		.loc 1 593 0
 955 0032 3B68     		ldr	r3, [r7, #0]
 956 0034 9A68     		ldr	r2, [r3, #8]
 957 0036 7B68     		ldr	r3, [r7, #4]
 958 0038 DA61     		str	r2, [r3, #28]
 594:..//common/src/lpc17xx_timer.c **** 		break;
 959              		.loc 1 594 0
 960 003a 0AE0     		b	.L62
 961              	.L59:
 595:..//common/src/lpc17xx_timer.c **** 	case 2:
 596:..//common/src/lpc17xx_timer.c **** 		TIMx->MR2 = TIM_MatchConfigStruct->MatchValue;
 962              		.loc 1 596 0
 963 003c 3B68     		ldr	r3, [r7, #0]
 964 003e 9A68     		ldr	r2, [r3, #8]
 965 0040 7B68     		ldr	r3, [r7, #4]
 966 0042 1A62     		str	r2, [r3, #32]
 597:..//common/src/lpc17xx_timer.c **** 		break;
 967              		.loc 1 597 0
 968 0044 05E0     		b	.L62
 969              	.L60:
 598:..//common/src/lpc17xx_timer.c **** 	case 3:
 599:..//common/src/lpc17xx_timer.c **** 		TIMx->MR3 = TIM_MatchConfigStruct->MatchValue;
 970              		.loc 1 599 0
 971 0046 3B68     		ldr	r3, [r7, #0]
 972 0048 9A68     		ldr	r2, [r3, #8]
 973 004a 7B68     		ldr	r3, [r7, #4]
 974 004c 5A62     		str	r2, [r3, #36]
 600:..//common/src/lpc17xx_timer.c **** 		break;
 975              		.loc 1 600 0
 976 004e 00E0     		b	.L62
 977              	.L56:
 601:..//common/src/lpc17xx_timer.c **** 	default:
 602:..//common/src/lpc17xx_timer.c **** 		//Error match value
 603:..//common/src/lpc17xx_timer.c **** 		//Error loop
 604:..//common/src/lpc17xx_timer.c **** 		while(1);
 978              		.loc 1 604 0
 979 0050 FEE7     		b	.L56
 980              	.L62:
 605:..//common/src/lpc17xx_timer.c **** 	}
 606:..//common/src/lpc17xx_timer.c **** 	//interrupt on MRn
 607:..//common/src/lpc17xx_timer.c **** 	TIMx->MCR &=~TIM_MCR_CHANNEL_MASKBIT(TIM_MatchConfigStruct->MatchChannel);
 981              		.loc 1 607 0
 982 0052 7B68     		ldr	r3, [r7, #4]
 983 0054 5969     		ldr	r1, [r3, #20]
 984 0056 3B68     		ldr	r3, [r7, #0]
 985 0058 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 986 005a 1A46     		mov	r2, r3
 987 005c 1346     		mov	r3, r2
 988 005e 4FEA4303 		lsl	r3, r3, #1
 989 0062 1344     		add	r3, r3, r2
 990 0064 4FF00702 		mov	r2, #7
 991 0068 02FA03F3 		lsl	r3, r2, r3
 992 006c 6FEA0303 		mvn	r3, r3
 993 0070 01EA0302 		and	r2, r1, r3
 994 0074 7B68     		ldr	r3, [r7, #4]
 995 0076 5A61     		str	r2, [r3, #20]
 608:..//common/src/lpc17xx_timer.c **** 
 609:..//common/src/lpc17xx_timer.c **** 	if (TIM_MatchConfigStruct->IntOnMatch)
 996              		.loc 1 609 0
 997 0078 3B68     		ldr	r3, [r7, #0]
 998 007a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 999 007c 002B     		cmp	r3, #0
 1000 007e 10D0     		beq	.L63
 610:..//common/src/lpc17xx_timer.c **** 		TIMx->MCR |= TIM_INT_ON_MATCH(TIM_MatchConfigStruct->MatchChannel);
 1001              		.loc 1 610 0
 1002 0080 7B68     		ldr	r3, [r7, #4]
 1003 0082 5969     		ldr	r1, [r3, #20]
 1004 0084 3B68     		ldr	r3, [r7, #0]
 1005 0086 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1006 0088 1A46     		mov	r2, r3
 1007 008a 1346     		mov	r3, r2
 1008 008c 4FEA4303 		lsl	r3, r3, #1
 1009 0090 1344     		add	r3, r3, r2
 1010 0092 4FF00102 		mov	r2, #1
 1011 0096 02FA03F3 		lsl	r3, r2, r3
 1012 009a 41EA0302 		orr	r2, r1, r3
 1013 009e 7B68     		ldr	r3, [r7, #4]
 1014 00a0 5A61     		str	r2, [r3, #20]
 1015              	.L63:
 611:..//common/src/lpc17xx_timer.c **** 
 612:..//common/src/lpc17xx_timer.c **** 	//reset on MRn
 613:..//common/src/lpc17xx_timer.c **** 	if (TIM_MatchConfigStruct->ResetOnMatch)
 1016              		.loc 1 613 0
 1017 00a2 3B68     		ldr	r3, [r7, #0]
 1018 00a4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1019 00a6 002B     		cmp	r3, #0
 1020 00a8 12D0     		beq	.L64
 614:..//common/src/lpc17xx_timer.c **** 		TIMx->MCR |= TIM_RESET_ON_MATCH(TIM_MatchConfigStruct->MatchChannel);
 1021              		.loc 1 614 0
 1022 00aa 7B68     		ldr	r3, [r7, #4]
 1023 00ac 5969     		ldr	r1, [r3, #20]
 1024 00ae 3B68     		ldr	r3, [r7, #0]
 1025 00b0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1026 00b2 1A46     		mov	r2, r3
 1027 00b4 1346     		mov	r3, r2
 1028 00b6 4FEA4303 		lsl	r3, r3, #1
 1029 00ba 1344     		add	r3, r3, r2
 1030 00bc 03F10103 		add	r3, r3, #1
 1031 00c0 4FF00102 		mov	r2, #1
 1032 00c4 02FA03F3 		lsl	r3, r2, r3
 1033 00c8 41EA0302 		orr	r2, r1, r3
 1034 00cc 7B68     		ldr	r3, [r7, #4]
 1035 00ce 5A61     		str	r2, [r3, #20]
 1036              	.L64:
 615:..//common/src/lpc17xx_timer.c **** 
 616:..//common/src/lpc17xx_timer.c **** 	//stop on MRn
 617:..//common/src/lpc17xx_timer.c **** 	if (TIM_MatchConfigStruct->StopOnMatch)
 1037              		.loc 1 617 0
 1038 00d0 3B68     		ldr	r3, [r7, #0]
 1039 00d2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1040 00d4 002B     		cmp	r3, #0
 1041 00d6 12D0     		beq	.L65
 618:..//common/src/lpc17xx_timer.c **** 		TIMx->MCR |= TIM_STOP_ON_MATCH(TIM_MatchConfigStruct->MatchChannel);
 1042              		.loc 1 618 0
 1043 00d8 7B68     		ldr	r3, [r7, #4]
 1044 00da 5969     		ldr	r1, [r3, #20]
 1045 00dc 3B68     		ldr	r3, [r7, #0]
 1046 00de 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1047 00e0 1A46     		mov	r2, r3
 1048 00e2 1346     		mov	r3, r2
 1049 00e4 4FEA4303 		lsl	r3, r3, #1
 1050 00e8 1344     		add	r3, r3, r2
 1051 00ea 03F10203 		add	r3, r3, #2
 1052 00ee 4FF00102 		mov	r2, #1
 1053 00f2 02FA03F3 		lsl	r3, r2, r3
 1054 00f6 41EA0302 		orr	r2, r1, r3
 1055 00fa 7B68     		ldr	r3, [r7, #4]
 1056 00fc 5A61     		str	r2, [r3, #20]
 1057              	.L65:
 619:..//common/src/lpc17xx_timer.c **** 
 620:..//common/src/lpc17xx_timer.c **** 	// match output type
 621:..//common/src/lpc17xx_timer.c **** 
 622:..//common/src/lpc17xx_timer.c **** 	TIMx->EMR 	&= ~TIM_EM_MASK(TIM_MatchConfigStruct->MatchChannel);
 1058              		.loc 1 622 0
 1059 00fe 7B68     		ldr	r3, [r7, #4]
 1060 0100 DA6B     		ldr	r2, [r3, #60]
 1061 0102 3B68     		ldr	r3, [r7, #0]
 1062 0104 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1063 0106 4FEA4303 		lsl	r3, r3, #1
 1064 010a 03F10403 		add	r3, r3, #4
 1065 010e 4FF00301 		mov	r1, #3
 1066 0112 01FA03F3 		lsl	r3, r1, r3
 1067 0116 6FEA0303 		mvn	r3, r3
 1068 011a 02EA0302 		and	r2, r2, r3
 1069 011e 7B68     		ldr	r3, [r7, #4]
 1070 0120 DA63     		str	r2, [r3, #60]
 623:..//common/src/lpc17xx_timer.c **** 	TIMx->EMR   |= TIM_EM_SET(TIM_MatchConfigStruct->MatchChannel,TIM_MatchConfigStruct->ExtMatchOutpu
 1071              		.loc 1 623 0
 1072 0122 7B68     		ldr	r3, [r7, #4]
 1073 0124 DA6B     		ldr	r2, [r3, #60]
 1074 0126 3B68     		ldr	r3, [r7, #0]
 1075 0128 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1076 012a 03F00301 		and	r1, r3, #3
 1077 012e 3B68     		ldr	r3, [r7, #0]
 1078 0130 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1079 0132 4FEA4303 		lsl	r3, r3, #1
 1080 0136 03F10403 		add	r3, r3, #4
 1081 013a 01FA03F3 		lsl	r3, r1, r3
 1082 013e 42EA0302 		orr	r2, r2, r3
 1083 0142 7B68     		ldr	r3, [r7, #4]
 1084 0144 DA63     		str	r2, [r3, #60]
 624:..//common/src/lpc17xx_timer.c **** }
 1085              		.loc 1 624 0
 1086 0146 07F10C07 		add	r7, r7, #12
 1087 014a BD46     		mov	sp, r7
 1088 014c 80BC     		pop	{r7}
 1089 014e 7047     		bx	lr
 1090              		.cfi_endproc
 1091              	.LFE41:
 1093              		.section	.rodata
 1094              		.align	2
 1095              	.LC0:
 1096 0000 2E2E2F2F 		.ascii	"..//common/src/lpc17xx_timer.c\000"
 1096      636F6D6D 
 1096      6F6E2F73 
 1096      72632F6C 
 1096      70633137 
 1097 001f 00       		.section	.text.TIM_UpdateMatchValue,"ax",%progbits
 1098              		.align	2
 1099              		.global	TIM_UpdateMatchValue
 1100              		.thumb
 1101              		.thumb_func
 1103              	TIM_UpdateMatchValue:
 1104              	.LFB42:
 625:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 626:..//common/src/lpc17xx_timer.c ****  * @brief 		Update Match value
 627:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Pointer to timer device, should be:
 628:..//common/src/lpc17xx_timer.c ****  *   			- LPC_TIM0: TIMER0 peripheral
 629:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 630:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 631:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 632:..//common/src/lpc17xx_timer.c ****  * @param[in]	MatchChannel	Match channel, should be: 0..3
 633:..//common/src/lpc17xx_timer.c ****  * @param[in]	MatchValue		updated match value
 634:..//common/src/lpc17xx_timer.c ****  * @return 		None
 635:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 636:..//common/src/lpc17xx_timer.c **** void TIM_UpdateMatchValue(LPC_TIM_TypeDef *TIMx,uint8_t MatchChannel, uint32_t MatchValue)
 637:..//common/src/lpc17xx_timer.c **** {
 1105              		.loc 1 637 0
 1106              		.cfi_startproc
 1107              		@ args = 0, pretend = 0, frame = 16
 1108              		@ frame_needed = 1, uses_anonymous_args = 0
 1109 0000 80B5     		push	{r7, lr}
 1110              	.LCFI39:
 1111              		.cfi_def_cfa_offset 8
 1112 0002 84B0     		sub	sp, sp, #16
 1113              	.LCFI40:
 1114              		.cfi_def_cfa_offset 24
 1115 0004 00AF     		add	r7, sp, #0
 1116              		.cfi_offset 14, -4
 1117              		.cfi_offset 7, -8
 1118              	.LCFI41:
 1119              		.cfi_def_cfa_register 7
 1120 0006 F860     		str	r0, [r7, #12]
 1121 0008 0B46     		mov	r3, r1
 1122 000a 7A60     		str	r2, [r7, #4]
 1123 000c FB72     		strb	r3, [r7, #11]
 638:..//common/src/lpc17xx_timer.c **** 	CHECK_PARAM(PARAM_TIMx(TIMx));
 1124              		.loc 1 638 0
 1125 000e FA68     		ldr	r2, [r7, #12]
 1126 0010 44F20003 		movw	r3, #:lower16:1073758208
 1127 0014 C4F20003 		movt	r3, #:upper16:1073758208
 1128 0018 9A42     		cmp	r2, r3
 1129 001a 1FD0     		beq	.L68
 1130 001c FA68     		ldr	r2, [r7, #12]
 1131 001e 48F20003 		movw	r3, #:lower16:1073774592
 1132 0022 C4F20003 		movt	r3, #:upper16:1073774592
 1133 0026 9A42     		cmp	r2, r3
 1134 0028 18D0     		beq	.L68
 1135 002a FA68     		ldr	r2, [r7, #12]
 1136 002c 40F20003 		movw	r3, #:lower16:1074331648
 1137 0030 C4F20903 		movt	r3, #:upper16:1074331648
 1138 0034 9A42     		cmp	r2, r3
 1139 0036 11D0     		beq	.L68
 1140 0038 FA68     		ldr	r2, [r7, #12]
 1141 003a 44F20003 		movw	r3, #:lower16:1074348032
 1142 003e C4F20903 		movt	r3, #:upper16:1074348032
 1143 0042 9A42     		cmp	r2, r3
 1144 0044 0AD0     		beq	.L68
 1145 0046 40F20000 		movw	r0, #:lower16:.LC0
 1146 004a C0F20000 		movt	r0, #:upper16:.LC0
 1147 004e 40F27E21 		movw	r1, #638
 1148 0052 40F20003 		movw	r3, #:lower16:check_failed
 1149 0056 C0F20003 		movt	r3, #:upper16:check_failed
 1150 005a 9847     		blx	r3
 1151              	.L68:
 639:..//common/src/lpc17xx_timer.c **** 	switch(MatchChannel)
 1152              		.loc 1 639 0
 1153 005c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1154 005e 032B     		cmp	r3, #3
 1155 0060 1BD8     		bhi	.L69
 1156 0062 01A2     		adr	r2, .L74
 1157 0064 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1158              		.align	2
 1159              	.L74:
 1160 0068 79000000 		.word	.L70+1
 1161 006c 81000000 		.word	.L71+1
 1162 0070 89000000 		.word	.L72+1
 1163 0074 91000000 		.word	.L73+1
 1164              	.L70:
 640:..//common/src/lpc17xx_timer.c **** 	{
 641:..//common/src/lpc17xx_timer.c **** 	case 0:
 642:..//common/src/lpc17xx_timer.c **** 		TIMx->MR0 = MatchValue;
 1165              		.loc 1 642 0
 1166 0078 FB68     		ldr	r3, [r7, #12]
 1167 007a 7A68     		ldr	r2, [r7, #4]
 1168 007c 9A61     		str	r2, [r3, #24]
 643:..//common/src/lpc17xx_timer.c **** 		break;
 1169              		.loc 1 643 0
 1170 007e 0DE0     		b	.L76
 1171              	.L71:
 644:..//common/src/lpc17xx_timer.c **** 	case 1:
 645:..//common/src/lpc17xx_timer.c **** 		TIMx->MR1 = MatchValue;
 1172              		.loc 1 645 0
 1173 0080 FB68     		ldr	r3, [r7, #12]
 1174 0082 7A68     		ldr	r2, [r7, #4]
 1175 0084 DA61     		str	r2, [r3, #28]
 646:..//common/src/lpc17xx_timer.c **** 		break;
 1176              		.loc 1 646 0
 1177 0086 09E0     		b	.L76
 1178              	.L72:
 647:..//common/src/lpc17xx_timer.c **** 	case 2:
 648:..//common/src/lpc17xx_timer.c **** 		TIMx->MR2 = MatchValue;
 1179              		.loc 1 648 0
 1180 0088 FB68     		ldr	r3, [r7, #12]
 1181 008a 7A68     		ldr	r2, [r7, #4]
 1182 008c 1A62     		str	r2, [r3, #32]
 649:..//common/src/lpc17xx_timer.c **** 		break;
 1183              		.loc 1 649 0
 1184 008e 05E0     		b	.L76
 1185              	.L73:
 650:..//common/src/lpc17xx_timer.c **** 	case 3:
 651:..//common/src/lpc17xx_timer.c **** 		TIMx->MR3 = MatchValue;
 1186              		.loc 1 651 0
 1187 0090 FB68     		ldr	r3, [r7, #12]
 1188 0092 7A68     		ldr	r2, [r7, #4]
 1189 0094 5A62     		str	r2, [r3, #36]
 652:..//common/src/lpc17xx_timer.c **** 		break;
 1190              		.loc 1 652 0
 1191 0096 00BF     		nop
 1192 0098 00E0     		b	.L76
 1193              	.L69:
 653:..//common/src/lpc17xx_timer.c **** 	default:
 654:..//common/src/lpc17xx_timer.c **** 		//Error Loop
 655:..//common/src/lpc17xx_timer.c **** 		while(1);
 1194              		.loc 1 655 0
 1195 009a FEE7     		b	.L69
 1196              	.L76:
 656:..//common/src/lpc17xx_timer.c **** 	}
 657:..//common/src/lpc17xx_timer.c **** 
 658:..//common/src/lpc17xx_timer.c **** }
 1197              		.loc 1 658 0
 1198 009c 07F11007 		add	r7, r7, #16
 1199 00a0 BD46     		mov	sp, r7
 1200 00a2 80BD     		pop	{r7, pc}
 1201              		.cfi_endproc
 1202              	.LFE42:
 1204              		.section	.text.TIM_ConfigCapture,"ax",%progbits
 1205              		.align	2
 1206              		.global	TIM_ConfigCapture
 1207              		.thumb
 1208              		.thumb_func
 1210              	TIM_ConfigCapture:
 1211              	.LFB43:
 659:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 660:..//common/src/lpc17xx_timer.c ****  * @brief 		Configuration for Capture register
 661:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Pointer to timer device, should be:
 662:..//common/src/lpc17xx_timer.c ****  *   			- LPC_TIM0: TIMER0 peripheral
 663:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 664:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 665:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 666:..//common/src/lpc17xx_timer.c ****  * 					- CaptureChannel: set the channel to capture data
 667:..//common/src/lpc17xx_timer.c ****  * 					- RisingEdge    : if SET, Capture at rising edge
 668:..//common/src/lpc17xx_timer.c ****  * 					- FallingEdge	: if SET, Capture at falling edge
 669:..//common/src/lpc17xx_timer.c ****  * 					- IntOnCaption  : if SET, Capture generate interrupt
 670:..//common/src/lpc17xx_timer.c ****  * @param[in]   TIM_CaptureConfigStruct	Pointer to TIM_CAPTURECFG_Type
 671:..//common/src/lpc17xx_timer.c ****  * @return 		None
 672:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 673:..//common/src/lpc17xx_timer.c **** void TIM_ConfigCapture(LPC_TIM_TypeDef *TIMx, TIM_CAPTURECFG_Type *TIM_CaptureConfigStruct)
 674:..//common/src/lpc17xx_timer.c **** {
 1212              		.loc 1 674 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 8
 1215              		@ frame_needed = 1, uses_anonymous_args = 0
 1216 0000 80B5     		push	{r7, lr}
 1217              	.LCFI42:
 1218              		.cfi_def_cfa_offset 8
 1219 0002 82B0     		sub	sp, sp, #8
 1220              	.LCFI43:
 1221              		.cfi_def_cfa_offset 16
 1222 0004 00AF     		add	r7, sp, #0
 1223              		.cfi_offset 14, -4
 1224              		.cfi_offset 7, -8
 1225              	.LCFI44:
 1226              		.cfi_def_cfa_register 7
 1227 0006 7860     		str	r0, [r7, #4]
 1228 0008 3960     		str	r1, [r7, #0]
 675:..//common/src/lpc17xx_timer.c **** 
 676:..//common/src/lpc17xx_timer.c **** 	CHECK_PARAM(PARAM_TIMx(TIMx));
 1229              		.loc 1 676 0
 1230 000a 7A68     		ldr	r2, [r7, #4]
 1231 000c 44F20003 		movw	r3, #:lower16:1073758208
 1232 0010 C4F20003 		movt	r3, #:upper16:1073758208
 1233 0014 9A42     		cmp	r2, r3
 1234 0016 1FD0     		beq	.L78
 1235 0018 7A68     		ldr	r2, [r7, #4]
 1236 001a 48F20003 		movw	r3, #:lower16:1073774592
 1237 001e C4F20003 		movt	r3, #:upper16:1073774592
 1238 0022 9A42     		cmp	r2, r3
 1239 0024 18D0     		beq	.L78
 1240 0026 7A68     		ldr	r2, [r7, #4]
 1241 0028 40F20003 		movw	r3, #:lower16:1074331648
 1242 002c C4F20903 		movt	r3, #:upper16:1074331648
 1243 0030 9A42     		cmp	r2, r3
 1244 0032 11D0     		beq	.L78
 1245 0034 7A68     		ldr	r2, [r7, #4]
 1246 0036 44F20003 		movw	r3, #:lower16:1074348032
 1247 003a C4F20903 		movt	r3, #:upper16:1074348032
 1248 003e 9A42     		cmp	r2, r3
 1249 0040 0AD0     		beq	.L78
 1250 0042 40F20000 		movw	r0, #:lower16:.LC0
 1251 0046 C0F20000 		movt	r0, #:upper16:.LC0
 1252 004a 4FF42971 		mov	r1, #676
 1253 004e 40F20003 		movw	r3, #:lower16:check_failed
 1254 0052 C0F20003 		movt	r3, #:upper16:check_failed
 1255 0056 9847     		blx	r3
 1256              	.L78:
 677:..//common/src/lpc17xx_timer.c **** 	TIMx->CCR &= ~TIM_CCR_CHANNEL_MASKBIT(TIM_CaptureConfigStruct->CaptureChannel);
 1257              		.loc 1 677 0
 1258 0058 7B68     		ldr	r3, [r7, #4]
 1259 005a 996A     		ldr	r1, [r3, #40]
 1260 005c 3B68     		ldr	r3, [r7, #0]
 1261 005e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1262 0060 1A46     		mov	r2, r3
 1263 0062 1346     		mov	r3, r2
 1264 0064 4FEA4303 		lsl	r3, r3, #1
 1265 0068 1344     		add	r3, r3, r2
 1266 006a 4FF00702 		mov	r2, #7
 1267 006e 02FA03F3 		lsl	r3, r2, r3
 1268 0072 6FEA0303 		mvn	r3, r3
 1269 0076 01EA0302 		and	r2, r1, r3
 1270 007a 7B68     		ldr	r3, [r7, #4]
 1271 007c 9A62     		str	r2, [r3, #40]
 678:..//common/src/lpc17xx_timer.c **** 
 679:..//common/src/lpc17xx_timer.c **** 	if (TIM_CaptureConfigStruct->RisingEdge)
 1272              		.loc 1 679 0
 1273 007e 3B68     		ldr	r3, [r7, #0]
 1274 0080 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1275 0082 002B     		cmp	r3, #0
 1276 0084 10D0     		beq	.L79
 680:..//common/src/lpc17xx_timer.c **** 		TIMx->CCR |= TIM_CAP_RISING(TIM_CaptureConfigStruct->CaptureChannel);
 1277              		.loc 1 680 0
 1278 0086 7B68     		ldr	r3, [r7, #4]
 1279 0088 996A     		ldr	r1, [r3, #40]
 1280 008a 3B68     		ldr	r3, [r7, #0]
 1281 008c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1282 008e 1A46     		mov	r2, r3
 1283 0090 1346     		mov	r3, r2
 1284 0092 4FEA4303 		lsl	r3, r3, #1
 1285 0096 1344     		add	r3, r3, r2
 1286 0098 4FF00102 		mov	r2, #1
 1287 009c 02FA03F3 		lsl	r3, r2, r3
 1288 00a0 41EA0302 		orr	r2, r1, r3
 1289 00a4 7B68     		ldr	r3, [r7, #4]
 1290 00a6 9A62     		str	r2, [r3, #40]
 1291              	.L79:
 681:..//common/src/lpc17xx_timer.c **** 
 682:..//common/src/lpc17xx_timer.c **** 	if (TIM_CaptureConfigStruct->FallingEdge)
 1292              		.loc 1 682 0
 1293 00a8 3B68     		ldr	r3, [r7, #0]
 1294 00aa 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1295 00ac 002B     		cmp	r3, #0
 1296 00ae 12D0     		beq	.L80
 683:..//common/src/lpc17xx_timer.c **** 		TIMx->CCR |= TIM_CAP_FALLING(TIM_CaptureConfigStruct->CaptureChannel);
 1297              		.loc 1 683 0
 1298 00b0 7B68     		ldr	r3, [r7, #4]
 1299 00b2 996A     		ldr	r1, [r3, #40]
 1300 00b4 3B68     		ldr	r3, [r7, #0]
 1301 00b6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1302 00b8 1A46     		mov	r2, r3
 1303 00ba 1346     		mov	r3, r2
 1304 00bc 4FEA4303 		lsl	r3, r3, #1
 1305 00c0 1344     		add	r3, r3, r2
 1306 00c2 03F10103 		add	r3, r3, #1
 1307 00c6 4FF00102 		mov	r2, #1
 1308 00ca 02FA03F3 		lsl	r3, r2, r3
 1309 00ce 41EA0302 		orr	r2, r1, r3
 1310 00d2 7B68     		ldr	r3, [r7, #4]
 1311 00d4 9A62     		str	r2, [r3, #40]
 1312              	.L80:
 684:..//common/src/lpc17xx_timer.c **** 
 685:..//common/src/lpc17xx_timer.c **** 	if (TIM_CaptureConfigStruct->IntOnCaption)
 1313              		.loc 1 685 0
 1314 00d6 3B68     		ldr	r3, [r7, #0]
 1315 00d8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1316 00da 002B     		cmp	r3, #0
 1317 00dc 12D0     		beq	.L82
 686:..//common/src/lpc17xx_timer.c **** 		TIMx->CCR |= TIM_INT_ON_CAP(TIM_CaptureConfigStruct->CaptureChannel);
 1318              		.loc 1 686 0
 1319 00de 7B68     		ldr	r3, [r7, #4]
 1320 00e0 996A     		ldr	r1, [r3, #40]
 1321 00e2 3B68     		ldr	r3, [r7, #0]
 1322 00e4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1323 00e6 1A46     		mov	r2, r3
 1324 00e8 1346     		mov	r3, r2
 1325 00ea 4FEA4303 		lsl	r3, r3, #1
 1326 00ee 1344     		add	r3, r3, r2
 1327 00f0 03F10203 		add	r3, r3, #2
 1328 00f4 4FF00102 		mov	r2, #1
 1329 00f8 02FA03F3 		lsl	r3, r2, r3
 1330 00fc 41EA0302 		orr	r2, r1, r3
 1331 0100 7B68     		ldr	r3, [r7, #4]
 1332 0102 9A62     		str	r2, [r3, #40]
 1333              	.L82:
 687:..//common/src/lpc17xx_timer.c **** }
 1334              		.loc 1 687 0
 1335 0104 07F10807 		add	r7, r7, #8
 1336 0108 BD46     		mov	sp, r7
 1337 010a 80BD     		pop	{r7, pc}
 1338              		.cfi_endproc
 1339              	.LFE43:
 1341              		.section	.text.TIM_GetCaptureValue,"ax",%progbits
 1342              		.align	2
 1343              		.global	TIM_GetCaptureValue
 1344              		.thumb
 1345              		.thumb_func
 1347              	TIM_GetCaptureValue:
 1348              	.LFB44:
 688:..//common/src/lpc17xx_timer.c **** 
 689:..//common/src/lpc17xx_timer.c **** /*********************************************************************//**
 690:..//common/src/lpc17xx_timer.c ****  * @brief 		Read value of capture register in timer/counter device
 691:..//common/src/lpc17xx_timer.c ****  * @param[in]	TIMx Pointer to timer/counter device, should be:
 692:..//common/src/lpc17xx_timer.c ****  *  			- LPC_TIM0: TIMER0 peripheral
 693:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM1: TIMER1 peripheral
 694:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM2: TIMER2 peripheral
 695:..//common/src/lpc17xx_timer.c ****  * 				- LPC_TIM3: TIMER3 peripheral
 696:..//common/src/lpc17xx_timer.c ****  * @param[in]	CaptureChannel: capture channel number, should be:
 697:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_INCAP0: CAPn.0 input pin for TIMERn
 698:..//common/src/lpc17xx_timer.c ****  * 				- TIM_COUNTER_INCAP1: CAPn.1 input pin for TIMERn
 699:..//common/src/lpc17xx_timer.c ****  * @return 		Value of capture register
 700:..//common/src/lpc17xx_timer.c ****  **********************************************************************/
 701:..//common/src/lpc17xx_timer.c **** uint32_t TIM_GetCaptureValue(LPC_TIM_TypeDef *TIMx, TIM_COUNTER_INPUT_OPT CaptureChannel)
 702:..//common/src/lpc17xx_timer.c **** {
 1349              		.loc 1 702 0
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 8
 1352              		@ frame_needed = 1, uses_anonymous_args = 0
 1353              		@ link register save eliminated.
 1354 0000 80B4     		push	{r7}
 1355              	.LCFI45:
 1356              		.cfi_def_cfa_offset 4
 1357 0002 83B0     		sub	sp, sp, #12
 1358              	.LCFI46:
 1359              		.cfi_def_cfa_offset 16
 1360 0004 00AF     		add	r7, sp, #0
 1361              		.cfi_offset 7, -4
 1362              	.LCFI47:
 1363              		.cfi_def_cfa_register 7
 1364 0006 7860     		str	r0, [r7, #4]
 1365 0008 0B46     		mov	r3, r1
 1366 000a FB70     		strb	r3, [r7, #3]
 703:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIMx(TIMx));
 704:..//common/src/lpc17xx_timer.c **** 	// CHECK_PARAM(PARAM_TIM_COUNTER_INPUT_OPT(CaptureChannel));
 705:..//common/src/lpc17xx_timer.c **** 
 706:..//common/src/lpc17xx_timer.c **** 	if(CaptureChannel==0)
 1367              		.loc 1 706 0
 1368 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1369 000e 002B     		cmp	r3, #0
 1370 0010 02D1     		bne	.L84
 707:..//common/src/lpc17xx_timer.c **** 		return TIMx->CR0;
 1371              		.loc 1 707 0
 1372 0012 7B68     		ldr	r3, [r7, #4]
 1373 0014 DB6A     		ldr	r3, [r3, #44]
 1374 0016 01E0     		b	.L85
 1375              	.L84:
 708:..//common/src/lpc17xx_timer.c **** 	else
 709:..//common/src/lpc17xx_timer.c **** 		return TIMx->CR1;
 1376              		.loc 1 709 0
 1377 0018 7B68     		ldr	r3, [r7, #4]
 1378 001a 1B6B     		ldr	r3, [r3, #48]
 1379              	.L85:
 710:..//common/src/lpc17xx_timer.c **** }
 1380              		.loc 1 710 0
 1381 001c 1846     		mov	r0, r3
 1382 001e 07F10C07 		add	r7, r7, #12
 1383 0022 BD46     		mov	sp, r7
 1384 0024 80BC     		pop	{r7}
 1385 0026 7047     		bx	lr
 1386              		.cfi_endproc
 1387              	.LFE44:
 1389              		.text
 1390              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 lpc17xx_timer.c
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:24     .text.getPClock:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:28     .text.getPClock:00000000 getPClock
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:55     .text.getPClock:00000014 $d
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:61     .text.getPClock:00000024 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:110    .text.converUSecToVal:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:114    .text.converUSecToVal:00000000 converUSecToVal
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:177    .text.converPtrToTimeNum:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:181    .text.converPtrToTimeNum:00000000 converPtrToTimeNum
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:257    .text.TIM_GetIntStatus:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:262    .text.TIM_GetIntStatus:00000000 TIM_GetIntStatus
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:313    .text.TIM_GetIntCaptureStatus:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:318    .text.TIM_GetIntCaptureStatus:00000000 TIM_GetIntCaptureStatus
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:370    .text.TIM_ClearIntPending:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:375    .text.TIM_ClearIntPending:00000000 TIM_ClearIntPending
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:413    .text.TIM_ClearIntCapturePending:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:418    .text.TIM_ClearIntCapturePending:00000000 TIM_ClearIntCapturePending
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:457    .text.TIM_ConfigStructInit:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:462    .text.TIM_ConfigStructInit:00000000 TIM_ConfigStructInit
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:520    .text.TIM_Init:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:525    .text.TIM_Init:00000000 TIM_Init
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:721    .text.TIM_DeInit:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:726    .text.TIM_DeInit:00000000 TIM_DeInit
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:811    .text.TIM_Cmd:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:816    .text.TIM_Cmd:00000000 TIM_Cmd
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:864    .text.TIM_ResetCounter:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:869    .text.TIM_ResetCounter:00000000 TIM_ResetCounter
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:908    .text.TIM_ConfigMatch:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:913    .text.TIM_ConfigMatch:00000000 TIM_ConfigMatch
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:941    .text.TIM_ConfigMatch:00000018 $d
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:947    .text.TIM_ConfigMatch:00000028 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:1094   .rodata:00000000 $d
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:1095   .rodata:00000000 .LC0
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:1098   .text.TIM_UpdateMatchValue:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:1103   .text.TIM_UpdateMatchValue:00000000 TIM_UpdateMatchValue
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:1160   .text.TIM_UpdateMatchValue:00000068 $d
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:1166   .text.TIM_UpdateMatchValue:00000078 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:1205   .text.TIM_ConfigCapture:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:1210   .text.TIM_ConfigCapture:00000000 TIM_ConfigCapture
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:1342   .text.TIM_GetCaptureValue:00000000 $t
C:\Users\hdhed\AppData\Local\Temp\ccAMi1te.s:1347   .text.TIM_GetCaptureValue:00000000 TIM_GetCaptureValue
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CLKPWR_GetPCLK
__aeabi_uldivmod
CLKPWR_ConfigPPWR
CLKPWR_SetPCLKDiv
check_failed
